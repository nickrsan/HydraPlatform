<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:soap12enc="http://www.w3.org/2003/05/soap-encoding/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="hydra.base" xmlns:senc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:s0="soap_server.hydra_complexmodels" xmlns:s1="spyne.model.primitive" xmlns:soap12env="http://www.w3.org/2003/05/soap-envelope/" xmlns:wsa="http://schemas.xmlsoap.org/ws/2003/03/addressing" xmlns:plink="http://schemas.xmlsoap.org/ws/2003/05/partner-link/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:senv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xop="http://www.w3.org/2004/08/xop/include" name="HydraSoapApplication" targetNamespace="hydra.base" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <xs:schema elementFormDefault="qualified" targetNamespace="spyne.model.primitive">
      <xs:simpleType name="MandatoryString">
        <xs:restriction base="xs:string">
          <xs:minLength value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
    <xs:schema elementFormDefault="qualified" targetNamespace="soap_server.hydra_complexmodels">
      <xs:import namespace="hydra.base" />
      <xs:complexType name="Attr">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="dimen" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="Dataset_lockedType">
        <xs:restriction base="xs:string">
          <xs:pattern value="[YN]" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="Metadata">
        <xs:sequence>
          <xs:element name="name" nillable="true" type="xs:string" />
          <xs:element name="value" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MetadataArray">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Metadata" nillable="true" type="s0:Metadata" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Dataset">
        <xs:sequence>
          <xs:element name="id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="type" nillable="true" type="xs:string" />
          <xs:element name="dimension" nillable="true" type="xs:string" />
          <xs:element name="unit" nillable="true" type="xs:string" />
          <xs:element name="name" nillable="true" type="xs:string" />
          <xs:element name="value" nillable="true" type="xs:anyType" />
          <xs:element default="N" name="locked" nillable="true" type="s0:Dataset_lockedType" />
          <xs:element minOccurs="0" name="metadata" nillable="true" type="s0:MetadataArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DatasetGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="group_name" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="group_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="dataset_ids" nillable="true" type="tns:integerArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="Link_statusType">
        <xs:restriction base="xs:string">
          <xs:pattern value="[AX]" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="ResourceScenario">
        <xs:sequence>
          <xs:element minOccurs="0" name="resource_attr_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="attr_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="value" nillable="true" type="s0:Dataset" />
          <xs:element minOccurs="0" name="source" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ResourceAttr">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="attr_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="ref_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="ref_key" nillable="true" type="xs:string" />
          <xs:element default="N" name="attr_is_var" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="resourcescenario" nillable="true" type="s0:ResourceScenario" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ResourceAttrArray">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ResourceAttr" nillable="true" type="s0:ResourceAttr" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TypeSummary">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="template_name" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="template_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TypeSummaryArray">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="TypeSummary" nillable="true" type="s0:TypeSummary" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Link">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string" />
          <xs:element default="" name="description" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="layout" nillable="true" type="xs:anyType" />
          <xs:element minOccurs="0" name="node_1_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="node_2_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" default="A" name="status" nillable="true" type="s0:Link_statusType" />
          <xs:element minOccurs="0" name="attributes" nillable="true" type="s0:ResourceAttrArray" />
          <xs:element minOccurs="0" name="types" nillable="true" type="s0:TypeSummaryArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="Network_statusType">
        <xs:restriction base="xs:string">
          <xs:pattern value="[AX]" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Scenario_statusType">
        <xs:restriction base="xs:string">
          <xs:pattern value="[AX]" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Scenario_lockedType">
        <xs:restriction base="xs:string">
          <xs:pattern value="[YN]" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="ResourceScenarioArray">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ResourceScenario" nillable="true" type="s0:ResourceScenario" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ResourceGroupItem">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="ref_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="ref_key" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="group_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ResourceGroupItemArray">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ResourceGroupItem" nillable="true" type="s0:ResourceGroupItem" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Scenario">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string" />
          <xs:element default="" name="description" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="network_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="layout" nillable="true" type="xs:anyType" />
          <xs:element minOccurs="0" default="A" name="status" nillable="true" type="s0:Scenario_statusType" />
          <xs:element minOccurs="0" default="N" name="locked" nillable="true" type="s0:Scenario_lockedType" />
          <xs:element minOccurs="0" name="start_time" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="end_time" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="time_step" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="resourcescenarios" nillable="true" type="s0:ResourceScenarioArray" />
          <xs:element minOccurs="0" name="resourcegroupitems" nillable="true" type="s0:ResourceGroupItemArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ScenarioArray">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Scenario" nillable="true" type="s0:Scenario" />
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="Node_statusType">
        <xs:restriction base="xs:string">
          <xs:pattern value="[AX]" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="Node">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string" />
          <xs:element default="" name="description" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="layout" nillable="true" type="xs:anyType" />
          <xs:element default="0" name="x" nillable="true" type="xs:decimal" />
          <xs:element default="0" name="y" nillable="true" type="xs:decimal" />
          <xs:element minOccurs="0" default="A" name="status" nillable="true" type="s0:Node_statusType" />
          <xs:element minOccurs="0" name="attributes" nillable="true" type="s0:ResourceAttrArray" />
          <xs:element minOccurs="0" name="types" nillable="true" type="s0:TypeSummaryArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="NodeArray">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Node" nillable="true" type="s0:Node" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LinkArray">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Link" nillable="true" type="s0:Link" />
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="ResourceGroup_statusType">
        <xs:restriction base="xs:string">
          <xs:pattern value="[AX]" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="ResourceGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="network_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string" />
          <xs:element default="" name="description" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" default="A" name="status" nillable="true" type="s0:ResourceGroup_statusType" />
          <xs:element minOccurs="0" name="attributes" nillable="true" type="s0:ResourceAttrArray" />
          <xs:element minOccurs="0" name="types" nillable="true" type="s0:TypeSummaryArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ResourceGroupArray">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ResourceGroup" nillable="true" type="s0:ResourceGroup" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Network">
        <xs:sequence>
          <xs:element minOccurs="0" name="project_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string" />
          <xs:element name="description" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="created_by" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="cr_date" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="layout" nillable="true" type="xs:anyType" />
          <xs:element minOccurs="0" default="A" name="status" nillable="true" type="s0:Network_statusType" />
          <xs:element minOccurs="0" name="attributes" nillable="true" type="s0:ResourceAttrArray" />
          <xs:element minOccurs="0" name="scenarios" nillable="true" type="s0:ScenarioArray" />
          <xs:element minOccurs="0" name="nodes" nillable="true" type="s0:NodeArray" />
          <xs:element minOccurs="0" name="links" nillable="true" type="s0:LinkArray" />
          <xs:element minOccurs="0" name="resourcegroups" nillable="true" type="s0:ResourceGroupArray" />
          <xs:element minOccurs="0" name="types" nillable="true" type="s0:TypeSummaryArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Perm">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Resource" />
      <xs:complexType name="RolePerm">
        <xs:sequence>
          <xs:element minOccurs="0" name="perm_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RolePermArray">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="RolePerm" nillable="true" type="s0:RolePerm" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RoleUser">
        <xs:sequence>
          <xs:element minOccurs="0" name="user_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RoleUserArray">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="RoleUser" nillable="true" type="s0:RoleUser" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Role">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="roleperms" nillable="true" type="s0:RolePermArray" />
          <xs:element minOccurs="0" name="roleusers" nillable="true" type="s0:RoleUserArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="TemplateType_resource_typeType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="GROUP" />
          <xs:enumeration value="NODE" />
          <xs:enumeration value="LINK" />
          <xs:enumeration value="NETWORK" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="TypeAttr">
        <xs:sequence>
          <xs:element name="attr_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="attr_name" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="type_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="data_type" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="dimension" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="default_dataset_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="data_restriction" nillable="true" type="xs:anyType" />
          <xs:element minOccurs="0" name="is_var" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TypeAttrArray">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="TypeAttr" nillable="true" type="s0:TypeAttr" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TemplateType">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="resource_type" nillable="true" type="s0:TemplateType_resource_typeType" />
          <xs:element minOccurs="0" name="alias" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="layout" nillable="true" type="xs:anyType" />
          <xs:element name="template_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="typeattrs" nillable="true" type="s0:TypeAttrArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TemplateTypeArray">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="TemplateType" nillable="true" type="s0:TemplateType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Template">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="layout" nillable="true" type="xs:anyType" />
          <xs:element minOccurs="0" name="types" nillable="true" type="s0:TemplateTypeArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Unit">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="abbr" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="cf" nillable="true" type="xs:double" />
          <xs:element minOccurs="0" name="lf" nillable="true" type="xs:double" />
          <xs:element minOccurs="0" name="info" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="dimension" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="User">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="username" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="display_name" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="password" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RoleArray">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Role" nillable="true" type="s0:Role" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AttrArray">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Attr" nillable="true" type="s0:Attr" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ResourceData">
        <xs:sequence>
          <xs:element minOccurs="0" name="attr_id" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="scenario_id" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="resource_attr_id" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="ref_id" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="ref_key" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="attr_is_var" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="dataset_id" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="dataset_type" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="dataset_dimension" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="dataset_unit" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="dataset_name" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="dataset_value" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="dataset_frequency" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="dataset_locked" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="dataset_metadata" nillable="true" type="xs:anyType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ResourceDataArray">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ResourceData" nillable="true" type="s0:ResourceData" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DatasetArray">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Dataset" nillable="true" type="s0:Dataset" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PermArray">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Perm" nillable="true" type="s0:Perm" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Array">
        <xs:sequence>
          <xs:element minOccurs="0" name="arr_data" nillable="true" type="xs:anyType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AttributeData">
        <xs:sequence>
          <xs:element minOccurs="0" name="resourceattrs" nillable="true" type="s0:ResourceAttrArray" />
          <xs:element minOccurs="0" name="resourcescenarios" nillable="true" type="s0:ResourceScenarioArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Descriptor">
        <xs:sequence>
          <xs:element minOccurs="0" name="desc_val" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="EqTimeSeries">
        <xs:sequence>
          <xs:element minOccurs="0" name="start_time" nillable="true" type="xs:dateTime" />
          <xs:element minOccurs="0" name="frequency" nillable="true" type="xs:decimal" />
          <xs:element minOccurs="0" name="arr_data" nillable="true" type="xs:anyType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LoginResponse">
        <xs:sequence>
          <xs:element name="session_id" nillable="true" type="xs:string" />
          <xs:element name="user_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="NetworkExtents">
        <xs:sequence>
          <xs:element minOccurs="0" name="network_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" default="0" name="min_x" nillable="true" type="xs:decimal" />
          <xs:element minOccurs="0" default="0" name="min_y" nillable="true" type="xs:decimal" />
          <xs:element minOccurs="0" default="0" name="max_x" nillable="true" type="xs:decimal" />
          <xs:element minOccurs="0" default="0" name="max_y" nillable="true" type="xs:decimal" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PluginParam">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ProjectSummary">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="cr_date" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="created_by" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ResourceGroupDiff">
        <xs:sequence>
          <xs:element minOccurs="0" name="scenario_1_items" nillable="true" type="s0:ResourceGroupItemArray" />
          <xs:element minOccurs="0" name="scenario_2_items" nillable="true" type="s0:ResourceGroupItemArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ResourceSummary">
        <xs:sequence>
          <xs:element minOccurs="0" name="ref_key" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string" />
          <xs:element default="" name="description" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="attributes" nillable="true" type="s0:ResourceAttrArray" />
          <xs:element minOccurs="0" name="types" nillable="true" type="s0:TypeSummaryArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ResourceTypeDef">
        <xs:sequence>
          <xs:element minOccurs="0" name="ref_key" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="ref_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="type_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Scalar">
        <xs:sequence>
          <xs:element minOccurs="0" name="param_value" nillable="true" type="xs:float" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TimeSeriesData">
        <xs:sequence>
          <xs:element minOccurs="0" name="ts_time" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="ts_value" nillable="true" type="xs:anyType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DatasetGroupArray">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="DatasetGroup" nillable="true" type="s0:DatasetGroup" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="UnitArray">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Unit" nillable="true" type="s0:Unit" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="NetworkArray">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Network" nillable="true" type="s0:Network" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TemplateArray">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Template" nillable="true" type="s0:Template" />
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="Project_statusType">
        <xs:restriction base="xs:string">
          <xs:pattern value="[AX]" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="Project">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" default="A" name="status" nillable="true" type="s0:Project_statusType" />
          <xs:element minOccurs="0" name="cr_date" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="created_by" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="attributes" nillable="true" type="s0:ResourceAttrArray" />
          <xs:element minOccurs="0" name="attribute_data" nillable="true" type="s0:ResourceScenarioArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ResourceTypeDefArray">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ResourceTypeDef" nillable="true" type="s0:ResourceTypeDef" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ProjectSummaryArray">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ProjectSummary" nillable="true" type="s0:ProjectSummary" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="UserArray">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="User" nillable="true" type="s0:User" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ResourceSummaryArray">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ResourceSummary" nillable="true" type="s0:ResourceSummary" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PluginParamArray">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="PluginParam" nillable="true" type="s0:PluginParam" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TimeSeriesDataArray">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="TimeSeriesData" nillable="true" type="s0:TimeSeriesData" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Plugin">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="location" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="params" nillable="true" type="s0:PluginParamArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TimeSeries">
        <xs:sequence>
          <xs:element minOccurs="0" name="ts_values" nillable="true" type="s0:TimeSeriesDataArray" />
          <xs:element minOccurs="0" name="frequency" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="periods" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ResourceScenarioDiff">
        <xs:sequence>
          <xs:element minOccurs="0" name="resource_attr_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="scenario_1_dataset" nillable="true" type="s0:Dataset" />
          <xs:element minOccurs="0" name="scenario_2_dataset" nillable="true" type="s0:Dataset" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ResourceScenarioDiffArray">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ResourceScenarioDiff" nillable="true" type="s0:ResourceScenarioDiff" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ScenarioDiff">
        <xs:sequence>
          <xs:element minOccurs="0" name="resourcescenarios" nillable="true" type="s0:ResourceScenarioDiffArray" />
          <xs:element minOccurs="0" name="groups" nillable="true" type="s0:ResourceGroupDiff" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="Attr" type="s0:Attr" />
      <xs:element name="Metadata" type="s0:Metadata" />
      <xs:element name="MetadataArray" type="s0:MetadataArray" />
      <xs:element name="Dataset" type="s0:Dataset" />
      <xs:element name="DatasetGroup" type="s0:DatasetGroup" />
      <xs:element name="ResourceScenario" type="s0:ResourceScenario" />
      <xs:element name="ResourceAttr" type="s0:ResourceAttr" />
      <xs:element name="ResourceAttrArray" type="s0:ResourceAttrArray" />
      <xs:element name="TypeSummary" type="s0:TypeSummary" />
      <xs:element name="TypeSummaryArray" type="s0:TypeSummaryArray" />
      <xs:element name="Link" type="s0:Link" />
      <xs:element name="ResourceScenarioArray" type="s0:ResourceScenarioArray" />
      <xs:element name="ResourceGroupItem" type="s0:ResourceGroupItem" />
      <xs:element name="ResourceGroupItemArray" type="s0:ResourceGroupItemArray" />
      <xs:element name="Scenario" type="s0:Scenario" />
      <xs:element name="ScenarioArray" type="s0:ScenarioArray" />
      <xs:element name="Node" type="s0:Node" />
      <xs:element name="NodeArray" type="s0:NodeArray" />
      <xs:element name="LinkArray" type="s0:LinkArray" />
      <xs:element name="ResourceGroup" type="s0:ResourceGroup" />
      <xs:element name="ResourceGroupArray" type="s0:ResourceGroupArray" />
      <xs:element name="Network" type="s0:Network" />
      <xs:element name="Perm" type="s0:Perm" />
      <xs:element name="Resource" type="s0:Resource" />
      <xs:element name="RolePerm" type="s0:RolePerm" />
      <xs:element name="RolePermArray" type="s0:RolePermArray" />
      <xs:element name="RoleUser" type="s0:RoleUser" />
      <xs:element name="RoleUserArray" type="s0:RoleUserArray" />
      <xs:element name="Role" type="s0:Role" />
      <xs:element name="TypeAttr" type="s0:TypeAttr" />
      <xs:element name="TypeAttrArray" type="s0:TypeAttrArray" />
      <xs:element name="TemplateType" type="s0:TemplateType" />
      <xs:element name="TemplateTypeArray" type="s0:TemplateTypeArray" />
      <xs:element name="Template" type="s0:Template" />
      <xs:element name="Unit" type="s0:Unit" />
      <xs:element name="User" type="s0:User" />
      <xs:element name="RoleArray" type="s0:RoleArray" />
      <xs:element name="AttrArray" type="s0:AttrArray" />
      <xs:element name="ResourceData" type="s0:ResourceData" />
      <xs:element name="ResourceDataArray" type="s0:ResourceDataArray" />
      <xs:element name="DatasetArray" type="s0:DatasetArray" />
      <xs:element name="PermArray" type="s0:PermArray" />
      <xs:element name="Array" type="s0:Array" />
      <xs:element name="AttributeData" type="s0:AttributeData" />
      <xs:element name="Descriptor" type="s0:Descriptor" />
      <xs:element name="EqTimeSeries" type="s0:EqTimeSeries" />
      <xs:element name="LoginResponse" type="s0:LoginResponse" />
      <xs:element name="NetworkExtents" type="s0:NetworkExtents" />
      <xs:element name="PluginParam" type="s0:PluginParam" />
      <xs:element name="ProjectSummary" type="s0:ProjectSummary" />
      <xs:element name="ResourceGroupDiff" type="s0:ResourceGroupDiff" />
      <xs:element name="ResourceSummary" type="s0:ResourceSummary" />
      <xs:element name="ResourceTypeDef" type="s0:ResourceTypeDef" />
      <xs:element name="Scalar" type="s0:Scalar" />
      <xs:element name="TimeSeriesData" type="s0:TimeSeriesData" />
      <xs:element name="DatasetGroupArray" type="s0:DatasetGroupArray" />
      <xs:element name="UnitArray" type="s0:UnitArray" />
      <xs:element name="NetworkArray" type="s0:NetworkArray" />
      <xs:element name="TemplateArray" type="s0:TemplateArray" />
      <xs:element name="Project" type="s0:Project" />
      <xs:element name="ResourceTypeDefArray" type="s0:ResourceTypeDefArray" />
      <xs:element name="ProjectSummaryArray" type="s0:ProjectSummaryArray" />
      <xs:element name="UserArray" type="s0:UserArray" />
      <xs:element name="ResourceSummaryArray" type="s0:ResourceSummaryArray" />
      <xs:element name="PluginParamArray" type="s0:PluginParamArray" />
      <xs:element name="TimeSeriesDataArray" type="s0:TimeSeriesDataArray" />
      <xs:element name="Plugin" type="s0:Plugin" />
      <xs:element name="TimeSeries" type="s0:TimeSeries" />
      <xs:element name="ResourceScenarioDiff" type="s0:ResourceScenarioDiff" />
      <xs:element name="ResourceScenarioDiffArray" type="s0:ResourceScenarioDiffArray" />
      <xs:element name="ScenarioDiff" type="s0:ScenarioDiff" />
    </xs:schema>
    <xs:schema elementFormDefault="qualified" targetNamespace="hydra.base">
      <xs:import namespace="spyne.model.primitive" />
      <xs:import namespace="soap_server.hydra_complexmodels" />
      <xs:complexType name="AuthenticationError" />
      <xs:complexType name="integerArray">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="integer" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="stringArray">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="check_jsonResponse" />
      <xs:complexType name="get_all_perms" />
      <xs:complexType name="get_all_roles" />
      <xs:complexType name="get_all_users" />
      <xs:complexType name="get_attributes" />
      <xs:complexType name="get_dimensions" />
      <xs:complexType name="get_plugins" />
      <xs:complexType name="get_templates" />
      <xs:complexType name="RequestHeader">
        <xs:sequence>
          <xs:element minOccurs="0" name="username" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="user_id" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="app_name" nillable="true" type="xs:string" />
          <xs:element name="session_id" type="s1:MandatoryString" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="activate_group">
        <xs:sequence>
          <xs:element minOccurs="0" name="group_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="activate_groupResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="activate_groupResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="activate_link">
        <xs:sequence>
          <xs:element minOccurs="0" name="link_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="activate_linkResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="activate_linkResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="activate_network">
        <xs:sequence>
          <xs:element minOccurs="0" name="network_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="activate_networkResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="activate_networkResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="activate_node">
        <xs:sequence>
          <xs:element minOccurs="0" name="node_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="activate_nodeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="activate_nodeResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="activate_scenario">
        <xs:sequence>
          <xs:element minOccurs="0" name="scenario_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="activate_scenarioResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="activate_scenarioResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_attributesResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="add_attributesResult" nillable="true" type="s0:AttrArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_dimension">
        <xs:sequence>
          <xs:element minOccurs="0" name="dimension" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_dimensionResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="add_dimensionResult" nillable="true" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_file">
        <xs:sequence>
          <xs:element minOccurs="0" name="resource_type" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="resource_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="file" nillable="true" type="xs:base64Binary" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_fileResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="add_fileResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_group">
        <xs:sequence>
          <xs:element minOccurs="0" name="network_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="group" nillable="true" type="s0:ResourceGroup" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_groupResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="add_groupResult" nillable="true" type="s0:ResourceGroup" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_image">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="file" nillable="true" type="xs:base64Binary" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_imageResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="add_imageResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_link">
        <xs:sequence>
          <xs:element minOccurs="0" name="network_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="link" nillable="true" type="s0:Link" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_linkResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="add_linkResult" nillable="true" type="s0:Link" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_node">
        <xs:sequence>
          <xs:element minOccurs="0" name="network_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="node" nillable="true" type="s0:Node" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_nodeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="add_nodeResult" nillable="true" type="s0:Node" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_node_attrs_from_type">
        <xs:sequence>
          <xs:element minOccurs="0" name="type_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="resource_type" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="resource_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_node_attrs_from_typeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="add_node_attrs_from_typeResult" nillable="true" type="s0:Resource" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_resource_attribute">
        <xs:sequence>
          <xs:element minOccurs="0" name="resource_type" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="resource_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="attr_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="is_var" nillable="true" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_resource_attributeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="add_resource_attributeResult" nillable="true" type="s0:Resource" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_resourcegroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="group" nillable="true" type="s0:ResourceGroup" />
          <xs:element minOccurs="0" name="network_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_resourcegroupResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="add_resourcegroupResult" nillable="true" type="s0:ResourceGroup" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_resourcegroupitem">
        <xs:sequence>
          <xs:element minOccurs="0" name="group_item" nillable="true" type="s0:ResourceGroupItem" />
          <xs:element minOccurs="0" name="scenario_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_resourcegroupitemResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="add_resourcegroupitemResult" nillable="true" type="s0:Scenario" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_role">
        <xs:sequence>
          <xs:element minOccurs="0" name="role" nillable="true" type="s0:Role" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_roleResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="add_roleResult" nillable="true" type="s0:Role" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_scenario">
        <xs:sequence>
          <xs:element minOccurs="0" name="network_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="scen" nillable="true" type="s0:Scenario" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_scenarioResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="add_scenarioResult" nillable="true" type="s0:Scenario" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_templatetype">
        <xs:sequence>
          <xs:element minOccurs="0" name="templatetype" nillable="true" type="s0:TemplateType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_templatetypeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="add_templatetypeResult" nillable="true" type="s0:TemplateType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_typeattr">
        <xs:sequence>
          <xs:element minOccurs="0" name="typeattr" nillable="true" type="s0:TypeAttr" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_typeattrResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="add_typeattrResult" nillable="true" type="s0:TemplateType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_unitResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="add_unitResult" nillable="true" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_user">
        <xs:sequence>
          <xs:element minOccurs="0" name="user" nillable="true" type="s0:User" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_userResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="add_userResult" nillable="true" type="s0:User" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="apply_template_to_network">
        <xs:sequence>
          <xs:element minOccurs="0" name="template_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="network_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="apply_template_to_networkResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="apply_template_to_networkResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="assign_type_to_resource">
        <xs:sequence>
          <xs:element minOccurs="0" name="type_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="resource_type" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="resource_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="assign_type_to_resourceResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="assign_type_to_resourceResult" nillable="true" type="s0:TypeSummary" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="assign_types_to_resourcesResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="assign_types_to_resourcesResult" nillable="true" type="s0:TemplateTypeArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="bulk_insert_data">
        <xs:sequence>
          <xs:element minOccurs="0" name="bulk_data" nillable="true" type="s0:DatasetArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="bulk_insert_dataResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="bulk_insert_dataResult" nillable="true" type="tns:integerArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="check_consistency">
        <xs:sequence>
          <xs:element minOccurs="0" name="unit" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="dimension" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="check_consistencyResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="check_consistencyResult" nillable="true" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="check_json">
        <xs:sequence>
          <xs:element minOccurs="0" name="json_string" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="check_plugin_status">
        <xs:sequence>
          <xs:element minOccurs="0" name="plugin_name" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="pid" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="check_plugin_statusResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="check_plugin_statusResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="clean_up_network">
        <xs:sequence>
          <xs:element minOccurs="0" name="network_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="clean_up_networkResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="clean_up_networkResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="clone_scenario">
        <xs:sequence>
          <xs:element minOccurs="0" name="scenario_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="clone_scenarioResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="clone_scenarioResult" nillable="true" type="s0:Scenario" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="compare_scenarios">
        <xs:sequence>
          <xs:element minOccurs="0" name="scenario_id_1" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="scenario_id_2" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="convert_dataset">
        <xs:sequence>
          <xs:element minOccurs="0" name="dataset_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="to_unit" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="convert_datasetResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="convert_datasetResult" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="convert_units">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="values" nillable="true" type="xs:decimal" />
          <xs:element minOccurs="0" name="unit1" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="unit2" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="convert_unitsResponse">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="convert_unitsResult" nillable="true" type="xs:decimal" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_attribute">
        <xs:sequence>
          <xs:element minOccurs="0" name="attr_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_attributeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="delete_attributeResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_dataset">
        <xs:sequence>
          <xs:element minOccurs="0" name="dataset_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_datasetResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="delete_datasetResult" nillable="true" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_dimension">
        <xs:sequence>
          <xs:element minOccurs="0" name="dimension" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_dimensionResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="delete_dimensionResult" nillable="true" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_group">
        <xs:sequence>
          <xs:element minOccurs="0" name="group_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_groupResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="delete_groupResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_link">
        <xs:sequence>
          <xs:element minOccurs="0" name="link_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_linkResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="delete_linkResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_network">
        <xs:sequence>
          <xs:element minOccurs="0" name="network_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_networkResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="delete_networkResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_node">
        <xs:sequence>
          <xs:element minOccurs="0" name="node_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_nodeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="delete_nodeResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_perm">
        <xs:sequence>
          <xs:element minOccurs="0" name="perm_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_permResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="delete_permResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_project">
        <xs:sequence>
          <xs:element minOccurs="0" name="project_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_projectResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="delete_projectResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_resourceattr">
        <xs:sequence>
          <xs:element minOccurs="0" name="resource_attr_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="purge_data" nillable="true" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_resourceattrResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="delete_resourceattrResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_resourcedataResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="delete_resourcedataResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_resourcegroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="group_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_resourcegroupResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="delete_resourcegroupResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_resourcegroupitem">
        <xs:sequence>
          <xs:element minOccurs="0" name="item_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_resourcegroupitemResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="delete_resourcegroupitemResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_role">
        <xs:sequence>
          <xs:element minOccurs="0" name="role_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_roleResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="delete_roleResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_role_perm">
        <xs:sequence>
          <xs:element minOccurs="0" name="role_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="perm_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_role_permResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="delete_role_permResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_scenario">
        <xs:sequence>
          <xs:element minOccurs="0" name="scenario_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_scenarioResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="delete_scenarioResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_template">
        <xs:sequence>
          <xs:element minOccurs="0" name="template_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_templatetype">
        <xs:sequence>
          <xs:element minOccurs="0" name="type_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_typeattr">
        <xs:sequence>
          <xs:element minOccurs="0" name="typeattr" nillable="true" type="s0:TypeAttr" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_typeattrResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="delete_typeattrResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_unitResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="delete_unitResult" nillable="true" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_user">
        <xs:sequence>
          <xs:element minOccurs="0" name="user_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_userResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="delete_userResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_user_role">
        <xs:sequence>
          <xs:element minOccurs="0" name="user_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="role_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_user_roleResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="delete_user_roleResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_all_group_dataResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_all_group_dataResult" nillable="true" type="s0:ResourceAttrArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_all_link_dataResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_all_link_dataResult" nillable="true" type="s0:ResourceAttrArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_all_node_dataResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_all_node_dataResult" nillable="true" type="s0:ResourceAttrArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_all_permsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_all_permsResult" nillable="true" type="s0:PermArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_all_rolesResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_all_rolesResult" nillable="true" type="s0:RoleArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_attribute">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="dimension" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_attribute_by_id">
        <xs:sequence>
          <xs:element minOccurs="0" name="ID" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_attribute_datasets">
        <xs:sequence>
          <xs:element minOccurs="0" name="attr_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="scenario_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_attribute_datasetsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_attribute_datasetsResult" nillable="true" type="s0:ResourceAttrArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_attributesResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_attributesResult" nillable="true" type="s0:AttrArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_dataset">
        <xs:sequence>
          <xs:element minOccurs="0" name="dataset_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_dataset_group">
        <xs:sequence>
          <xs:element minOccurs="0" name="group_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_dataset_group_by_name">
        <xs:sequence>
          <xs:element minOccurs="0" name="group_name" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_dataset_scenarios">
        <xs:sequence>
          <xs:element minOccurs="0" name="dataset_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_dataset_scenariosResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_dataset_scenariosResult" nillable="true" type="s0:ScenarioArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_dimension">
        <xs:sequence>
          <xs:element minOccurs="0" name="unit1" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_dimensionResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_dimensionResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_dimensionsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_dimensionsResult" nillable="true" type="tns:stringArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_file">
        <xs:sequence>
          <xs:element minOccurs="0" name="resource_type" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="resource_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_fileResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_fileResult" nillable="true" type="xs:base64Binary" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_group_datasets">
        <xs:sequence>
          <xs:element minOccurs="0" name="group_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_group_datasetsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_group_datasetsResult" nillable="true" type="s0:DatasetArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_groups_like_name">
        <xs:sequence>
          <xs:element minOccurs="0" name="group_name" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_image">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_imageResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_imageResult" nillable="true" type="xs:base64Binary" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_link">
        <xs:sequence>
          <xs:element minOccurs="0" name="link_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="scenario_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_linkResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_linkResult" nillable="true" type="s0:Link" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_link_data">
        <xs:sequence>
          <xs:element minOccurs="0" name="link_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="scenario_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="type_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_link_dataResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_link_dataResult" nillable="true" type="s0:ResourceScenarioArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_matching_resource_types">
        <xs:sequence>
          <xs:element minOccurs="0" name="resource_type" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="resource_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_matching_resource_typesResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_matching_resource_typesResult" nillable="true" type="s0:TypeSummaryArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_metadata">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="dataset_ids" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_metadataResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_metadataResult" nillable="true" type="s0:MetadataArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_network_as_xml_template">
        <xs:sequence>
          <xs:element minOccurs="0" name="network_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_network_as_xml_templateResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_network_as_xml_templateResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_network_by_name">
        <xs:sequence>
          <xs:element minOccurs="0" name="project_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="network_name" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_network_data">
        <xs:sequence>
          <xs:element minOccurs="0" name="network_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="scenario_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="type_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_network_dataResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_network_dataResult" nillable="true" type="s0:ResourceScenarioArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_network_extents">
        <xs:sequence>
          <xs:element minOccurs="0" name="network_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_node">
        <xs:sequence>
          <xs:element minOccurs="0" name="node_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="scenario_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_nodeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_nodeResult" nillable="true" type="s0:Node" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_node_attribute_data">
        <xs:sequence>
          <xs:element minOccurs="0" name="node_ids" nillable="true" type="tns:integerArray" />
          <xs:element minOccurs="0" name="attr_ids" nillable="true" type="tns:integerArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_node_data">
        <xs:sequence>
          <xs:element minOccurs="0" name="node_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="scenario_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="type_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_node_dataResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_node_dataResult" nillable="true" type="s0:ResourceScenarioArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_perm">
        <xs:sequence>
          <xs:element minOccurs="0" name="perm_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_perm_by_code">
        <xs:sequence>
          <xs:element minOccurs="0" name="perm_code" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_pluginsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_pluginsResult" nillable="true" type="tns:stringArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_project">
        <xs:sequence>
          <xs:element minOccurs="0" name="project_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_projects">
        <xs:sequence>
          <xs:element minOccurs="0" name="user_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_resourcegroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="group_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="scenario_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_resourcegroupResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_resourcegroupResult" nillable="true" type="s0:ResourceGroup" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_resourcegroup_data">
        <xs:sequence>
          <xs:element minOccurs="0" name="resourcegroup_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="scenario_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="type_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_resourcegroup_dataResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_resourcegroup_dataResult" nillable="true" type="s0:ResourceScenarioArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_resources_of_type">
        <xs:sequence>
          <xs:element minOccurs="0" name="network_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="type_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_role">
        <xs:sequence>
          <xs:element minOccurs="0" name="role_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_roleResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_roleResult" nillable="true" type="s0:Role" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_role_by_code">
        <xs:sequence>
          <xs:element minOccurs="0" name="role_code" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_role_by_codeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_role_by_codeResult" nillable="true" type="s0:Role" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_scenario">
        <xs:sequence>
          <xs:element minOccurs="0" name="scenario_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_scenarioResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_scenarioResult" nillable="true" type="s0:Scenario" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_scenario_data">
        <xs:sequence>
          <xs:element minOccurs="0" name="scenario_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_scenarios">
        <xs:sequence>
          <xs:element minOccurs="0" name="network_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_scenariosResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_scenariosResult" nillable="true" type="s0:ScenarioArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_template">
        <xs:sequence>
          <xs:element minOccurs="0" name="template_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_template_by_name">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_templatetype">
        <xs:sequence>
          <xs:element minOccurs="0" name="type_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_templatetypeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_templatetypeResult" nillable="true" type="s0:TemplateType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_templatetype_by_name">
        <xs:sequence>
          <xs:element minOccurs="0" name="template_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="type_name" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_templatetype_by_nameResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_templatetype_by_nameResult" nillable="true" type="s0:TemplateType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_units">
        <xs:sequence>
          <xs:element minOccurs="0" name="dimension" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_user_by_name">
        <xs:sequence>
          <xs:element minOccurs="0" name="username" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_user_by_nameResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_user_by_nameResult" nillable="true" type="s0:User" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_user_permissions">
        <xs:sequence>
          <xs:element minOccurs="0" name="user_id" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_user_roles">
        <xs:sequence>
          <xs:element minOccurs="0" name="user_id" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_username">
        <xs:sequence>
          <xs:element minOccurs="0" name="uid" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_usernameResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_usernameResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_val_at_timeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_val_at_timeResult" nillable="true" type="xs:anyType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_vals_between_timesResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_vals_between_timesResult" nillable="true" type="xs:anyType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="lock_datasetResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="lock_datasetResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="lock_scenario">
        <xs:sequence>
          <xs:element minOccurs="0" name="scenario_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="lock_scenarioResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="lock_scenarioResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="logout">
        <xs:sequence>
          <xs:element name="username" type="s1:MandatoryString" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="logoutResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="logoutResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="network_exists">
        <xs:sequence>
          <xs:element minOccurs="0" name="project_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="network_name" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="network_existsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="network_existsResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="purge_link">
        <xs:sequence>
          <xs:element minOccurs="0" name="link_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="purge_data" nillable="true" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="purge_linkResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="purge_linkResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="purge_node">
        <xs:sequence>
          <xs:element minOccurs="0" name="node_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="purge_data" nillable="true" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="purge_nodeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="purge_nodeResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="purge_project">
        <xs:sequence>
          <xs:element minOccurs="0" name="project_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="purge_projectResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="purge_projectResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="purge_scenario">
        <xs:sequence>
          <xs:element minOccurs="0" name="scenario_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="purge_scenarioResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="purge_scenarioResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="remove_attr_from_type">
        <xs:sequence>
          <xs:element minOccurs="0" name="type_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="attr_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="remove_attr_from_typeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="remove_attr_from_typeResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="remove_file">
        <xs:sequence>
          <xs:element minOccurs="0" name="resource_type" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="resource_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="remove_fileResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="remove_fileResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="remove_image">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="remove_imageResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="remove_imageResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="remove_template_from_networkResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="remove_template_from_networkResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="remove_type_from_resource">
        <xs:sequence>
          <xs:element minOccurs="0" name="type_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="resource_type" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="resource_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="remove_type_from_resourceResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="remove_type_from_resourceResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="run_pluginResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="run_pluginResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="set_network_permissionResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="set_network_permissionResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="set_project_permissionResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="set_project_permissionResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="set_role_perm">
        <xs:sequence>
          <xs:element minOccurs="0" name="role_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="perm_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="set_role_permResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="set_role_permResult" nillable="true" type="s0:Role" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="set_user_role">
        <xs:sequence>
          <xs:element minOccurs="0" name="user_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="role_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="set_user_roleResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="set_user_roleResult" nillable="true" type="s0:Role" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="share_networkResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="share_networkResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="share_projectResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="share_projectResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="test_get_all_link_dataResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="test_get_all_link_dataResult" nillable="true" type="s0:ResourceDataArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="unlock_scenario">
        <xs:sequence>
          <xs:element minOccurs="0" name="scenario_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="unlock_scenarioResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="unlock_scenarioResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="update_link">
        <xs:sequence>
          <xs:element minOccurs="0" name="link" nillable="true" type="s0:Link" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="update_linkResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="update_linkResult" nillable="true" type="s0:Link" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="update_node">
        <xs:sequence>
          <xs:element minOccurs="0" name="node" nillable="true" type="s0:Node" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="update_nodeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="update_nodeResult" nillable="true" type="s0:Node" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="update_resourcedata">
        <xs:sequence>
          <xs:element minOccurs="0" name="scenario_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="resource_scenarios" nillable="true" type="s0:ResourceScenarioArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="update_resourcedataResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="update_resourcedataResult" nillable="true" type="s0:ResourceScenarioArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="update_resourcegroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="group" nillable="true" type="s0:ResourceGroup" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="update_resourcegroupResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="update_resourcegroupResult" nillable="true" type="s0:ResourceGroup" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="update_role">
        <xs:sequence>
          <xs:element minOccurs="0" name="role" nillable="true" type="s0:Role" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="update_roleResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="update_roleResult" nillable="true" type="s0:Role" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="update_scenario">
        <xs:sequence>
          <xs:element minOccurs="0" name="scen" nillable="true" type="s0:Scenario" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="update_scenarioResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="update_scenarioResult" nillable="true" type="s0:Scenario" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="update_templatetype">
        <xs:sequence>
          <xs:element minOccurs="0" name="templatetype" nillable="true" type="s0:TemplateType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="update_templatetypeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="update_templatetypeResult" nillable="true" type="s0:TemplateType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="update_unitResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="update_unitResult" nillable="true" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="update_user_display_name">
        <xs:sequence>
          <xs:element minOccurs="0" name="user" nillable="true" type="s0:User" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="update_user_display_nameResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="update_user_display_nameResult" nillable="true" type="s0:User" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="update_user_password">
        <xs:sequence>
          <xs:element minOccurs="0" name="user_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="new_password" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="update_user_passwordResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="update_user_passwordResult" nillable="true" type="s0:User" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="upload_template_xml">
        <xs:sequence>
          <xs:element minOccurs="0" name="template_xml" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validate_attr">
        <xs:sequence>
          <xs:element minOccurs="0" name="resource_attr_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="scenario_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="type_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validate_attrResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="validate_attrResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validate_network_topology">
        <xs:sequence>
          <xs:element minOccurs="0" name="network_id" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validate_network_topologyResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="validate_network_topologyResult" nillable="true" type="tns:integerArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="set_project_permission_readType">
        <xs:restriction base="xs:string">
          <xs:pattern value="[YN]" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="set_network_permission_shareType">
        <xs:restriction base="xs:string">
          <xs:pattern value="[YN]" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="set_project_permission_writeType">
        <xs:restriction base="xs:string">
          <xs:pattern value="[YN]" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="set_project_permission_shareType">
        <xs:restriction base="xs:string">
          <xs:pattern value="[YN]" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="lock_dataset_readType">
        <xs:restriction base="xs:string">
          <xs:pattern value="[YN]" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="share_project_read_onlyType">
        <xs:restriction base="xs:string">
          <xs:pattern value="[YN]" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="lock_dataset_writeType">
        <xs:restriction base="xs:string">
          <xs:pattern value="[YN]" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="share_project_shareType">
        <xs:restriction base="xs:string">
          <xs:pattern value="[YN]" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="set_network_permission_readType">
        <xs:restriction base="xs:string">
          <xs:pattern value="[YN]" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="share_network_read_onlyType">
        <xs:restriction base="xs:string">
          <xs:pattern value="[YN]" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="lock_dataset_shareType">
        <xs:restriction base="xs:string">
          <xs:pattern value="[YN]" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="set_network_permission_writeType">
        <xs:restriction base="xs:string">
          <xs:pattern value="[YN]" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="share_network_shareType">
        <xs:restriction base="xs:string">
          <xs:pattern value="[YN]" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="test_get_all_link_data_include_metadataType">
        <xs:restriction base="xs:string">
          <xs:pattern value="['YN']" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="get_vals_between_times_timestepType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="seconds" />
          <xs:enumeration value="minutes" />
          <xs:enumeration value="hours" />
          <xs:enumeration value="days" />
          <xs:enumeration value="months" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="get_network_include_dataType">
        <xs:restriction base="xs:string">
          <xs:pattern value="[YN]" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="test_get_all_node_data_include_metadataType">
        <xs:restriction base="xs:string">
          <xs:pattern value="['YN']" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="get_networks_include_dataType">
        <xs:restriction base="xs:string">
          <xs:pattern value="[YN]" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="get_all_node_data_include_metadataType">
        <xs:restriction base="xs:string">
          <xs:pattern value="['YN']" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="remove_template_from_network_remove_attrsType">
        <xs:restriction base="xs:string">
          <xs:pattern value="[YN]" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="get_all_group_data_include_metadataType">
        <xs:restriction base="xs:string">
          <xs:pattern value="['YN']" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="get_all_link_data_include_metadataType">
        <xs:restriction base="xs:string">
          <xs:pattern value="['YN']" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="add_attribute">
        <xs:sequence>
          <xs:element minOccurs="0" name="attr" nillable="true" type="s0:Attr" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_attributeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="add_attributeResult" nillable="true" type="s0:Attr" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_attributes">
        <xs:sequence>
          <xs:element minOccurs="0" name="attrs" nillable="true" type="s0:AttrArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_dataset_group">
        <xs:sequence>
          <xs:element minOccurs="0" name="group" nillable="true" type="s0:DatasetGroup" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_dataset_groupResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="add_dataset_groupResult" nillable="true" type="s0:DatasetGroup" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_perm">
        <xs:sequence>
          <xs:element minOccurs="0" name="perm" nillable="true" type="s0:Perm" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_permResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="add_permResult" nillable="true" type="s0:Perm" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_unit">
        <xs:sequence>
          <xs:element minOccurs="0" name="unit" nillable="true" type="s0:Unit" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_unit">
        <xs:sequence>
          <xs:element minOccurs="0" name="unit" nillable="true" type="s0:Unit" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_array">
        <xs:sequence>
          <xs:element minOccurs="0" name="x" nillable="true" type="s0:Array" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_arrayResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="echo_arrayResult" nillable="true" type="s0:Array" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_descriptor">
        <xs:sequence>
          <xs:element minOccurs="0" name="x" nillable="true" type="s0:Descriptor" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_descriptorResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="echo_descriptorResult" nillable="true" type="s0:Descriptor" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_eqtimeseries">
        <xs:sequence>
          <xs:element minOccurs="0" name="x" nillable="true" type="s0:EqTimeSeries" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_eqtimeseriesResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="echo_eqtimeseriesResult" nillable="true" type="s0:EqTimeSeries" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_scalar">
        <xs:sequence>
          <xs:element minOccurs="0" name="x" nillable="true" type="s0:Scalar" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_scalarResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="echo_scalarResult" nillable="true" type="s0:Scalar" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_all_group_data">
        <xs:sequence>
          <xs:element minOccurs="0" name="network_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="scenario_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="group_ids" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" default="N" name="include_metadata" nillable="true" type="tns:get_all_group_data_include_metadataType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_all_link_data">
        <xs:sequence>
          <xs:element minOccurs="0" name="network_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="scenario_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="link_ids" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" default="N" name="include_metadata" nillable="true" type="tns:get_all_link_data_include_metadataType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_all_node_data">
        <xs:sequence>
          <xs:element minOccurs="0" name="network_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="scenario_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="node_ids" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" default="N" name="include_metadata" nillable="true" type="tns:get_all_node_data_include_metadataType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_attributeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_attributeResult" nillable="true" type="s0:Attr" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_attribute_by_idResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_attribute_by_idResult" nillable="true" type="s0:Attr" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_dataset_groupResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_dataset_groupResult" nillable="true" type="s0:DatasetGroup" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_dataset_group_by_nameResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_dataset_group_by_nameResult" nillable="true" type="s0:DatasetGroup" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_groups_like_nameResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_groups_like_nameResult" nillable="true" type="s0:DatasetGroupArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_network">
        <xs:sequence>
          <xs:element minOccurs="0" name="network_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" default="Y" name="include_data" nillable="true" type="tns:get_network_include_dataType" />
          <xs:element minOccurs="0" name="template_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="scenario_ids" nillable="true" type="tns:integerArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_network_extentsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_network_extentsResult" nillable="true" type="s0:NetworkExtents" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_networks">
        <xs:sequence>
          <xs:element minOccurs="0" name="project_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" default="Y" name="include_data" nillable="true" type="tns:get_networks_include_dataType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_networksResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_networksResult" nillable="true" type="s0:NetworkArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_node_attribute_dataResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_node_attribute_dataResult" nillable="true" type="s0:AttributeData" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_permResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_permResult" nillable="true" type="s0:Perm" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_perm_by_codeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_perm_by_codeResult" nillable="true" type="s0:Perm" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_scenario_dataResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_scenario_dataResult" nillable="true" type="s0:DatasetArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_templatesResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_templatesResult" nillable="true" type="s0:TemplateArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_unitsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_unitsResult" nillable="true" type="s0:UnitArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_user_permissionsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_user_permissionsResult" nillable="true" type="s0:PermArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_val_at_time">
        <xs:sequence>
          <xs:element minOccurs="0" name="dataset_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="timestamps" nillable="true" type="tns:stringArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_vals_between_times">
        <xs:sequence>
          <xs:element minOccurs="0" name="dataset_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="start_time" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="end_time" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="timestep" nillable="true" type="tns:get_vals_between_times_timestepType" />
          <xs:element minOccurs="0" default="1" name="increment" nillable="true" type="xs:decimal" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="lock_dataset">
        <xs:sequence>
          <xs:element minOccurs="0" name="dataset_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="exceptions" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="read" nillable="true" type="tns:lock_dataset_readType" />
          <xs:element minOccurs="0" name="write" nillable="true" type="tns:lock_dataset_writeType" />
          <xs:element minOccurs="0" name="share" nillable="true" type="tns:lock_dataset_shareType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="login">
        <xs:sequence>
          <xs:element name="username" type="s1:MandatoryString" />
          <xs:element minOccurs="0" name="password" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="loginResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="loginResult" nillable="true" type="s0:LoginResponse" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="remove_template_from_network">
        <xs:sequence>
          <xs:element minOccurs="0" name="network_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="template_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" default="N" name="remove_attrs" nillable="true" type="tns:remove_template_from_network_remove_attrsType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="set_network_permission">
        <xs:sequence>
          <xs:element minOccurs="0" name="network_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="usernames" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="read" nillable="true" type="tns:set_network_permission_readType" />
          <xs:element minOccurs="0" name="write" nillable="true" type="tns:set_network_permission_writeType" />
          <xs:element minOccurs="0" name="share" nillable="true" type="tns:set_network_permission_shareType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="set_project_permission">
        <xs:sequence>
          <xs:element minOccurs="0" name="project_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="usernames" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="read" nillable="true" type="tns:set_project_permission_readType" />
          <xs:element minOccurs="0" name="write" nillable="true" type="tns:set_project_permission_writeType" />
          <xs:element minOccurs="0" name="share" nillable="true" type="tns:set_project_permission_shareType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="share_network">
        <xs:sequence>
          <xs:element minOccurs="0" name="network_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="usernames" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="read_only" nillable="true" type="tns:share_network_read_onlyType" />
          <xs:element minOccurs="0" default="Y" name="share" nillable="true" type="tns:share_network_shareType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="share_project">
        <xs:sequence>
          <xs:element minOccurs="0" name="project_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="usernames" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="read_only" nillable="true" type="tns:share_project_read_onlyType" />
          <xs:element minOccurs="0" name="share" nillable="true" type="tns:share_project_shareType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="test_get_all_link_data">
        <xs:sequence>
          <xs:element minOccurs="0" name="network_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="scenario_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="link_ids" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" default="N" name="include_metadata" nillable="true" type="tns:test_get_all_link_data_include_metadataType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="test_get_all_node_data">
        <xs:sequence>
          <xs:element minOccurs="0" name="network_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="scenario_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="node_ids" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" default="N" name="include_metadata" nillable="true" type="tns:test_get_all_node_data_include_metadataType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="update_unit">
        <xs:sequence>
          <xs:element minOccurs="0" name="unit" nillable="true" type="s0:Unit" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_project">
        <xs:sequence>
          <xs:element minOccurs="0" name="project" nillable="true" type="s0:Project" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_projectResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="add_projectResult" nillable="true" type="s0:Project" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="assign_types_to_resources">
        <xs:sequence>
          <xs:element minOccurs="0" name="resource_types" nillable="true" type="s0:ResourceTypeDefArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_all_usersResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_all_usersResult" nillable="true" type="s0:UserArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_projectResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_projectResult" nillable="true" type="s0:Project" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_projectsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_projectsResult" nillable="true" type="s0:ProjectSummaryArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_resources_of_typeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_resources_of_typeResult" nillable="true" type="s0:ResourceSummaryArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="test_get_all_node_dataResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="test_get_all_node_dataResult" nillable="true" type="s0:ResourceDataArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="update_project">
        <xs:sequence>
          <xs:element minOccurs="0" name="project" nillable="true" type="s0:Project" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="update_projectResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="update_projectResult" nillable="true" type="s0:Project" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_data_to_attribute">
        <xs:sequence>
          <xs:element minOccurs="0" name="scenario_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="resource_attr_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="dataset" nillable="true" type="s0:Dataset" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_timeseries">
        <xs:sequence>
          <xs:element minOccurs="0" name="x" nillable="true" type="s0:TimeSeries" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_timeseriesResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="echo_timeseriesResult" nillable="true" type="s0:TimeSeries" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_datasetResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_datasetResult" nillable="true" type="s0:Dataset" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="run_plugin">
        <xs:sequence>
          <xs:element minOccurs="0" name="plugin" nillable="true" type="s0:Plugin" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="update_dataset">
        <xs:sequence>
          <xs:element minOccurs="0" name="dataset" nillable="true" type="s0:Dataset" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="update_datasetResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="update_datasetResult" nillable="true" type="s0:Dataset" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_data_to_attributeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="add_data_to_attributeResult" nillable="true" type="s0:ResourceScenario" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_resourcedata">
        <xs:sequence>
          <xs:element minOccurs="0" name="scenario_id" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="resource_scenario" nillable="true" type="s0:ResourceScenario" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_user_rolesResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_user_rolesResult" nillable="true" type="s0:RoleArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_template">
        <xs:sequence>
          <xs:element minOccurs="0" name="tmpl" nillable="true" type="s0:Template" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_templateResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="add_templateResult" nillable="true" type="s0:Template" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_templateResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="delete_templateResult" nillable="true" type="s0:Template" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete_templatetypeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="delete_templatetypeResult" nillable="true" type="s0:Template" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_templateResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_templateResult" nillable="true" type="s0:Template" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_template_by_nameResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_template_by_nameResult" nillable="true" type="s0:Template" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="update_template">
        <xs:sequence>
          <xs:element minOccurs="0" name="tmpl" nillable="true" type="s0:Template" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="update_templateResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="update_templateResult" nillable="true" type="s0:Template" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="upload_template_xmlResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="upload_template_xmlResult" nillable="true" type="s0:Template" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="compare_scenariosResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="compare_scenariosResult" nillable="true" type="s0:ScenarioDiff" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_network">
        <xs:sequence>
          <xs:element minOccurs="0" name="net" nillable="true" type="s0:Network" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="add_networkResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="add_networkResult" nillable="true" type="s0:Network" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_networkResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_networkResult" nillable="true" type="s0:Network" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="get_network_by_nameResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="get_network_by_nameResult" nillable="true" type="s0:Network" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="update_network">
        <xs:sequence>
          <xs:element minOccurs="0" name="net" nillable="true" type="s0:Network" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="update_networkResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="update_networkResult" nillable="true" type="s0:Network" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="AuthenticationError" type="tns:AuthenticationError" />
      <xs:element name="integerArray" type="tns:integerArray" />
      <xs:element name="stringArray" type="tns:stringArray" />
      <xs:element name="check_jsonResponse" type="tns:check_jsonResponse" />
      <xs:element name="get_all_perms" type="tns:get_all_perms" />
      <xs:element name="get_all_roles" type="tns:get_all_roles" />
      <xs:element name="get_all_users" type="tns:get_all_users" />
      <xs:element name="get_attributes" type="tns:get_attributes" />
      <xs:element name="get_dimensions" type="tns:get_dimensions" />
      <xs:element name="get_plugins" type="tns:get_plugins" />
      <xs:element name="get_templates" type="tns:get_templates" />
      <xs:element name="RequestHeader" type="tns:RequestHeader" />
      <xs:element name="activate_group" type="tns:activate_group" />
      <xs:element name="activate_groupResponse" type="tns:activate_groupResponse" />
      <xs:element name="activate_link" type="tns:activate_link" />
      <xs:element name="activate_linkResponse" type="tns:activate_linkResponse" />
      <xs:element name="activate_network" type="tns:activate_network" />
      <xs:element name="activate_networkResponse" type="tns:activate_networkResponse" />
      <xs:element name="activate_node" type="tns:activate_node" />
      <xs:element name="activate_nodeResponse" type="tns:activate_nodeResponse" />
      <xs:element name="activate_scenario" type="tns:activate_scenario" />
      <xs:element name="activate_scenarioResponse" type="tns:activate_scenarioResponse" />
      <xs:element name="add_attributesResponse" type="tns:add_attributesResponse" />
      <xs:element name="add_dimension" type="tns:add_dimension" />
      <xs:element name="add_dimensionResponse" type="tns:add_dimensionResponse" />
      <xs:element name="add_file" type="tns:add_file" />
      <xs:element name="add_fileResponse" type="tns:add_fileResponse" />
      <xs:element name="add_group" type="tns:add_group" />
      <xs:element name="add_groupResponse" type="tns:add_groupResponse" />
      <xs:element name="add_image" type="tns:add_image" />
      <xs:element name="add_imageResponse" type="tns:add_imageResponse" />
      <xs:element name="add_link" type="tns:add_link" />
      <xs:element name="add_linkResponse" type="tns:add_linkResponse" />
      <xs:element name="add_node" type="tns:add_node" />
      <xs:element name="add_nodeResponse" type="tns:add_nodeResponse" />
      <xs:element name="add_node_attrs_from_type" type="tns:add_node_attrs_from_type" />
      <xs:element name="add_node_attrs_from_typeResponse" type="tns:add_node_attrs_from_typeResponse" />
      <xs:element name="add_resource_attribute" type="tns:add_resource_attribute" />
      <xs:element name="add_resource_attributeResponse" type="tns:add_resource_attributeResponse" />
      <xs:element name="add_resourcegroup" type="tns:add_resourcegroup" />
      <xs:element name="add_resourcegroupResponse" type="tns:add_resourcegroupResponse" />
      <xs:element name="add_resourcegroupitem" type="tns:add_resourcegroupitem" />
      <xs:element name="add_resourcegroupitemResponse" type="tns:add_resourcegroupitemResponse" />
      <xs:element name="add_role" type="tns:add_role" />
      <xs:element name="add_roleResponse" type="tns:add_roleResponse" />
      <xs:element name="add_scenario" type="tns:add_scenario" />
      <xs:element name="add_scenarioResponse" type="tns:add_scenarioResponse" />
      <xs:element name="add_templatetype" type="tns:add_templatetype" />
      <xs:element name="add_templatetypeResponse" type="tns:add_templatetypeResponse" />
      <xs:element name="add_typeattr" type="tns:add_typeattr" />
      <xs:element name="add_typeattrResponse" type="tns:add_typeattrResponse" />
      <xs:element name="add_unitResponse" type="tns:add_unitResponse" />
      <xs:element name="add_user" type="tns:add_user" />
      <xs:element name="add_userResponse" type="tns:add_userResponse" />
      <xs:element name="apply_template_to_network" type="tns:apply_template_to_network" />
      <xs:element name="apply_template_to_networkResponse" type="tns:apply_template_to_networkResponse" />
      <xs:element name="assign_type_to_resource" type="tns:assign_type_to_resource" />
      <xs:element name="assign_type_to_resourceResponse" type="tns:assign_type_to_resourceResponse" />
      <xs:element name="assign_types_to_resourcesResponse" type="tns:assign_types_to_resourcesResponse" />
      <xs:element name="bulk_insert_data" type="tns:bulk_insert_data" />
      <xs:element name="bulk_insert_dataResponse" type="tns:bulk_insert_dataResponse" />
      <xs:element name="check_consistency" type="tns:check_consistency" />
      <xs:element name="check_consistencyResponse" type="tns:check_consistencyResponse" />
      <xs:element name="check_json" type="tns:check_json" />
      <xs:element name="check_plugin_status" type="tns:check_plugin_status" />
      <xs:element name="check_plugin_statusResponse" type="tns:check_plugin_statusResponse" />
      <xs:element name="clean_up_network" type="tns:clean_up_network" />
      <xs:element name="clean_up_networkResponse" type="tns:clean_up_networkResponse" />
      <xs:element name="clone_scenario" type="tns:clone_scenario" />
      <xs:element name="clone_scenarioResponse" type="tns:clone_scenarioResponse" />
      <xs:element name="compare_scenarios" type="tns:compare_scenarios" />
      <xs:element name="convert_dataset" type="tns:convert_dataset" />
      <xs:element name="convert_datasetResponse" type="tns:convert_datasetResponse" />
      <xs:element name="convert_units" type="tns:convert_units" />
      <xs:element name="convert_unitsResponse" type="tns:convert_unitsResponse" />
      <xs:element name="delete_attribute" type="tns:delete_attribute" />
      <xs:element name="delete_attributeResponse" type="tns:delete_attributeResponse" />
      <xs:element name="delete_dataset" type="tns:delete_dataset" />
      <xs:element name="delete_datasetResponse" type="tns:delete_datasetResponse" />
      <xs:element name="delete_dimension" type="tns:delete_dimension" />
      <xs:element name="delete_dimensionResponse" type="tns:delete_dimensionResponse" />
      <xs:element name="delete_group" type="tns:delete_group" />
      <xs:element name="delete_groupResponse" type="tns:delete_groupResponse" />
      <xs:element name="delete_link" type="tns:delete_link" />
      <xs:element name="delete_linkResponse" type="tns:delete_linkResponse" />
      <xs:element name="delete_network" type="tns:delete_network" />
      <xs:element name="delete_networkResponse" type="tns:delete_networkResponse" />
      <xs:element name="delete_node" type="tns:delete_node" />
      <xs:element name="delete_nodeResponse" type="tns:delete_nodeResponse" />
      <xs:element name="delete_perm" type="tns:delete_perm" />
      <xs:element name="delete_permResponse" type="tns:delete_permResponse" />
      <xs:element name="delete_project" type="tns:delete_project" />
      <xs:element name="delete_projectResponse" type="tns:delete_projectResponse" />
      <xs:element name="delete_resourceattr" type="tns:delete_resourceattr" />
      <xs:element name="delete_resourceattrResponse" type="tns:delete_resourceattrResponse" />
      <xs:element name="delete_resourcedataResponse" type="tns:delete_resourcedataResponse" />
      <xs:element name="delete_resourcegroup" type="tns:delete_resourcegroup" />
      <xs:element name="delete_resourcegroupResponse" type="tns:delete_resourcegroupResponse" />
      <xs:element name="delete_resourcegroupitem" type="tns:delete_resourcegroupitem" />
      <xs:element name="delete_resourcegroupitemResponse" type="tns:delete_resourcegroupitemResponse" />
      <xs:element name="delete_role" type="tns:delete_role" />
      <xs:element name="delete_roleResponse" type="tns:delete_roleResponse" />
      <xs:element name="delete_role_perm" type="tns:delete_role_perm" />
      <xs:element name="delete_role_permResponse" type="tns:delete_role_permResponse" />
      <xs:element name="delete_scenario" type="tns:delete_scenario" />
      <xs:element name="delete_scenarioResponse" type="tns:delete_scenarioResponse" />
      <xs:element name="delete_template" type="tns:delete_template" />
      <xs:element name="delete_templatetype" type="tns:delete_templatetype" />
      <xs:element name="delete_typeattr" type="tns:delete_typeattr" />
      <xs:element name="delete_typeattrResponse" type="tns:delete_typeattrResponse" />
      <xs:element name="delete_unitResponse" type="tns:delete_unitResponse" />
      <xs:element name="delete_user" type="tns:delete_user" />
      <xs:element name="delete_userResponse" type="tns:delete_userResponse" />
      <xs:element name="delete_user_role" type="tns:delete_user_role" />
      <xs:element name="delete_user_roleResponse" type="tns:delete_user_roleResponse" />
      <xs:element name="get_all_group_dataResponse" type="tns:get_all_group_dataResponse" />
      <xs:element name="get_all_link_dataResponse" type="tns:get_all_link_dataResponse" />
      <xs:element name="get_all_node_dataResponse" type="tns:get_all_node_dataResponse" />
      <xs:element name="get_all_permsResponse" type="tns:get_all_permsResponse" />
      <xs:element name="get_all_rolesResponse" type="tns:get_all_rolesResponse" />
      <xs:element name="get_attribute" type="tns:get_attribute" />
      <xs:element name="get_attribute_by_id" type="tns:get_attribute_by_id" />
      <xs:element name="get_attribute_datasets" type="tns:get_attribute_datasets" />
      <xs:element name="get_attribute_datasetsResponse" type="tns:get_attribute_datasetsResponse" />
      <xs:element name="get_attributesResponse" type="tns:get_attributesResponse" />
      <xs:element name="get_dataset" type="tns:get_dataset" />
      <xs:element name="get_dataset_group" type="tns:get_dataset_group" />
      <xs:element name="get_dataset_group_by_name" type="tns:get_dataset_group_by_name" />
      <xs:element name="get_dataset_scenarios" type="tns:get_dataset_scenarios" />
      <xs:element name="get_dataset_scenariosResponse" type="tns:get_dataset_scenariosResponse" />
      <xs:element name="get_dimension" type="tns:get_dimension" />
      <xs:element name="get_dimensionResponse" type="tns:get_dimensionResponse" />
      <xs:element name="get_dimensionsResponse" type="tns:get_dimensionsResponse" />
      <xs:element name="get_file" type="tns:get_file" />
      <xs:element name="get_fileResponse" type="tns:get_fileResponse" />
      <xs:element name="get_group_datasets" type="tns:get_group_datasets" />
      <xs:element name="get_group_datasetsResponse" type="tns:get_group_datasetsResponse" />
      <xs:element name="get_groups_like_name" type="tns:get_groups_like_name" />
      <xs:element name="get_image" type="tns:get_image" />
      <xs:element name="get_imageResponse" type="tns:get_imageResponse" />
      <xs:element name="get_link" type="tns:get_link" />
      <xs:element name="get_linkResponse" type="tns:get_linkResponse" />
      <xs:element name="get_link_data" type="tns:get_link_data" />
      <xs:element name="get_link_dataResponse" type="tns:get_link_dataResponse" />
      <xs:element name="get_matching_resource_types" type="tns:get_matching_resource_types" />
      <xs:element name="get_matching_resource_typesResponse" type="tns:get_matching_resource_typesResponse" />
      <xs:element name="get_metadata" type="tns:get_metadata" />
      <xs:element name="get_metadataResponse" type="tns:get_metadataResponse" />
      <xs:element name="get_network_as_xml_template" type="tns:get_network_as_xml_template" />
      <xs:element name="get_network_as_xml_templateResponse" type="tns:get_network_as_xml_templateResponse" />
      <xs:element name="get_network_by_name" type="tns:get_network_by_name" />
      <xs:element name="get_network_data" type="tns:get_network_data" />
      <xs:element name="get_network_dataResponse" type="tns:get_network_dataResponse" />
      <xs:element name="get_network_extents" type="tns:get_network_extents" />
      <xs:element name="get_node" type="tns:get_node" />
      <xs:element name="get_nodeResponse" type="tns:get_nodeResponse" />
      <xs:element name="get_node_attribute_data" type="tns:get_node_attribute_data" />
      <xs:element name="get_node_data" type="tns:get_node_data" />
      <xs:element name="get_node_dataResponse" type="tns:get_node_dataResponse" />
      <xs:element name="get_perm" type="tns:get_perm" />
      <xs:element name="get_perm_by_code" type="tns:get_perm_by_code" />
      <xs:element name="get_pluginsResponse" type="tns:get_pluginsResponse" />
      <xs:element name="get_project" type="tns:get_project" />
      <xs:element name="get_projects" type="tns:get_projects" />
      <xs:element name="get_resourcegroup" type="tns:get_resourcegroup" />
      <xs:element name="get_resourcegroupResponse" type="tns:get_resourcegroupResponse" />
      <xs:element name="get_resourcegroup_data" type="tns:get_resourcegroup_data" />
      <xs:element name="get_resourcegroup_dataResponse" type="tns:get_resourcegroup_dataResponse" />
      <xs:element name="get_resources_of_type" type="tns:get_resources_of_type" />
      <xs:element name="get_role" type="tns:get_role" />
      <xs:element name="get_roleResponse" type="tns:get_roleResponse" />
      <xs:element name="get_role_by_code" type="tns:get_role_by_code" />
      <xs:element name="get_role_by_codeResponse" type="tns:get_role_by_codeResponse" />
      <xs:element name="get_scenario" type="tns:get_scenario" />
      <xs:element name="get_scenarioResponse" type="tns:get_scenarioResponse" />
      <xs:element name="get_scenario_data" type="tns:get_scenario_data" />
      <xs:element name="get_scenarios" type="tns:get_scenarios" />
      <xs:element name="get_scenariosResponse" type="tns:get_scenariosResponse" />
      <xs:element name="get_template" type="tns:get_template" />
      <xs:element name="get_template_by_name" type="tns:get_template_by_name" />
      <xs:element name="get_templatetype" type="tns:get_templatetype" />
      <xs:element name="get_templatetypeResponse" type="tns:get_templatetypeResponse" />
      <xs:element name="get_templatetype_by_name" type="tns:get_templatetype_by_name" />
      <xs:element name="get_templatetype_by_nameResponse" type="tns:get_templatetype_by_nameResponse" />
      <xs:element name="get_units" type="tns:get_units" />
      <xs:element name="get_user_by_name" type="tns:get_user_by_name" />
      <xs:element name="get_user_by_nameResponse" type="tns:get_user_by_nameResponse" />
      <xs:element name="get_user_permissions" type="tns:get_user_permissions" />
      <xs:element name="get_user_roles" type="tns:get_user_roles" />
      <xs:element name="get_username" type="tns:get_username" />
      <xs:element name="get_usernameResponse" type="tns:get_usernameResponse" />
      <xs:element name="get_val_at_timeResponse" type="tns:get_val_at_timeResponse" />
      <xs:element name="get_vals_between_timesResponse" type="tns:get_vals_between_timesResponse" />
      <xs:element name="lock_datasetResponse" type="tns:lock_datasetResponse" />
      <xs:element name="lock_scenario" type="tns:lock_scenario" />
      <xs:element name="lock_scenarioResponse" type="tns:lock_scenarioResponse" />
      <xs:element name="logout" type="tns:logout" />
      <xs:element name="logoutResponse" type="tns:logoutResponse" />
      <xs:element name="network_exists" type="tns:network_exists" />
      <xs:element name="network_existsResponse" type="tns:network_existsResponse" />
      <xs:element name="purge_link" type="tns:purge_link" />
      <xs:element name="purge_linkResponse" type="tns:purge_linkResponse" />
      <xs:element name="purge_node" type="tns:purge_node" />
      <xs:element name="purge_nodeResponse" type="tns:purge_nodeResponse" />
      <xs:element name="purge_project" type="tns:purge_project" />
      <xs:element name="purge_projectResponse" type="tns:purge_projectResponse" />
      <xs:element name="purge_scenario" type="tns:purge_scenario" />
      <xs:element name="purge_scenarioResponse" type="tns:purge_scenarioResponse" />
      <xs:element name="remove_attr_from_type" type="tns:remove_attr_from_type" />
      <xs:element name="remove_attr_from_typeResponse" type="tns:remove_attr_from_typeResponse" />
      <xs:element name="remove_file" type="tns:remove_file" />
      <xs:element name="remove_fileResponse" type="tns:remove_fileResponse" />
      <xs:element name="remove_image" type="tns:remove_image" />
      <xs:element name="remove_imageResponse" type="tns:remove_imageResponse" />
      <xs:element name="remove_template_from_networkResponse" type="tns:remove_template_from_networkResponse" />
      <xs:element name="remove_type_from_resource" type="tns:remove_type_from_resource" />
      <xs:element name="remove_type_from_resourceResponse" type="tns:remove_type_from_resourceResponse" />
      <xs:element name="run_pluginResponse" type="tns:run_pluginResponse" />
      <xs:element name="set_network_permissionResponse" type="tns:set_network_permissionResponse" />
      <xs:element name="set_project_permissionResponse" type="tns:set_project_permissionResponse" />
      <xs:element name="set_role_perm" type="tns:set_role_perm" />
      <xs:element name="set_role_permResponse" type="tns:set_role_permResponse" />
      <xs:element name="set_user_role" type="tns:set_user_role" />
      <xs:element name="set_user_roleResponse" type="tns:set_user_roleResponse" />
      <xs:element name="share_networkResponse" type="tns:share_networkResponse" />
      <xs:element name="share_projectResponse" type="tns:share_projectResponse" />
      <xs:element name="test_get_all_link_dataResponse" type="tns:test_get_all_link_dataResponse" />
      <xs:element name="unlock_scenario" type="tns:unlock_scenario" />
      <xs:element name="unlock_scenarioResponse" type="tns:unlock_scenarioResponse" />
      <xs:element name="update_link" type="tns:update_link" />
      <xs:element name="update_linkResponse" type="tns:update_linkResponse" />
      <xs:element name="update_node" type="tns:update_node" />
      <xs:element name="update_nodeResponse" type="tns:update_nodeResponse" />
      <xs:element name="update_resourcedata" type="tns:update_resourcedata" />
      <xs:element name="update_resourcedataResponse" type="tns:update_resourcedataResponse" />
      <xs:element name="update_resourcegroup" type="tns:update_resourcegroup" />
      <xs:element name="update_resourcegroupResponse" type="tns:update_resourcegroupResponse" />
      <xs:element name="update_role" type="tns:update_role" />
      <xs:element name="update_roleResponse" type="tns:update_roleResponse" />
      <xs:element name="update_scenario" type="tns:update_scenario" />
      <xs:element name="update_scenarioResponse" type="tns:update_scenarioResponse" />
      <xs:element name="update_templatetype" type="tns:update_templatetype" />
      <xs:element name="update_templatetypeResponse" type="tns:update_templatetypeResponse" />
      <xs:element name="update_unitResponse" type="tns:update_unitResponse" />
      <xs:element name="update_user_display_name" type="tns:update_user_display_name" />
      <xs:element name="update_user_display_nameResponse" type="tns:update_user_display_nameResponse" />
      <xs:element name="update_user_password" type="tns:update_user_password" />
      <xs:element name="update_user_passwordResponse" type="tns:update_user_passwordResponse" />
      <xs:element name="upload_template_xml" type="tns:upload_template_xml" />
      <xs:element name="validate_attr" type="tns:validate_attr" />
      <xs:element name="validate_attrResponse" type="tns:validate_attrResponse" />
      <xs:element name="validate_network_topology" type="tns:validate_network_topology" />
      <xs:element name="validate_network_topologyResponse" type="tns:validate_network_topologyResponse" />
      <xs:element name="add_attribute" type="tns:add_attribute" />
      <xs:element name="add_attributeResponse" type="tns:add_attributeResponse" />
      <xs:element name="add_attributes" type="tns:add_attributes" />
      <xs:element name="add_dataset_group" type="tns:add_dataset_group" />
      <xs:element name="add_dataset_groupResponse" type="tns:add_dataset_groupResponse" />
      <xs:element name="add_perm" type="tns:add_perm" />
      <xs:element name="add_permResponse" type="tns:add_permResponse" />
      <xs:element name="add_unit" type="tns:add_unit" />
      <xs:element name="delete_unit" type="tns:delete_unit" />
      <xs:element name="echo_array" type="tns:echo_array" />
      <xs:element name="echo_arrayResponse" type="tns:echo_arrayResponse" />
      <xs:element name="echo_descriptor" type="tns:echo_descriptor" />
      <xs:element name="echo_descriptorResponse" type="tns:echo_descriptorResponse" />
      <xs:element name="echo_eqtimeseries" type="tns:echo_eqtimeseries" />
      <xs:element name="echo_eqtimeseriesResponse" type="tns:echo_eqtimeseriesResponse" />
      <xs:element name="echo_scalar" type="tns:echo_scalar" />
      <xs:element name="echo_scalarResponse" type="tns:echo_scalarResponse" />
      <xs:element name="get_all_group_data" type="tns:get_all_group_data" />
      <xs:element name="get_all_link_data" type="tns:get_all_link_data" />
      <xs:element name="get_all_node_data" type="tns:get_all_node_data" />
      <xs:element name="get_attributeResponse" type="tns:get_attributeResponse" />
      <xs:element name="get_attribute_by_idResponse" type="tns:get_attribute_by_idResponse" />
      <xs:element name="get_dataset_groupResponse" type="tns:get_dataset_groupResponse" />
      <xs:element name="get_dataset_group_by_nameResponse" type="tns:get_dataset_group_by_nameResponse" />
      <xs:element name="get_groups_like_nameResponse" type="tns:get_groups_like_nameResponse" />
      <xs:element name="get_network" type="tns:get_network" />
      <xs:element name="get_network_extentsResponse" type="tns:get_network_extentsResponse" />
      <xs:element name="get_networks" type="tns:get_networks" />
      <xs:element name="get_networksResponse" type="tns:get_networksResponse" />
      <xs:element name="get_node_attribute_dataResponse" type="tns:get_node_attribute_dataResponse" />
      <xs:element name="get_permResponse" type="tns:get_permResponse" />
      <xs:element name="get_perm_by_codeResponse" type="tns:get_perm_by_codeResponse" />
      <xs:element name="get_scenario_dataResponse" type="tns:get_scenario_dataResponse" />
      <xs:element name="get_templatesResponse" type="tns:get_templatesResponse" />
      <xs:element name="get_unitsResponse" type="tns:get_unitsResponse" />
      <xs:element name="get_user_permissionsResponse" type="tns:get_user_permissionsResponse" />
      <xs:element name="get_val_at_time" type="tns:get_val_at_time" />
      <xs:element name="get_vals_between_times" type="tns:get_vals_between_times" />
      <xs:element name="lock_dataset" type="tns:lock_dataset" />
      <xs:element name="login" type="tns:login" />
      <xs:element name="loginResponse" type="tns:loginResponse" />
      <xs:element name="remove_template_from_network" type="tns:remove_template_from_network" />
      <xs:element name="set_network_permission" type="tns:set_network_permission" />
      <xs:element name="set_project_permission" type="tns:set_project_permission" />
      <xs:element name="share_network" type="tns:share_network" />
      <xs:element name="share_project" type="tns:share_project" />
      <xs:element name="test_get_all_link_data" type="tns:test_get_all_link_data" />
      <xs:element name="test_get_all_node_data" type="tns:test_get_all_node_data" />
      <xs:element name="update_unit" type="tns:update_unit" />
      <xs:element name="add_project" type="tns:add_project" />
      <xs:element name="add_projectResponse" type="tns:add_projectResponse" />
      <xs:element name="assign_types_to_resources" type="tns:assign_types_to_resources" />
      <xs:element name="get_all_usersResponse" type="tns:get_all_usersResponse" />
      <xs:element name="get_projectResponse" type="tns:get_projectResponse" />
      <xs:element name="get_projectsResponse" type="tns:get_projectsResponse" />
      <xs:element name="get_resources_of_typeResponse" type="tns:get_resources_of_typeResponse" />
      <xs:element name="test_get_all_node_dataResponse" type="tns:test_get_all_node_dataResponse" />
      <xs:element name="update_project" type="tns:update_project" />
      <xs:element name="update_projectResponse" type="tns:update_projectResponse" />
      <xs:element name="add_data_to_attribute" type="tns:add_data_to_attribute" />
      <xs:element name="echo_timeseries" type="tns:echo_timeseries" />
      <xs:element name="echo_timeseriesResponse" type="tns:echo_timeseriesResponse" />
      <xs:element name="get_datasetResponse" type="tns:get_datasetResponse" />
      <xs:element name="run_plugin" type="tns:run_plugin" />
      <xs:element name="update_dataset" type="tns:update_dataset" />
      <xs:element name="update_datasetResponse" type="tns:update_datasetResponse" />
      <xs:element name="add_data_to_attributeResponse" type="tns:add_data_to_attributeResponse" />
      <xs:element name="delete_resourcedata" type="tns:delete_resourcedata" />
      <xs:element name="get_user_rolesResponse" type="tns:get_user_rolesResponse" />
      <xs:element name="add_template" type="tns:add_template" />
      <xs:element name="add_templateResponse" type="tns:add_templateResponse" />
      <xs:element name="delete_templateResponse" type="tns:delete_templateResponse" />
      <xs:element name="delete_templatetypeResponse" type="tns:delete_templatetypeResponse" />
      <xs:element name="get_templateResponse" type="tns:get_templateResponse" />
      <xs:element name="get_template_by_nameResponse" type="tns:get_template_by_nameResponse" />
      <xs:element name="update_template" type="tns:update_template" />
      <xs:element name="update_templateResponse" type="tns:update_templateResponse" />
      <xs:element name="upload_template_xmlResponse" type="tns:upload_template_xmlResponse" />
      <xs:element name="compare_scenariosResponse" type="tns:compare_scenariosResponse" />
      <xs:element name="add_network" type="tns:add_network" />
      <xs:element name="add_networkResponse" type="tns:add_networkResponse" />
      <xs:element name="get_networkResponse" type="tns:get_networkResponse" />
      <xs:element name="get_network_by_nameResponse" type="tns:get_network_by_nameResponse" />
      <xs:element name="update_network" type="tns:update_network" />
      <xs:element name="update_networkResponse" type="tns:update_networkResponse" />
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="login">
    <wsdl:part name="login" element="tns:login" />
  </wsdl:message>
  <wsdl:message name="loginResponse">
    <wsdl:part name="loginResponse" element="tns:loginResponse" />
  </wsdl:message>
  <wsdl:message name="AuthenticationError">
    <wsdl:part name="AuthenticationError" element="tns:AuthenticationError" />
  </wsdl:message>
  <wsdl:message name="get_all_users">
    <wsdl:part name="get_all_users" element="tns:get_all_users" />
  </wsdl:message>
  <wsdl:message name="get_all_usersResponse">
    <wsdl:part name="get_all_usersResponse" element="tns:get_all_usersResponse" />
  </wsdl:message>
  <wsdl:message name="RequestHeader">
    <wsdl:part name="RequestHeader" element="tns:RequestHeader" />
  </wsdl:message>
  <wsdl:message name="delete_user">
    <wsdl:part name="delete_user" element="tns:delete_user" />
  </wsdl:message>
  <wsdl:message name="delete_userResponse">
    <wsdl:part name="delete_userResponse" element="tns:delete_userResponse" />
  </wsdl:message>
  <wsdl:message name="delete_perm">
    <wsdl:part name="delete_perm" element="tns:delete_perm" />
  </wsdl:message>
  <wsdl:message name="delete_permResponse">
    <wsdl:part name="delete_permResponse" element="tns:delete_permResponse" />
  </wsdl:message>
  <wsdl:message name="get_perm_by_code">
    <wsdl:part name="get_perm_by_code" element="tns:get_perm_by_code" />
  </wsdl:message>
  <wsdl:message name="get_perm_by_codeResponse">
    <wsdl:part name="get_perm_by_codeResponse" element="tns:get_perm_by_codeResponse" />
  </wsdl:message>
  <wsdl:message name="delete_role_perm">
    <wsdl:part name="delete_role_perm" element="tns:delete_role_perm" />
  </wsdl:message>
  <wsdl:message name="delete_role_permResponse">
    <wsdl:part name="delete_role_permResponse" element="tns:delete_role_permResponse" />
  </wsdl:message>
  <wsdl:message name="get_user_by_name">
    <wsdl:part name="get_user_by_name" element="tns:get_user_by_name" />
  </wsdl:message>
  <wsdl:message name="get_user_by_nameResponse">
    <wsdl:part name="get_user_by_nameResponse" element="tns:get_user_by_nameResponse" />
  </wsdl:message>
  <wsdl:message name="get_user_roles">
    <wsdl:part name="get_user_roles" element="tns:get_user_roles" />
  </wsdl:message>
  <wsdl:message name="get_user_rolesResponse">
    <wsdl:part name="get_user_rolesResponse" element="tns:get_user_rolesResponse" />
  </wsdl:message>
  <wsdl:message name="set_user_role">
    <wsdl:part name="set_user_role" element="tns:set_user_role" />
  </wsdl:message>
  <wsdl:message name="set_user_roleResponse">
    <wsdl:part name="set_user_roleResponse" element="tns:set_user_roleResponse" />
  </wsdl:message>
  <wsdl:message name="delete_role">
    <wsdl:part name="delete_role" element="tns:delete_role" />
  </wsdl:message>
  <wsdl:message name="delete_roleResponse">
    <wsdl:part name="delete_roleResponse" element="tns:delete_roleResponse" />
  </wsdl:message>
  <wsdl:message name="get_username">
    <wsdl:part name="get_username" element="tns:get_username" />
  </wsdl:message>
  <wsdl:message name="get_usernameResponse">
    <wsdl:part name="get_usernameResponse" element="tns:get_usernameResponse" />
  </wsdl:message>
  <wsdl:message name="delete_user_role">
    <wsdl:part name="delete_user_role" element="tns:delete_user_role" />
  </wsdl:message>
  <wsdl:message name="delete_user_roleResponse">
    <wsdl:part name="delete_user_roleResponse" element="tns:delete_user_roleResponse" />
  </wsdl:message>
  <wsdl:message name="get_perm">
    <wsdl:part name="get_perm" element="tns:get_perm" />
  </wsdl:message>
  <wsdl:message name="get_permResponse">
    <wsdl:part name="get_permResponse" element="tns:get_permResponse" />
  </wsdl:message>
  <wsdl:message name="get_role">
    <wsdl:part name="get_role" element="tns:get_role" />
  </wsdl:message>
  <wsdl:message name="get_roleResponse">
    <wsdl:part name="get_roleResponse" element="tns:get_roleResponse" />
  </wsdl:message>
  <wsdl:message name="get_user_permissions">
    <wsdl:part name="get_user_permissions" element="tns:get_user_permissions" />
  </wsdl:message>
  <wsdl:message name="get_user_permissionsResponse">
    <wsdl:part name="get_user_permissionsResponse" element="tns:get_user_permissionsResponse" />
  </wsdl:message>
  <wsdl:message name="get_all_perms">
    <wsdl:part name="get_all_perms" element="tns:get_all_perms" />
  </wsdl:message>
  <wsdl:message name="get_all_permsResponse">
    <wsdl:part name="get_all_permsResponse" element="tns:get_all_permsResponse" />
  </wsdl:message>
  <wsdl:message name="add_perm">
    <wsdl:part name="add_perm" element="tns:add_perm" />
  </wsdl:message>
  <wsdl:message name="add_permResponse">
    <wsdl:part name="add_permResponse" element="tns:add_permResponse" />
  </wsdl:message>
  <wsdl:message name="get_role_by_code">
    <wsdl:part name="get_role_by_code" element="tns:get_role_by_code" />
  </wsdl:message>
  <wsdl:message name="get_role_by_codeResponse">
    <wsdl:part name="get_role_by_codeResponse" element="tns:get_role_by_codeResponse" />
  </wsdl:message>
  <wsdl:message name="add_user">
    <wsdl:part name="add_user" element="tns:add_user" />
  </wsdl:message>
  <wsdl:message name="add_userResponse">
    <wsdl:part name="add_userResponse" element="tns:add_userResponse" />
  </wsdl:message>
  <wsdl:message name="update_user_display_name">
    <wsdl:part name="update_user_display_name" element="tns:update_user_display_name" />
  </wsdl:message>
  <wsdl:message name="update_user_display_nameResponse">
    <wsdl:part name="update_user_display_nameResponse" element="tns:update_user_display_nameResponse" />
  </wsdl:message>
  <wsdl:message name="set_role_perm">
    <wsdl:part name="set_role_perm" element="tns:set_role_perm" />
  </wsdl:message>
  <wsdl:message name="set_role_permResponse">
    <wsdl:part name="set_role_permResponse" element="tns:set_role_permResponse" />
  </wsdl:message>
  <wsdl:message name="get_all_roles">
    <wsdl:part name="get_all_roles" element="tns:get_all_roles" />
  </wsdl:message>
  <wsdl:message name="get_all_rolesResponse">
    <wsdl:part name="get_all_rolesResponse" element="tns:get_all_rolesResponse" />
  </wsdl:message>
  <wsdl:message name="update_user_password">
    <wsdl:part name="update_user_password" element="tns:update_user_password" />
  </wsdl:message>
  <wsdl:message name="update_user_passwordResponse">
    <wsdl:part name="update_user_passwordResponse" element="tns:update_user_passwordResponse" />
  </wsdl:message>
  <wsdl:message name="add_role">
    <wsdl:part name="add_role" element="tns:add_role" />
  </wsdl:message>
  <wsdl:message name="add_roleResponse">
    <wsdl:part name="add_roleResponse" element="tns:add_roleResponse" />
  </wsdl:message>
  <wsdl:message name="update_role">
    <wsdl:part name="update_role" element="tns:update_role" />
  </wsdl:message>
  <wsdl:message name="update_roleResponse">
    <wsdl:part name="update_roleResponse" element="tns:update_roleResponse" />
  </wsdl:message>
  <wsdl:message name="logout">
    <wsdl:part name="logout" element="tns:logout" />
  </wsdl:message>
  <wsdl:message name="logoutResponse">
    <wsdl:part name="logoutResponse" element="tns:logoutResponse" />
  </wsdl:message>
  <wsdl:message name="test_get_all_node_data">
    <wsdl:part name="test_get_all_node_data" element="tns:test_get_all_node_data" />
  </wsdl:message>
  <wsdl:message name="test_get_all_node_dataResponse">
    <wsdl:part name="test_get_all_node_dataResponse" element="tns:test_get_all_node_dataResponse" />
  </wsdl:message>
  <wsdl:message name="update_network">
    <wsdl:part name="update_network" element="tns:update_network" />
  </wsdl:message>
  <wsdl:message name="update_networkResponse">
    <wsdl:part name="update_networkResponse" element="tns:update_networkResponse" />
  </wsdl:message>
  <wsdl:message name="add_node">
    <wsdl:part name="add_node" element="tns:add_node" />
  </wsdl:message>
  <wsdl:message name="add_nodeResponse">
    <wsdl:part name="add_nodeResponse" element="tns:add_nodeResponse" />
  </wsdl:message>
  <wsdl:message name="purge_node">
    <wsdl:part name="purge_node" element="tns:purge_node" />
  </wsdl:message>
  <wsdl:message name="purge_nodeResponse">
    <wsdl:part name="purge_nodeResponse" element="tns:purge_nodeResponse" />
  </wsdl:message>
  <wsdl:message name="add_link">
    <wsdl:part name="add_link" element="tns:add_link" />
  </wsdl:message>
  <wsdl:message name="add_linkResponse">
    <wsdl:part name="add_linkResponse" element="tns:add_linkResponse" />
  </wsdl:message>
  <wsdl:message name="add_network">
    <wsdl:part name="add_network" element="tns:add_network" />
  </wsdl:message>
  <wsdl:message name="add_networkResponse">
    <wsdl:part name="add_networkResponse" element="tns:add_networkResponse" />
  </wsdl:message>
  <wsdl:message name="purge_link">
    <wsdl:part name="purge_link" element="tns:purge_link" />
  </wsdl:message>
  <wsdl:message name="purge_linkResponse">
    <wsdl:part name="purge_linkResponse" element="tns:purge_linkResponse" />
  </wsdl:message>
  <wsdl:message name="activate_group">
    <wsdl:part name="activate_group" element="tns:activate_group" />
  </wsdl:message>
  <wsdl:message name="activate_groupResponse">
    <wsdl:part name="activate_groupResponse" element="tns:activate_groupResponse" />
  </wsdl:message>
  <wsdl:message name="get_resources_of_type">
    <wsdl:part name="get_resources_of_type" element="tns:get_resources_of_type" />
  </wsdl:message>
  <wsdl:message name="get_resources_of_typeResponse">
    <wsdl:part name="get_resources_of_typeResponse" element="tns:get_resources_of_typeResponse" />
  </wsdl:message>
  <wsdl:message name="delete_group">
    <wsdl:part name="delete_group" element="tns:delete_group" />
  </wsdl:message>
  <wsdl:message name="delete_groupResponse">
    <wsdl:part name="delete_groupResponse" element="tns:delete_groupResponse" />
  </wsdl:message>
  <wsdl:message name="get_all_node_data">
    <wsdl:part name="get_all_node_data" element="tns:get_all_node_data" />
  </wsdl:message>
  <wsdl:message name="get_all_node_dataResponse">
    <wsdl:part name="get_all_node_dataResponse" element="tns:get_all_node_dataResponse" />
  </wsdl:message>
  <wsdl:message name="update_link">
    <wsdl:part name="update_link" element="tns:update_link" />
  </wsdl:message>
  <wsdl:message name="update_linkResponse">
    <wsdl:part name="update_linkResponse" element="tns:update_linkResponse" />
  </wsdl:message>
  <wsdl:message name="delete_network">
    <wsdl:part name="delete_network" element="tns:delete_network" />
  </wsdl:message>
  <wsdl:message name="delete_networkResponse">
    <wsdl:part name="delete_networkResponse" element="tns:delete_networkResponse" />
  </wsdl:message>
  <wsdl:message name="update_node">
    <wsdl:part name="update_node" element="tns:update_node" />
  </wsdl:message>
  <wsdl:message name="update_nodeResponse">
    <wsdl:part name="update_nodeResponse" element="tns:update_nodeResponse" />
  </wsdl:message>
  <wsdl:message name="delete_resourceattr">
    <wsdl:part name="delete_resourceattr" element="tns:delete_resourceattr" />
  </wsdl:message>
  <wsdl:message name="delete_resourceattrResponse">
    <wsdl:part name="delete_resourceattrResponse" element="tns:delete_resourceattrResponse" />
  </wsdl:message>
  <wsdl:message name="delete_node">
    <wsdl:part name="delete_node" element="tns:delete_node" />
  </wsdl:message>
  <wsdl:message name="delete_nodeResponse">
    <wsdl:part name="delete_nodeResponse" element="tns:delete_nodeResponse" />
  </wsdl:message>
  <wsdl:message name="network_exists">
    <wsdl:part name="network_exists" element="tns:network_exists" />
  </wsdl:message>
  <wsdl:message name="network_existsResponse">
    <wsdl:part name="network_existsResponse" element="tns:network_existsResponse" />
  </wsdl:message>
  <wsdl:message name="get_network_extents">
    <wsdl:part name="get_network_extents" element="tns:get_network_extents" />
  </wsdl:message>
  <wsdl:message name="get_network_extentsResponse">
    <wsdl:part name="get_network_extentsResponse" element="tns:get_network_extentsResponse" />
  </wsdl:message>
  <wsdl:message name="activate_network">
    <wsdl:part name="activate_network" element="tns:activate_network" />
  </wsdl:message>
  <wsdl:message name="activate_networkResponse">
    <wsdl:part name="activate_networkResponse" element="tns:activate_networkResponse" />
  </wsdl:message>
  <wsdl:message name="get_all_link_data">
    <wsdl:part name="get_all_link_data" element="tns:get_all_link_data" />
  </wsdl:message>
  <wsdl:message name="get_all_link_dataResponse">
    <wsdl:part name="get_all_link_dataResponse" element="tns:get_all_link_dataResponse" />
  </wsdl:message>
  <wsdl:message name="clean_up_network">
    <wsdl:part name="clean_up_network" element="tns:clean_up_network" />
  </wsdl:message>
  <wsdl:message name="clean_up_networkResponse">
    <wsdl:part name="clean_up_networkResponse" element="tns:clean_up_networkResponse" />
  </wsdl:message>
  <wsdl:message name="get_node">
    <wsdl:part name="get_node" element="tns:get_node" />
  </wsdl:message>
  <wsdl:message name="get_nodeResponse">
    <wsdl:part name="get_nodeResponse" element="tns:get_nodeResponse" />
  </wsdl:message>
  <wsdl:message name="get_link">
    <wsdl:part name="get_link" element="tns:get_link" />
  </wsdl:message>
  <wsdl:message name="get_linkResponse">
    <wsdl:part name="get_linkResponse" element="tns:get_linkResponse" />
  </wsdl:message>
  <wsdl:message name="get_network">
    <wsdl:part name="get_network" element="tns:get_network" />
  </wsdl:message>
  <wsdl:message name="get_networkResponse">
    <wsdl:part name="get_networkResponse" element="tns:get_networkResponse" />
  </wsdl:message>
  <wsdl:message name="get_all_group_data">
    <wsdl:part name="get_all_group_data" element="tns:get_all_group_data" />
  </wsdl:message>
  <wsdl:message name="get_all_group_dataResponse">
    <wsdl:part name="get_all_group_dataResponse" element="tns:get_all_group_dataResponse" />
  </wsdl:message>
  <wsdl:message name="activate_link">
    <wsdl:part name="activate_link" element="tns:activate_link" />
  </wsdl:message>
  <wsdl:message name="activate_linkResponse">
    <wsdl:part name="activate_linkResponse" element="tns:activate_linkResponse" />
  </wsdl:message>
  <wsdl:message name="get_network_by_name">
    <wsdl:part name="get_network_by_name" element="tns:get_network_by_name" />
  </wsdl:message>
  <wsdl:message name="get_network_by_nameResponse">
    <wsdl:part name="get_network_by_nameResponse" element="tns:get_network_by_nameResponse" />
  </wsdl:message>
  <wsdl:message name="delete_link">
    <wsdl:part name="delete_link" element="tns:delete_link" />
  </wsdl:message>
  <wsdl:message name="delete_linkResponse">
    <wsdl:part name="delete_linkResponse" element="tns:delete_linkResponse" />
  </wsdl:message>
  <wsdl:message name="get_resourcegroup">
    <wsdl:part name="get_resourcegroup" element="tns:get_resourcegroup" />
  </wsdl:message>
  <wsdl:message name="get_resourcegroupResponse">
    <wsdl:part name="get_resourcegroupResponse" element="tns:get_resourcegroupResponse" />
  </wsdl:message>
  <wsdl:message name="add_group">
    <wsdl:part name="add_group" element="tns:add_group" />
  </wsdl:message>
  <wsdl:message name="add_groupResponse">
    <wsdl:part name="add_groupResponse" element="tns:add_groupResponse" />
  </wsdl:message>
  <wsdl:message name="test_get_all_link_data">
    <wsdl:part name="test_get_all_link_data" element="tns:test_get_all_link_data" />
  </wsdl:message>
  <wsdl:message name="test_get_all_link_dataResponse">
    <wsdl:part name="test_get_all_link_dataResponse" element="tns:test_get_all_link_dataResponse" />
  </wsdl:message>
  <wsdl:message name="validate_network_topology">
    <wsdl:part name="validate_network_topology" element="tns:validate_network_topology" />
  </wsdl:message>
  <wsdl:message name="validate_network_topologyResponse">
    <wsdl:part name="validate_network_topologyResponse" element="tns:validate_network_topologyResponse" />
  </wsdl:message>
  <wsdl:message name="activate_node">
    <wsdl:part name="activate_node" element="tns:activate_node" />
  </wsdl:message>
  <wsdl:message name="activate_nodeResponse">
    <wsdl:part name="activate_nodeResponse" element="tns:activate_nodeResponse" />
  </wsdl:message>
  <wsdl:message name="get_scenarios">
    <wsdl:part name="get_scenarios" element="tns:get_scenarios" />
  </wsdl:message>
  <wsdl:message name="get_scenariosResponse">
    <wsdl:part name="get_scenariosResponse" element="tns:get_scenariosResponse" />
  </wsdl:message>
  <wsdl:message name="add_project">
    <wsdl:part name="add_project" element="tns:add_project" />
  </wsdl:message>
  <wsdl:message name="add_projectResponse">
    <wsdl:part name="add_projectResponse" element="tns:add_projectResponse" />
  </wsdl:message>
  <wsdl:message name="get_projects">
    <wsdl:part name="get_projects" element="tns:get_projects" />
  </wsdl:message>
  <wsdl:message name="get_projectsResponse">
    <wsdl:part name="get_projectsResponse" element="tns:get_projectsResponse" />
  </wsdl:message>
  <wsdl:message name="delete_project">
    <wsdl:part name="delete_project" element="tns:delete_project" />
  </wsdl:message>
  <wsdl:message name="delete_projectResponse">
    <wsdl:part name="delete_projectResponse" element="tns:delete_projectResponse" />
  </wsdl:message>
  <wsdl:message name="get_networks">
    <wsdl:part name="get_networks" element="tns:get_networks" />
  </wsdl:message>
  <wsdl:message name="get_networksResponse">
    <wsdl:part name="get_networksResponse" element="tns:get_networksResponse" />
  </wsdl:message>
  <wsdl:message name="update_project">
    <wsdl:part name="update_project" element="tns:update_project" />
  </wsdl:message>
  <wsdl:message name="update_projectResponse">
    <wsdl:part name="update_projectResponse" element="tns:update_projectResponse" />
  </wsdl:message>
  <wsdl:message name="purge_project">
    <wsdl:part name="purge_project" element="tns:purge_project" />
  </wsdl:message>
  <wsdl:message name="purge_projectResponse">
    <wsdl:part name="purge_projectResponse" element="tns:purge_projectResponse" />
  </wsdl:message>
  <wsdl:message name="get_project">
    <wsdl:part name="get_project" element="tns:get_project" />
  </wsdl:message>
  <wsdl:message name="get_projectResponse">
    <wsdl:part name="get_projectResponse" element="tns:get_projectResponse" />
  </wsdl:message>
  <wsdl:message name="add_resourcegroup">
    <wsdl:part name="add_resourcegroup" element="tns:add_resourcegroup" />
  </wsdl:message>
  <wsdl:message name="add_resourcegroupResponse">
    <wsdl:part name="add_resourcegroupResponse" element="tns:add_resourcegroupResponse" />
  </wsdl:message>
  <wsdl:message name="add_resourcegroupitem">
    <wsdl:part name="add_resourcegroupitem" element="tns:add_resourcegroupitem" />
  </wsdl:message>
  <wsdl:message name="add_resourcegroupitemResponse">
    <wsdl:part name="add_resourcegroupitemResponse" element="tns:add_resourcegroupitemResponse" />
  </wsdl:message>
  <wsdl:message name="update_resourcegroup">
    <wsdl:part name="update_resourcegroup" element="tns:update_resourcegroup" />
  </wsdl:message>
  <wsdl:message name="update_resourcegroupResponse">
    <wsdl:part name="update_resourcegroupResponse" element="tns:update_resourcegroupResponse" />
  </wsdl:message>
  <wsdl:message name="delete_resourcegroupitem">
    <wsdl:part name="delete_resourcegroupitem" element="tns:delete_resourcegroupitem" />
  </wsdl:message>
  <wsdl:message name="delete_resourcegroupitemResponse">
    <wsdl:part name="delete_resourcegroupitemResponse" element="tns:delete_resourcegroupitemResponse" />
  </wsdl:message>
  <wsdl:message name="delete_resourcegroup">
    <wsdl:part name="delete_resourcegroup" element="tns:delete_resourcegroup" />
  </wsdl:message>
  <wsdl:message name="delete_resourcegroupResponse">
    <wsdl:part name="delete_resourcegroupResponse" element="tns:delete_resourcegroupResponse" />
  </wsdl:message>
  <wsdl:message name="add_attribute">
    <wsdl:part name="add_attribute" element="tns:add_attribute" />
  </wsdl:message>
  <wsdl:message name="add_attributeResponse">
    <wsdl:part name="add_attributeResponse" element="tns:add_attributeResponse" />
  </wsdl:message>
  <wsdl:message name="add_resource_attribute">
    <wsdl:part name="add_resource_attribute" element="tns:add_resource_attribute" />
  </wsdl:message>
  <wsdl:message name="add_resource_attributeResponse">
    <wsdl:part name="add_resource_attributeResponse" element="tns:add_resource_attributeResponse" />
  </wsdl:message>
  <wsdl:message name="delete_attribute">
    <wsdl:part name="delete_attribute" element="tns:delete_attribute" />
  </wsdl:message>
  <wsdl:message name="delete_attributeResponse">
    <wsdl:part name="delete_attributeResponse" element="tns:delete_attributeResponse" />
  </wsdl:message>
  <wsdl:message name="get_attribute">
    <wsdl:part name="get_attribute" element="tns:get_attribute" />
  </wsdl:message>
  <wsdl:message name="get_attributeResponse">
    <wsdl:part name="get_attributeResponse" element="tns:get_attributeResponse" />
  </wsdl:message>
  <wsdl:message name="get_attribute_by_id">
    <wsdl:part name="get_attribute_by_id" element="tns:get_attribute_by_id" />
  </wsdl:message>
  <wsdl:message name="get_attribute_by_idResponse">
    <wsdl:part name="get_attribute_by_idResponse" element="tns:get_attribute_by_idResponse" />
  </wsdl:message>
  <wsdl:message name="add_attributes">
    <wsdl:part name="add_attributes" element="tns:add_attributes" />
  </wsdl:message>
  <wsdl:message name="add_attributesResponse">
    <wsdl:part name="add_attributesResponse" element="tns:add_attributesResponse" />
  </wsdl:message>
  <wsdl:message name="add_node_attrs_from_type">
    <wsdl:part name="add_node_attrs_from_type" element="tns:add_node_attrs_from_type" />
  </wsdl:message>
  <wsdl:message name="add_node_attrs_from_typeResponse">
    <wsdl:part name="add_node_attrs_from_typeResponse" element="tns:add_node_attrs_from_typeResponse" />
  </wsdl:message>
  <wsdl:message name="get_attributes">
    <wsdl:part name="get_attributes" element="tns:get_attributes" />
  </wsdl:message>
  <wsdl:message name="get_attributesResponse">
    <wsdl:part name="get_attributesResponse" element="tns:get_attributesResponse" />
  </wsdl:message>
  <wsdl:message name="purge_scenario">
    <wsdl:part name="purge_scenario" element="tns:purge_scenario" />
  </wsdl:message>
  <wsdl:message name="purge_scenarioResponse">
    <wsdl:part name="purge_scenarioResponse" element="tns:purge_scenarioResponse" />
  </wsdl:message>
  <wsdl:message name="get_attribute_datasets">
    <wsdl:part name="get_attribute_datasets" element="tns:get_attribute_datasets" />
  </wsdl:message>
  <wsdl:message name="get_attribute_datasetsResponse">
    <wsdl:part name="get_attribute_datasetsResponse" element="tns:get_attribute_datasetsResponse" />
  </wsdl:message>
  <wsdl:message name="get_node_data">
    <wsdl:part name="get_node_data" element="tns:get_node_data" />
  </wsdl:message>
  <wsdl:message name="get_node_dataResponse">
    <wsdl:part name="get_node_dataResponse" element="tns:get_node_dataResponse" />
  </wsdl:message>
  <wsdl:message name="get_link_data">
    <wsdl:part name="get_link_data" element="tns:get_link_data" />
  </wsdl:message>
  <wsdl:message name="get_link_dataResponse">
    <wsdl:part name="get_link_dataResponse" element="tns:get_link_dataResponse" />
  </wsdl:message>
  <wsdl:message name="unlock_scenario">
    <wsdl:part name="unlock_scenario" element="tns:unlock_scenario" />
  </wsdl:message>
  <wsdl:message name="unlock_scenarioResponse">
    <wsdl:part name="unlock_scenarioResponse" element="tns:unlock_scenarioResponse" />
  </wsdl:message>
  <wsdl:message name="get_node_attribute_data">
    <wsdl:part name="get_node_attribute_data" element="tns:get_node_attribute_data" />
  </wsdl:message>
  <wsdl:message name="get_node_attribute_dataResponse">
    <wsdl:part name="get_node_attribute_dataResponse" element="tns:get_node_attribute_dataResponse" />
  </wsdl:message>
  <wsdl:message name="activate_scenario">
    <wsdl:part name="activate_scenario" element="tns:activate_scenario" />
  </wsdl:message>
  <wsdl:message name="activate_scenarioResponse">
    <wsdl:part name="activate_scenarioResponse" element="tns:activate_scenarioResponse" />
  </wsdl:message>
  <wsdl:message name="delete_resourcedata">
    <wsdl:part name="delete_resourcedata" element="tns:delete_resourcedata" />
  </wsdl:message>
  <wsdl:message name="delete_resourcedataResponse">
    <wsdl:part name="delete_resourcedataResponse" element="tns:delete_resourcedataResponse" />
  </wsdl:message>
  <wsdl:message name="get_dataset_scenarios">
    <wsdl:part name="get_dataset_scenarios" element="tns:get_dataset_scenarios" />
  </wsdl:message>
  <wsdl:message name="get_dataset_scenariosResponse">
    <wsdl:part name="get_dataset_scenariosResponse" element="tns:get_dataset_scenariosResponse" />
  </wsdl:message>
  <wsdl:message name="add_data_to_attribute">
    <wsdl:part name="add_data_to_attribute" element="tns:add_data_to_attribute" />
  </wsdl:message>
  <wsdl:message name="add_data_to_attributeResponse">
    <wsdl:part name="add_data_to_attributeResponse" element="tns:add_data_to_attributeResponse" />
  </wsdl:message>
  <wsdl:message name="update_resourcedata">
    <wsdl:part name="update_resourcedata" element="tns:update_resourcedata" />
  </wsdl:message>
  <wsdl:message name="update_resourcedataResponse">
    <wsdl:part name="update_resourcedataResponse" element="tns:update_resourcedataResponse" />
  </wsdl:message>
  <wsdl:message name="get_resourcegroup_data">
    <wsdl:part name="get_resourcegroup_data" element="tns:get_resourcegroup_data" />
  </wsdl:message>
  <wsdl:message name="get_resourcegroup_dataResponse">
    <wsdl:part name="get_resourcegroup_dataResponse" element="tns:get_resourcegroup_dataResponse" />
  </wsdl:message>
  <wsdl:message name="get_scenario">
    <wsdl:part name="get_scenario" element="tns:get_scenario" />
  </wsdl:message>
  <wsdl:message name="get_scenarioResponse">
    <wsdl:part name="get_scenarioResponse" element="tns:get_scenarioResponse" />
  </wsdl:message>
  <wsdl:message name="get_network_data">
    <wsdl:part name="get_network_data" element="tns:get_network_data" />
  </wsdl:message>
  <wsdl:message name="get_network_dataResponse">
    <wsdl:part name="get_network_dataResponse" element="tns:get_network_dataResponse" />
  </wsdl:message>
  <wsdl:message name="update_scenario">
    <wsdl:part name="update_scenario" element="tns:update_scenario" />
  </wsdl:message>
  <wsdl:message name="update_scenarioResponse">
    <wsdl:part name="update_scenarioResponse" element="tns:update_scenarioResponse" />
  </wsdl:message>
  <wsdl:message name="compare_scenarios">
    <wsdl:part name="compare_scenarios" element="tns:compare_scenarios" />
  </wsdl:message>
  <wsdl:message name="compare_scenariosResponse">
    <wsdl:part name="compare_scenariosResponse" element="tns:compare_scenariosResponse" />
  </wsdl:message>
  <wsdl:message name="clone_scenario">
    <wsdl:part name="clone_scenario" element="tns:clone_scenario" />
  </wsdl:message>
  <wsdl:message name="clone_scenarioResponse">
    <wsdl:part name="clone_scenarioResponse" element="tns:clone_scenarioResponse" />
  </wsdl:message>
  <wsdl:message name="lock_scenario">
    <wsdl:part name="lock_scenario" element="tns:lock_scenario" />
  </wsdl:message>
  <wsdl:message name="lock_scenarioResponse">
    <wsdl:part name="lock_scenarioResponse" element="tns:lock_scenarioResponse" />
  </wsdl:message>
  <wsdl:message name="get_scenario_data">
    <wsdl:part name="get_scenario_data" element="tns:get_scenario_data" />
  </wsdl:message>
  <wsdl:message name="get_scenario_dataResponse">
    <wsdl:part name="get_scenario_dataResponse" element="tns:get_scenario_dataResponse" />
  </wsdl:message>
  <wsdl:message name="add_scenario">
    <wsdl:part name="add_scenario" element="tns:add_scenario" />
  </wsdl:message>
  <wsdl:message name="add_scenarioResponse">
    <wsdl:part name="add_scenarioResponse" element="tns:add_scenarioResponse" />
  </wsdl:message>
  <wsdl:message name="delete_scenario">
    <wsdl:part name="delete_scenario" element="tns:delete_scenario" />
  </wsdl:message>
  <wsdl:message name="delete_scenarioResponse">
    <wsdl:part name="delete_scenarioResponse" element="tns:delete_scenarioResponse" />
  </wsdl:message>
  <wsdl:message name="get_dataset_group">
    <wsdl:part name="get_dataset_group" element="tns:get_dataset_group" />
  </wsdl:message>
  <wsdl:message name="get_dataset_groupResponse">
    <wsdl:part name="get_dataset_groupResponse" element="tns:get_dataset_groupResponse" />
  </wsdl:message>
  <wsdl:message name="get_dataset_group_by_name">
    <wsdl:part name="get_dataset_group_by_name" element="tns:get_dataset_group_by_name" />
  </wsdl:message>
  <wsdl:message name="get_dataset_group_by_nameResponse">
    <wsdl:part name="get_dataset_group_by_nameResponse" element="tns:get_dataset_group_by_nameResponse" />
  </wsdl:message>
  <wsdl:message name="echo_array">
    <wsdl:part name="echo_array" element="tns:echo_array" />
  </wsdl:message>
  <wsdl:message name="echo_arrayResponse">
    <wsdl:part name="echo_arrayResponse" element="tns:echo_arrayResponse" />
  </wsdl:message>
  <wsdl:message name="get_groups_like_name">
    <wsdl:part name="get_groups_like_name" element="tns:get_groups_like_name" />
  </wsdl:message>
  <wsdl:message name="get_groups_like_nameResponse">
    <wsdl:part name="get_groups_like_nameResponse" element="tns:get_groups_like_nameResponse" />
  </wsdl:message>
  <wsdl:message name="add_dataset_group">
    <wsdl:part name="add_dataset_group" element="tns:add_dataset_group" />
  </wsdl:message>
  <wsdl:message name="add_dataset_groupResponse">
    <wsdl:part name="add_dataset_groupResponse" element="tns:add_dataset_groupResponse" />
  </wsdl:message>
  <wsdl:message name="get_group_datasets">
    <wsdl:part name="get_group_datasets" element="tns:get_group_datasets" />
  </wsdl:message>
  <wsdl:message name="get_group_datasetsResponse">
    <wsdl:part name="get_group_datasetsResponse" element="tns:get_group_datasetsResponse" />
  </wsdl:message>
  <wsdl:message name="bulk_insert_data">
    <wsdl:part name="bulk_insert_data" element="tns:bulk_insert_data" />
  </wsdl:message>
  <wsdl:message name="bulk_insert_dataResponse">
    <wsdl:part name="bulk_insert_dataResponse" element="tns:bulk_insert_dataResponse" />
  </wsdl:message>
  <wsdl:message name="get_vals_between_times">
    <wsdl:part name="get_vals_between_times" element="tns:get_vals_between_times" />
  </wsdl:message>
  <wsdl:message name="get_vals_between_timesResponse">
    <wsdl:part name="get_vals_between_timesResponse" element="tns:get_vals_between_timesResponse" />
  </wsdl:message>
  <wsdl:message name="update_dataset">
    <wsdl:part name="update_dataset" element="tns:update_dataset" />
  </wsdl:message>
  <wsdl:message name="update_datasetResponse">
    <wsdl:part name="update_datasetResponse" element="tns:update_datasetResponse" />
  </wsdl:message>
  <wsdl:message name="echo_eqtimeseries">
    <wsdl:part name="echo_eqtimeseries" element="tns:echo_eqtimeseries" />
  </wsdl:message>
  <wsdl:message name="echo_eqtimeseriesResponse">
    <wsdl:part name="echo_eqtimeseriesResponse" element="tns:echo_eqtimeseriesResponse" />
  </wsdl:message>
  <wsdl:message name="get_val_at_time">
    <wsdl:part name="get_val_at_time" element="tns:get_val_at_time" />
  </wsdl:message>
  <wsdl:message name="get_val_at_timeResponse">
    <wsdl:part name="get_val_at_timeResponse" element="tns:get_val_at_timeResponse" />
  </wsdl:message>
  <wsdl:message name="echo_scalar">
    <wsdl:part name="echo_scalar" element="tns:echo_scalar" />
  </wsdl:message>
  <wsdl:message name="echo_scalarResponse">
    <wsdl:part name="echo_scalarResponse" element="tns:echo_scalarResponse" />
  </wsdl:message>
  <wsdl:message name="get_metadata">
    <wsdl:part name="get_metadata" element="tns:get_metadata" />
  </wsdl:message>
  <wsdl:message name="get_metadataResponse">
    <wsdl:part name="get_metadataResponse" element="tns:get_metadataResponse" />
  </wsdl:message>
  <wsdl:message name="echo_timeseries">
    <wsdl:part name="echo_timeseries" element="tns:echo_timeseries" />
  </wsdl:message>
  <wsdl:message name="echo_timeseriesResponse">
    <wsdl:part name="echo_timeseriesResponse" element="tns:echo_timeseriesResponse" />
  </wsdl:message>
  <wsdl:message name="delete_dataset">
    <wsdl:part name="delete_dataset" element="tns:delete_dataset" />
  </wsdl:message>
  <wsdl:message name="delete_datasetResponse">
    <wsdl:part name="delete_datasetResponse" element="tns:delete_datasetResponse" />
  </wsdl:message>
  <wsdl:message name="check_json">
    <wsdl:part name="check_json" element="tns:check_json" />
  </wsdl:message>
  <wsdl:message name="check_jsonResponse">
    <wsdl:part name="check_jsonResponse" element="tns:check_jsonResponse" />
  </wsdl:message>
  <wsdl:message name="echo_descriptor">
    <wsdl:part name="echo_descriptor" element="tns:echo_descriptor" />
  </wsdl:message>
  <wsdl:message name="echo_descriptorResponse">
    <wsdl:part name="echo_descriptorResponse" element="tns:echo_descriptorResponse" />
  </wsdl:message>
  <wsdl:message name="get_dataset">
    <wsdl:part name="get_dataset" element="tns:get_dataset" />
  </wsdl:message>
  <wsdl:message name="get_datasetResponse">
    <wsdl:part name="get_datasetResponse" element="tns:get_datasetResponse" />
  </wsdl:message>
  <wsdl:message name="check_plugin_status">
    <wsdl:part name="check_plugin_status" element="tns:check_plugin_status" />
  </wsdl:message>
  <wsdl:message name="check_plugin_statusResponse">
    <wsdl:part name="check_plugin_statusResponse" element="tns:check_plugin_statusResponse" />
  </wsdl:message>
  <wsdl:message name="run_plugin">
    <wsdl:part name="run_plugin" element="tns:run_plugin" />
  </wsdl:message>
  <wsdl:message name="run_pluginResponse">
    <wsdl:part name="run_pluginResponse" element="tns:run_pluginResponse" />
  </wsdl:message>
  <wsdl:message name="get_plugins">
    <wsdl:part name="get_plugins" element="tns:get_plugins" />
  </wsdl:message>
  <wsdl:message name="get_pluginsResponse">
    <wsdl:part name="get_pluginsResponse" element="tns:get_pluginsResponse" />
  </wsdl:message>
  <wsdl:message name="get_network_as_xml_template">
    <wsdl:part name="get_network_as_xml_template" element="tns:get_network_as_xml_template" />
  </wsdl:message>
  <wsdl:message name="get_network_as_xml_templateResponse">
    <wsdl:part name="get_network_as_xml_templateResponse" element="tns:get_network_as_xml_templateResponse" />
  </wsdl:message>
  <wsdl:message name="update_template">
    <wsdl:part name="update_template" element="tns:update_template" />
  </wsdl:message>
  <wsdl:message name="update_templateResponse">
    <wsdl:part name="update_templateResponse" element="tns:update_templateResponse" />
  </wsdl:message>
  <wsdl:message name="get_templatetype">
    <wsdl:part name="get_templatetype" element="tns:get_templatetype" />
  </wsdl:message>
  <wsdl:message name="get_templatetypeResponse">
    <wsdl:part name="get_templatetypeResponse" element="tns:get_templatetypeResponse" />
  </wsdl:message>
  <wsdl:message name="get_template_by_name">
    <wsdl:part name="get_template_by_name" element="tns:get_template_by_name" />
  </wsdl:message>
  <wsdl:message name="get_template_by_nameResponse">
    <wsdl:part name="get_template_by_nameResponse" element="tns:get_template_by_nameResponse" />
  </wsdl:message>
  <wsdl:message name="add_typeattr">
    <wsdl:part name="add_typeattr" element="tns:add_typeattr" />
  </wsdl:message>
  <wsdl:message name="add_typeattrResponse">
    <wsdl:part name="add_typeattrResponse" element="tns:add_typeattrResponse" />
  </wsdl:message>
  <wsdl:message name="get_matching_resource_types">
    <wsdl:part name="get_matching_resource_types" element="tns:get_matching_resource_types" />
  </wsdl:message>
  <wsdl:message name="get_matching_resource_typesResponse">
    <wsdl:part name="get_matching_resource_typesResponse" element="tns:get_matching_resource_typesResponse" />
  </wsdl:message>
  <wsdl:message name="assign_types_to_resources">
    <wsdl:part name="assign_types_to_resources" element="tns:assign_types_to_resources" />
  </wsdl:message>
  <wsdl:message name="assign_types_to_resourcesResponse">
    <wsdl:part name="assign_types_to_resourcesResponse" element="tns:assign_types_to_resourcesResponse" />
  </wsdl:message>
  <wsdl:message name="assign_type_to_resource">
    <wsdl:part name="assign_type_to_resource" element="tns:assign_type_to_resource" />
  </wsdl:message>
  <wsdl:message name="assign_type_to_resourceResponse">
    <wsdl:part name="assign_type_to_resourceResponse" element="tns:assign_type_to_resourceResponse" />
  </wsdl:message>
  <wsdl:message name="validate_attr">
    <wsdl:part name="validate_attr" element="tns:validate_attr" />
  </wsdl:message>
  <wsdl:message name="validate_attrResponse">
    <wsdl:part name="validate_attrResponse" element="tns:validate_attrResponse" />
  </wsdl:message>
  <wsdl:message name="update_templatetype">
    <wsdl:part name="update_templatetype" element="tns:update_templatetype" />
  </wsdl:message>
  <wsdl:message name="update_templatetypeResponse">
    <wsdl:part name="update_templatetypeResponse" element="tns:update_templatetypeResponse" />
  </wsdl:message>
  <wsdl:message name="delete_typeattr">
    <wsdl:part name="delete_typeattr" element="tns:delete_typeattr" />
  </wsdl:message>
  <wsdl:message name="delete_typeattrResponse">
    <wsdl:part name="delete_typeattrResponse" element="tns:delete_typeattrResponse" />
  </wsdl:message>
  <wsdl:message name="add_template">
    <wsdl:part name="add_template" element="tns:add_template" />
  </wsdl:message>
  <wsdl:message name="add_templateResponse">
    <wsdl:part name="add_templateResponse" element="tns:add_templateResponse" />
  </wsdl:message>
  <wsdl:message name="get_template">
    <wsdl:part name="get_template" element="tns:get_template" />
  </wsdl:message>
  <wsdl:message name="get_templateResponse">
    <wsdl:part name="get_templateResponse" element="tns:get_templateResponse" />
  </wsdl:message>
  <wsdl:message name="delete_templatetype">
    <wsdl:part name="delete_templatetype" element="tns:delete_templatetype" />
  </wsdl:message>
  <wsdl:message name="delete_templatetypeResponse">
    <wsdl:part name="delete_templatetypeResponse" element="tns:delete_templatetypeResponse" />
  </wsdl:message>
  <wsdl:message name="upload_template_xml">
    <wsdl:part name="upload_template_xml" element="tns:upload_template_xml" />
  </wsdl:message>
  <wsdl:message name="upload_template_xmlResponse">
    <wsdl:part name="upload_template_xmlResponse" element="tns:upload_template_xmlResponse" />
  </wsdl:message>
  <wsdl:message name="remove_attr_from_type">
    <wsdl:part name="remove_attr_from_type" element="tns:remove_attr_from_type" />
  </wsdl:message>
  <wsdl:message name="remove_attr_from_typeResponse">
    <wsdl:part name="remove_attr_from_typeResponse" element="tns:remove_attr_from_typeResponse" />
  </wsdl:message>
  <wsdl:message name="add_templatetype">
    <wsdl:part name="add_templatetype" element="tns:add_templatetype" />
  </wsdl:message>
  <wsdl:message name="add_templatetypeResponse">
    <wsdl:part name="add_templatetypeResponse" element="tns:add_templatetypeResponse" />
  </wsdl:message>
  <wsdl:message name="delete_template">
    <wsdl:part name="delete_template" element="tns:delete_template" />
  </wsdl:message>
  <wsdl:message name="delete_templateResponse">
    <wsdl:part name="delete_templateResponse" element="tns:delete_templateResponse" />
  </wsdl:message>
  <wsdl:message name="apply_template_to_network">
    <wsdl:part name="apply_template_to_network" element="tns:apply_template_to_network" />
  </wsdl:message>
  <wsdl:message name="apply_template_to_networkResponse">
    <wsdl:part name="apply_template_to_networkResponse" element="tns:apply_template_to_networkResponse" />
  </wsdl:message>
  <wsdl:message name="remove_template_from_network">
    <wsdl:part name="remove_template_from_network" element="tns:remove_template_from_network" />
  </wsdl:message>
  <wsdl:message name="remove_template_from_networkResponse">
    <wsdl:part name="remove_template_from_networkResponse" element="tns:remove_template_from_networkResponse" />
  </wsdl:message>
  <wsdl:message name="get_templates">
    <wsdl:part name="get_templates" element="tns:get_templates" />
  </wsdl:message>
  <wsdl:message name="get_templatesResponse">
    <wsdl:part name="get_templatesResponse" element="tns:get_templatesResponse" />
  </wsdl:message>
  <wsdl:message name="get_templatetype_by_name">
    <wsdl:part name="get_templatetype_by_name" element="tns:get_templatetype_by_name" />
  </wsdl:message>
  <wsdl:message name="get_templatetype_by_nameResponse">
    <wsdl:part name="get_templatetype_by_nameResponse" element="tns:get_templatetype_by_nameResponse" />
  </wsdl:message>
  <wsdl:message name="remove_type_from_resource">
    <wsdl:part name="remove_type_from_resource" element="tns:remove_type_from_resource" />
  </wsdl:message>
  <wsdl:message name="remove_type_from_resourceResponse">
    <wsdl:part name="remove_type_from_resourceResponse" element="tns:remove_type_from_resourceResponse" />
  </wsdl:message>
  <wsdl:message name="add_image">
    <wsdl:part name="add_image" element="tns:add_image" />
  </wsdl:message>
  <wsdl:message name="add_imageResponse">
    <wsdl:part name="add_imageResponse" element="tns:add_imageResponse" />
  </wsdl:message>
  <wsdl:message name="get_image">
    <wsdl:part name="get_image" element="tns:get_image" />
  </wsdl:message>
  <wsdl:message name="get_imageResponse">
    <wsdl:part name="get_imageResponse" element="tns:get_imageResponse" />
  </wsdl:message>
  <wsdl:message name="remove_image">
    <wsdl:part name="remove_image" element="tns:remove_image" />
  </wsdl:message>
  <wsdl:message name="remove_imageResponse">
    <wsdl:part name="remove_imageResponse" element="tns:remove_imageResponse" />
  </wsdl:message>
  <wsdl:message name="remove_file">
    <wsdl:part name="remove_file" element="tns:remove_file" />
  </wsdl:message>
  <wsdl:message name="remove_fileResponse">
    <wsdl:part name="remove_fileResponse" element="tns:remove_fileResponse" />
  </wsdl:message>
  <wsdl:message name="get_file">
    <wsdl:part name="get_file" element="tns:get_file" />
  </wsdl:message>
  <wsdl:message name="get_fileResponse">
    <wsdl:part name="get_fileResponse" element="tns:get_fileResponse" />
  </wsdl:message>
  <wsdl:message name="add_file">
    <wsdl:part name="add_file" element="tns:add_file" />
  </wsdl:message>
  <wsdl:message name="add_fileResponse">
    <wsdl:part name="add_fileResponse" element="tns:add_fileResponse" />
  </wsdl:message>
  <wsdl:message name="set_project_permission">
    <wsdl:part name="set_project_permission" element="tns:set_project_permission" />
  </wsdl:message>
  <wsdl:message name="set_project_permissionResponse">
    <wsdl:part name="set_project_permissionResponse" element="tns:set_project_permissionResponse" />
  </wsdl:message>
  <wsdl:message name="share_network">
    <wsdl:part name="share_network" element="tns:share_network" />
  </wsdl:message>
  <wsdl:message name="share_networkResponse">
    <wsdl:part name="share_networkResponse" element="tns:share_networkResponse" />
  </wsdl:message>
  <wsdl:message name="lock_dataset">
    <wsdl:part name="lock_dataset" element="tns:lock_dataset" />
  </wsdl:message>
  <wsdl:message name="lock_datasetResponse">
    <wsdl:part name="lock_datasetResponse" element="tns:lock_datasetResponse" />
  </wsdl:message>
  <wsdl:message name="set_network_permission">
    <wsdl:part name="set_network_permission" element="tns:set_network_permission" />
  </wsdl:message>
  <wsdl:message name="set_network_permissionResponse">
    <wsdl:part name="set_network_permissionResponse" element="tns:set_network_permissionResponse" />
  </wsdl:message>
  <wsdl:message name="share_project">
    <wsdl:part name="share_project" element="tns:share_project" />
  </wsdl:message>
  <wsdl:message name="share_projectResponse">
    <wsdl:part name="share_projectResponse" element="tns:share_projectResponse" />
  </wsdl:message>
  <wsdl:message name="convert_units">
    <wsdl:part name="convert_units" element="tns:convert_units" />
  </wsdl:message>
  <wsdl:message name="convert_unitsResponse">
    <wsdl:part name="convert_unitsResponse" element="tns:convert_unitsResponse" />
  </wsdl:message>
  <wsdl:message name="get_dimensions">
    <wsdl:part name="get_dimensions" element="tns:get_dimensions" />
  </wsdl:message>
  <wsdl:message name="get_dimensionsResponse">
    <wsdl:part name="get_dimensionsResponse" element="tns:get_dimensionsResponse" />
  </wsdl:message>
  <wsdl:message name="add_dimension">
    <wsdl:part name="add_dimension" element="tns:add_dimension" />
  </wsdl:message>
  <wsdl:message name="add_dimensionResponse">
    <wsdl:part name="add_dimensionResponse" element="tns:add_dimensionResponse" />
  </wsdl:message>
  <wsdl:message name="add_unit">
    <wsdl:part name="add_unit" element="tns:add_unit" />
  </wsdl:message>
  <wsdl:message name="add_unitResponse">
    <wsdl:part name="add_unitResponse" element="tns:add_unitResponse" />
  </wsdl:message>
  <wsdl:message name="get_units">
    <wsdl:part name="get_units" element="tns:get_units" />
  </wsdl:message>
  <wsdl:message name="get_unitsResponse">
    <wsdl:part name="get_unitsResponse" element="tns:get_unitsResponse" />
  </wsdl:message>
  <wsdl:message name="delete_dimension">
    <wsdl:part name="delete_dimension" element="tns:delete_dimension" />
  </wsdl:message>
  <wsdl:message name="delete_dimensionResponse">
    <wsdl:part name="delete_dimensionResponse" element="tns:delete_dimensionResponse" />
  </wsdl:message>
  <wsdl:message name="convert_dataset">
    <wsdl:part name="convert_dataset" element="tns:convert_dataset" />
  </wsdl:message>
  <wsdl:message name="convert_datasetResponse">
    <wsdl:part name="convert_datasetResponse" element="tns:convert_datasetResponse" />
  </wsdl:message>
  <wsdl:message name="get_dimension">
    <wsdl:part name="get_dimension" element="tns:get_dimension" />
  </wsdl:message>
  <wsdl:message name="get_dimensionResponse">
    <wsdl:part name="get_dimensionResponse" element="tns:get_dimensionResponse" />
  </wsdl:message>
  <wsdl:message name="check_consistency">
    <wsdl:part name="check_consistency" element="tns:check_consistency" />
  </wsdl:message>
  <wsdl:message name="check_consistencyResponse">
    <wsdl:part name="check_consistencyResponse" element="tns:check_consistencyResponse" />
  </wsdl:message>
  <wsdl:message name="delete_unit">
    <wsdl:part name="delete_unit" element="tns:delete_unit" />
  </wsdl:message>
  <wsdl:message name="delete_unitResponse">
    <wsdl:part name="delete_unitResponse" element="tns:delete_unitResponse" />
  </wsdl:message>
  <wsdl:message name="update_unit">
    <wsdl:part name="update_unit" element="tns:update_unit" />
  </wsdl:message>
  <wsdl:message name="update_unitResponse">
    <wsdl:part name="update_unitResponse" element="tns:update_unitResponse" />
  </wsdl:message>
  <wsdl:portType name="HydraSoapApplication">
    <wsdl:operation name="login" parameterOrder="login">
      <wsdl:input name="login" message="tns:login" />
      <wsdl:output name="loginResponse" message="tns:loginResponse" />
      <wsdl:fault name="AuthenticationError" message="tns:AuthenticationError" />
    </wsdl:operation>
    <wsdl:operation name="get_all_users" parameterOrder="get_all_users">
      <wsdl:documentation>
            Get the username &amp; ID of all users.
        </wsdl:documentation>
      <wsdl:input name="get_all_users" message="tns:get_all_users" />
      <wsdl:output name="get_all_usersResponse" message="tns:get_all_usersResponse" />
    </wsdl:operation>
    <wsdl:operation name="delete_user" parameterOrder="delete_user">
      <wsdl:documentation>
            Delete a user.
        </wsdl:documentation>
      <wsdl:input name="delete_user" message="tns:delete_user" />
      <wsdl:output name="delete_userResponse" message="tns:delete_userResponse" />
    </wsdl:operation>
    <wsdl:operation name="delete_perm" parameterOrder="delete_perm">
      <wsdl:documentation>
            Delete a permission
        </wsdl:documentation>
      <wsdl:input name="delete_perm" message="tns:delete_perm" />
      <wsdl:output name="delete_permResponse" message="tns:delete_permResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_perm_by_code" parameterOrder="get_perm_by_code">
      <wsdl:documentation>
            Get a permission by its code 
        </wsdl:documentation>
      <wsdl:input name="get_perm_by_code" message="tns:get_perm_by_code" />
      <wsdl:output name="get_perm_by_codeResponse" message="tns:get_perm_by_codeResponse" />
    </wsdl:operation>
    <wsdl:operation name="delete_role_perm" parameterOrder="delete_role_perm">
      <wsdl:input name="delete_role_perm" message="tns:delete_role_perm" />
      <wsdl:output name="delete_role_permResponse" message="tns:delete_role_permResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_user_by_name" parameterOrder="get_user_by_name">
      <wsdl:documentation>
            Get a user by username
        </wsdl:documentation>
      <wsdl:input name="get_user_by_name" message="tns:get_user_by_name" />
      <wsdl:output name="get_user_by_nameResponse" message="tns:get_user_by_nameResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_user_roles" parameterOrder="get_user_roles">
      <wsdl:documentation>
            Get the roles assigned to a user.
            @param: user_id
        </wsdl:documentation>
      <wsdl:input name="get_user_roles" message="tns:get_user_roles" />
      <wsdl:output name="get_user_rolesResponse" message="tns:get_user_rolesResponse" />
    </wsdl:operation>
    <wsdl:operation name="set_user_role" parameterOrder="set_user_role">
      <wsdl:input name="set_user_role" message="tns:set_user_role" />
      <wsdl:output name="set_user_roleResponse" message="tns:set_user_roleResponse" />
    </wsdl:operation>
    <wsdl:operation name="delete_role" parameterOrder="delete_role">
      <wsdl:documentation>
            Delete a role.
        </wsdl:documentation>
      <wsdl:input name="delete_role" message="tns:delete_role" />
      <wsdl:output name="delete_roleResponse" message="tns:delete_roleResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_username" parameterOrder="get_username">
      <wsdl:documentation>
            Add a new user.
        </wsdl:documentation>
      <wsdl:input name="get_username" message="tns:get_username" />
      <wsdl:output name="get_usernameResponse" message="tns:get_usernameResponse" />
    </wsdl:operation>
    <wsdl:operation name="delete_user_role" parameterOrder="delete_user_role">
      <wsdl:input name="delete_user_role" message="tns:delete_user_role" />
      <wsdl:output name="delete_user_roleResponse" message="tns:delete_user_roleResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_perm" parameterOrder="get_perm">
      <wsdl:documentation>
            Get all permissions
        </wsdl:documentation>
      <wsdl:input name="get_perm" message="tns:get_perm" />
      <wsdl:output name="get_permResponse" message="tns:get_permResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_role" parameterOrder="get_role">
      <wsdl:documentation>
            Get a role by its ID.
        </wsdl:documentation>
      <wsdl:input name="get_role" message="tns:get_role" />
      <wsdl:output name="get_roleResponse" message="tns:get_roleResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_user_permissions" parameterOrder="get_user_permissions">
      <wsdl:documentation>
            Get all the permissions granted to the user, based
            on all the roles that the user is in.
            @param: user_id
        </wsdl:documentation>
      <wsdl:input name="get_user_permissions" message="tns:get_user_permissions" />
      <wsdl:output name="get_user_permissionsResponse" message="tns:get_user_permissionsResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_all_perms" parameterOrder="get_all_perms">
      <wsdl:documentation>
            Get all permissions
        </wsdl:documentation>
      <wsdl:input name="get_all_perms" message="tns:get_all_perms" />
      <wsdl:output name="get_all_permsResponse" message="tns:get_all_permsResponse" />
    </wsdl:operation>
    <wsdl:operation name="add_perm" parameterOrder="add_perm">
      <wsdl:documentation>
            Add a new permission
        </wsdl:documentation>
      <wsdl:input name="add_perm" message="tns:add_perm" />
      <wsdl:output name="add_permResponse" message="tns:add_permResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_role_by_code" parameterOrder="get_role_by_code">
      <wsdl:documentation>
            Get a role by its code
        </wsdl:documentation>
      <wsdl:input name="get_role_by_code" message="tns:get_role_by_code" />
      <wsdl:output name="get_role_by_codeResponse" message="tns:get_role_by_codeResponse" />
    </wsdl:operation>
    <wsdl:operation name="add_user" parameterOrder="add_user">
      <wsdl:documentation>
            Add a new user.
        </wsdl:documentation>
      <wsdl:input name="add_user" message="tns:add_user" />
      <wsdl:output name="add_userResponse" message="tns:add_userResponse" />
    </wsdl:operation>
    <wsdl:operation name="update_user_display_name" parameterOrder="update_user_display_name">
      <wsdl:documentation>
            Update a user's display name
        </wsdl:documentation>
      <wsdl:input name="update_user_display_name" message="tns:update_user_display_name" />
      <wsdl:output name="update_user_display_nameResponse" message="tns:update_user_display_nameResponse" />
    </wsdl:operation>
    <wsdl:operation name="set_role_perm" parameterOrder="set_role_perm">
      <wsdl:input name="set_role_perm" message="tns:set_role_perm" />
      <wsdl:output name="set_role_permResponse" message="tns:set_role_permResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_all_roles" parameterOrder="get_all_roles">
      <wsdl:documentation>
            Get all roles
        </wsdl:documentation>
      <wsdl:input name="get_all_roles" message="tns:get_all_roles" />
      <wsdl:output name="get_all_rolesResponse" message="tns:get_all_rolesResponse" />
    </wsdl:operation>
    <wsdl:operation name="update_user_password" parameterOrder="update_user_password">
      <wsdl:documentation>
            Update a user's password
        </wsdl:documentation>
      <wsdl:input name="update_user_password" message="tns:update_user_password" />
      <wsdl:output name="update_user_passwordResponse" message="tns:update_user_passwordResponse" />
    </wsdl:operation>
    <wsdl:operation name="add_role" parameterOrder="add_role">
      <wsdl:documentation>
            Add a new role.
        </wsdl:documentation>
      <wsdl:input name="add_role" message="tns:add_role" />
      <wsdl:output name="add_roleResponse" message="tns:add_roleResponse" />
    </wsdl:operation>
    <wsdl:operation name="update_role" parameterOrder="update_role">
      <wsdl:documentation>
            Update the role.
            Used to add permissions and users to a role.
        </wsdl:documentation>
      <wsdl:input name="update_role" message="tns:update_role" />
      <wsdl:output name="update_roleResponse" message="tns:update_roleResponse" />
    </wsdl:operation>
    <wsdl:operation name="logout" parameterOrder="logout">
      <wsdl:input name="logout" message="tns:logout" />
      <wsdl:output name="logoutResponse" message="tns:logoutResponse" />
      <wsdl:fault name="AuthenticationError" message="tns:AuthenticationError" />
    </wsdl:operation>
    <wsdl:operation name="test_get_all_node_data" parameterOrder="test_get_all_node_data">
      <wsdl:documentation>
        Return all the attributes for all the nodes in a given network and a 
        given scenario.

        :returns: An array of soap_server.hydra_complexmodels.ResourceData

        In this function array data and timeseries data are returned as JSON strings.
        
        If your data structure looks like:

        +----+----+-----+
        | H1 | H2 | H3  |    
        +====+====+=====+
        | 1  | 10 | 100 |
        +----+----+-----+
        | 2  | 20 | 200 |
        +----+----+-----+
        | 3  | 30 | 300 |
        +----+----+-----+
        | 4  | 40 | 400 |
        +----+----+-----+

        Then hydra will provide the data in the following format:
        
        '{
            "H1" : {"0":1, "1":2, "3":3, "4":4},

            "H2"  : {"0":10, "1":20, "3":30, "4":40},

            "H3"  : {"0":100, "1":200, "3":300, "4":400}

        }'

        For a timeseries:

        +-------------------------+----+----+-----+
        | Time                    | H1 | H2 | H3  |    
        +=========================+====+====+=====+
        | 2014/09/04 16:46:12:00  | 1  | 10 | 100 |
        +-------------------------+----+----+-----+
        | 2014/09/05 16:46:12:00  | 2  | 20 | 200 |
        +-------------------------+----+----+-----+
        | 2014/09/06 16:46:12:00  | 3  | 30 | 300 |
        +-------------------------+----+----+-----+
        | 2014/09/07 16:46:12:00  | 4  | 40 | 400 |
        +-------------------------+----+----+-----+

        Then hydra will provide the data in the following format:
        
        '{
            "H1" : {

                    "2014/09/04 16:46:12:00":1,

                    "2014/09/05 16:46:12:00":2,

                    "2014/09/06 16:46:12:00":3,

                    "2014/09/07 16:46:12:00":4},


            "H2" : {

                    "2014/09/04 16:46:12:00":10,

                    "2014/09/05 16:46:12:00":20,

                    "2014/09/06 16:46:12:00":30,

                    "2014/09/07 16:46:12:00":40},


            "H3" :  {

                     "2014/09/04 16:46:12:00":100,

                     "2014/09/05 16:46:12:00":200,

                     "2014/09/06 16:46:12:00":300,

                     "2014/09/07 16:46:12:00":400}

        }'
        </wsdl:documentation>
      <wsdl:input name="test_get_all_node_data" message="tns:test_get_all_node_data" />
      <wsdl:output name="test_get_all_node_dataResponse" message="tns:test_get_all_node_dataResponse" />
    </wsdl:operation>
    <wsdl:operation name="update_network" parameterOrder="update_network">
      <wsdl:documentation>
            Update an entire network
        </wsdl:documentation>
      <wsdl:input name="update_network" message="tns:update_network" />
      <wsdl:output name="update_networkResponse" message="tns:update_networkResponse" />
    </wsdl:operation>
    <wsdl:operation name="add_node" parameterOrder="add_node">
      <wsdl:documentation>
        Add a node to a network:

        .. code-block:: python

            (Node){
               id = 1027
               name = "Node 1"
               description = "Node Description"
               x = 0.0
               y = 0.0
               attributes =
                  (ResourceAttrArray){
                     ResourceAttr[] =
                        (ResourceAttr){
                           attr_id = 1234
                        },
                        (ResourceAttr){
                           attr_id = 4321
                        },
                  }
             }
        </wsdl:documentation>
      <wsdl:input name="add_node" message="tns:add_node" />
      <wsdl:output name="add_nodeResponse" message="tns:add_nodeResponse" />
    </wsdl:operation>
    <wsdl:operation name="purge_node" parameterOrder="purge_node">
      <wsdl:documentation>
            Remove node from DB completely
            If there are attributes on the node, use purge_data to try to
            delete the data. If no other resources link to this data, it
            will be deleted.

        </wsdl:documentation>
      <wsdl:input name="purge_node" message="tns:purge_node" />
      <wsdl:output name="purge_nodeResponse" message="tns:purge_nodeResponse" />
    </wsdl:operation>
    <wsdl:operation name="add_link" parameterOrder="add_link">
      <wsdl:documentation>
            Add a link to a network
        </wsdl:documentation>
      <wsdl:input name="add_link" message="tns:add_link" />
      <wsdl:output name="add_linkResponse" message="tns:add_linkResponse" />
    </wsdl:operation>
    <wsdl:operation name="add_network" parameterOrder="add_network">
      <wsdl:documentation>
        Takes an entire network complex model and saves it to the DB.  This
        complex model includes links &amp; scenarios (with resource data).  Returns
        the network's complex model.

        As links connect two nodes using the node_ids, if the nodes are new
        they will not yet have node_ids. In this case, use negative ids as
        temporary IDS until the node has been given an permanent ID.

        All inter-object referencing of new objects should be done using
        negative IDs in the client.

        The returned object will have positive IDS

        </wsdl:documentation>
      <wsdl:input name="add_network" message="tns:add_network" />
      <wsdl:output name="add_networkResponse" message="tns:add_networkResponse" />
    </wsdl:operation>
    <wsdl:operation name="purge_link" parameterOrder="purge_link">
      <wsdl:documentation>
            Remove link from DB completely
            If there are attributes on the link, use purge_data to try to
            delete the data. If no other resources link to this data, it
            will be deleted.
        </wsdl:documentation>
      <wsdl:input name="purge_link" message="tns:purge_link" />
      <wsdl:output name="purge_linkResponse" message="tns:purge_linkResponse" />
    </wsdl:operation>
    <wsdl:operation name="activate_group" parameterOrder="activate_group">
      <wsdl:documentation>
            Set the status of a group to 'A'
        </wsdl:documentation>
      <wsdl:input name="activate_group" message="tns:activate_group" />
      <wsdl:output name="activate_groupResponse" message="tns:activate_groupResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_resources_of_type" parameterOrder="get_resources_of_type">
      <wsdl:documentation>
            Return a list of Nodes, Links or ResourceGroups
            which have the specified type.
            @returns list of ResourceSummary objects.
            These objects contain the attributes common to all resources, namely:
            type, id, name, description, attribues and types.
        </wsdl:documentation>
      <wsdl:input name="get_resources_of_type" message="tns:get_resources_of_type" />
      <wsdl:output name="get_resources_of_typeResponse" message="tns:get_resources_of_typeResponse" />
    </wsdl:operation>
    <wsdl:operation name="delete_group" parameterOrder="delete_group">
      <wsdl:documentation>
            Set the status of a group to 'X'
        </wsdl:documentation>
      <wsdl:input name="delete_group" message="tns:delete_group" />
      <wsdl:output name="delete_groupResponse" message="tns:delete_groupResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_all_node_data" parameterOrder="get_all_node_data">
      <wsdl:documentation>
            Return all the attributes for all the nodes in a given network and a 
            given scenario.
            Returns a list of ResourceAttr objects, each with a resourcescenario
            attribute, containing the actual value for the scenario specified.
        </wsdl:documentation>
      <wsdl:input name="get_all_node_data" message="tns:get_all_node_data" />
      <wsdl:output name="get_all_node_dataResponse" message="tns:get_all_node_dataResponse" />
    </wsdl:operation>
    <wsdl:operation name="update_link" parameterOrder="update_link">
      <wsdl:documentation>
            Update a link.
        </wsdl:documentation>
      <wsdl:input name="update_link" message="tns:update_link" />
      <wsdl:output name="update_linkResponse" message="tns:update_linkResponse" />
    </wsdl:operation>
    <wsdl:operation name="delete_network" parameterOrder="delete_network">
      <wsdl:documentation>
        Set status of network for delete or un-delete
        </wsdl:documentation>
      <wsdl:input name="delete_network" message="tns:delete_network" />
      <wsdl:output name="delete_networkResponse" message="tns:delete_networkResponse" />
    </wsdl:operation>
    <wsdl:operation name="update_node" parameterOrder="update_node">
      <wsdl:documentation>
        Update a node.
        If new attributes are present, they will be added to the node.
        The non-presence of attributes does not remove them.

        .. code-block:: python

            (Node){
               id = 1039
               name = "Node 1"
               description = "Node Description"
               x = 0.0
               y = 0.0
               status = "A"
               attributes =
                  (ResourceAttrArray){
                     ResourceAttr[] =
                        (ResourceAttr){
                           id = 850
                           attr_id = 1038
                           ref_id = 1039
                           ref_key = "NODE"
                           attr_is_var = True
                        },
                        (ResourceAttr){
                           id = 852
                           attr_id = 1040
                           ref_id = 1039
                           ref_key = "NODE"
                           attr_is_var = True
                        },
                  }
             }

        </wsdl:documentation>
      <wsdl:input name="update_node" message="tns:update_node" />
      <wsdl:output name="update_nodeResponse" message="tns:update_nodeResponse" />
    </wsdl:operation>
    <wsdl:operation name="delete_resourceattr" parameterOrder="delete_resourceattr">
      <wsdl:documentation>
            Deletes a resource attribute and all associated data.
        </wsdl:documentation>
      <wsdl:input name="delete_resourceattr" message="tns:delete_resourceattr" />
      <wsdl:output name="delete_resourceattrResponse" message="tns:delete_resourceattrResponse" />
    </wsdl:operation>
    <wsdl:operation name="delete_node" parameterOrder="delete_node">
      <wsdl:documentation>
            Set the status of a node to 'X'
        </wsdl:documentation>
      <wsdl:input name="delete_node" message="tns:delete_node" />
      <wsdl:output name="delete_nodeResponse" message="tns:delete_nodeResponse" />
    </wsdl:operation>
    <wsdl:operation name="network_exists" parameterOrder="network_exists">
      <wsdl:documentation>
        Return a whole network as a complex model.
        </wsdl:documentation>
      <wsdl:input name="network_exists" message="tns:network_exists" />
      <wsdl:output name="network_existsResponse" message="tns:network_existsResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_network_extents" parameterOrder="get_network_extents">
      <wsdl:documentation>
        Given a network, return its maximum extents.
        This would be the minimum x value of all nodes,
        the minimum y value of all nodes,
        the maximum x value of all nodes and
        maximum y value of all nodes.

        @returns NetworkExtents object
        </wsdl:documentation>
      <wsdl:input name="get_network_extents" message="tns:get_network_extents" />
      <wsdl:output name="get_network_extentsResponse" message="tns:get_network_extentsResponse" />
    </wsdl:operation>
    <wsdl:operation name="activate_network" parameterOrder="activate_network">
      <wsdl:documentation>
        Deletes a network. This does not remove the network from the DB. It
        just sets the status to 'X', meaning it can no longer be seen by the
        user.
        </wsdl:documentation>
      <wsdl:input name="activate_network" message="tns:activate_network" />
      <wsdl:output name="activate_networkResponse" message="tns:activate_networkResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_all_link_data" parameterOrder="get_all_link_data">
      <wsdl:documentation>
            Return all the attributes for all the links in a given network and a 
            given scenario.
            Returns a list of ResourceAttr objects, each with a resourcescenario
            attribute, containing the actual value for the scenario specified.
        </wsdl:documentation>
      <wsdl:input name="get_all_link_data" message="tns:get_all_link_data" />
      <wsdl:output name="get_all_link_dataResponse" message="tns:get_all_link_dataResponse" />
    </wsdl:operation>
    <wsdl:operation name="clean_up_network" parameterOrder="clean_up_network">
      <wsdl:documentation>
            Purge all nodes, links, groups and scenarios from a network which 
            have previously been deleted.
        </wsdl:documentation>
      <wsdl:input name="clean_up_network" message="tns:clean_up_network" />
      <wsdl:output name="clean_up_networkResponse" message="tns:clean_up_networkResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_node" parameterOrder="get_node">
      <wsdl:documentation>
            Get a node using the node_id.
            optionally, scenario_id can be included if data is to be included
        </wsdl:documentation>
      <wsdl:input name="get_node" message="tns:get_node" />
      <wsdl:output name="get_nodeResponse" message="tns:get_nodeResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_link" parameterOrder="get_link">
      <wsdl:input name="get_link" message="tns:get_link" />
      <wsdl:output name="get_linkResponse" message="tns:get_linkResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_network" parameterOrder="get_network">
      <wsdl:documentation>
            Return a whole network as a complex model.
        </wsdl:documentation>
      <wsdl:input name="get_network" message="tns:get_network" />
      <wsdl:output name="get_networkResponse" message="tns:get_networkResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_all_group_data" parameterOrder="get_all_group_data">
      <wsdl:documentation>
            Return all the attributes for all the groups in a given network and a 
            given scenario.
            Returns a list of ResourceAttr objects, each with a resourcescenario
            attribute, containing the actual value for the scenario specified.
        </wsdl:documentation>
      <wsdl:input name="get_all_group_data" message="tns:get_all_group_data" />
      <wsdl:output name="get_all_group_dataResponse" message="tns:get_all_group_dataResponse" />
    </wsdl:operation>
    <wsdl:operation name="activate_link" parameterOrder="activate_link">
      <wsdl:documentation>
            Set the status of a link to 'X'
        </wsdl:documentation>
      <wsdl:input name="activate_link" message="tns:activate_link" />
      <wsdl:output name="activate_linkResponse" message="tns:activate_linkResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_network_by_name" parameterOrder="get_network_by_name">
      <wsdl:documentation>
        Return a whole network as a complex model.
        </wsdl:documentation>
      <wsdl:input name="get_network_by_name" message="tns:get_network_by_name" />
      <wsdl:output name="get_network_by_nameResponse" message="tns:get_network_by_nameResponse" />
    </wsdl:operation>
    <wsdl:operation name="delete_link" parameterOrder="delete_link">
      <wsdl:documentation>
            Set the status of a link to 'X'
        </wsdl:documentation>
      <wsdl:input name="delete_link" message="tns:delete_link" />
      <wsdl:output name="delete_linkResponse" message="tns:delete_linkResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_resourcegroup" parameterOrder="get_resourcegroup">
      <wsdl:input name="get_resourcegroup" message="tns:get_resourcegroup" />
      <wsdl:output name="get_resourcegroupResponse" message="tns:get_resourcegroupResponse" />
    </wsdl:operation>
    <wsdl:operation name="add_group" parameterOrder="add_group">
      <wsdl:documentation>
            Add a resourcegroup to a network
        </wsdl:documentation>
      <wsdl:input name="add_group" message="tns:add_group" />
      <wsdl:output name="add_groupResponse" message="tns:add_groupResponse" />
    </wsdl:operation>
    <wsdl:operation name="test_get_all_link_data" parameterOrder="test_get_all_link_data">
      <wsdl:documentation>
        Return all the attributes for all the nodes in a given network and a 
        given scenario.

        :returns: An array of soap_server.hydra_complexmodels.ResourceData

        For documentation on how array and timeseries data should look, see documentation
        for get_all_node_data.

        </wsdl:documentation>
      <wsdl:input name="test_get_all_link_data" message="tns:test_get_all_link_data" />
      <wsdl:output name="test_get_all_link_dataResponse" message="tns:test_get_all_link_dataResponse" />
    </wsdl:operation>
    <wsdl:operation name="validate_network_topology" parameterOrder="validate_network_topology">
      <wsdl:documentation>
            Check for the presence of orphan nodes in a network.
        </wsdl:documentation>
      <wsdl:input name="validate_network_topology" message="tns:validate_network_topology" />
      <wsdl:output name="validate_network_topologyResponse" message="tns:validate_network_topologyResponse" />
    </wsdl:operation>
    <wsdl:operation name="activate_node" parameterOrder="activate_node">
      <wsdl:documentation>
            Set the status of a node to 'A'
        </wsdl:documentation>
      <wsdl:input name="activate_node" message="tns:activate_node" />
      <wsdl:output name="activate_nodeResponse" message="tns:activate_nodeResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_scenarios" parameterOrder="get_scenarios">
      <wsdl:documentation>
            Get all the scenarios in a given network.
        </wsdl:documentation>
      <wsdl:input name="get_scenarios" message="tns:get_scenarios" />
      <wsdl:output name="get_scenariosResponse" message="tns:get_scenariosResponse" />
    </wsdl:operation>
    <wsdl:operation name="add_project" parameterOrder="add_project">
      <wsdl:documentation>
            Add a new project
            returns a project complexmodel
        </wsdl:documentation>
      <wsdl:input name="add_project" message="tns:add_project" />
      <wsdl:output name="add_projectResponse" message="tns:add_projectResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_projects" parameterOrder="get_projects">
      <wsdl:documentation>
            get a project complexmodel
        </wsdl:documentation>
      <wsdl:input name="get_projects" message="tns:get_projects" />
      <wsdl:output name="get_projectsResponse" message="tns:get_projectsResponse" />
    </wsdl:operation>
    <wsdl:operation name="delete_project" parameterOrder="delete_project">
      <wsdl:documentation>
            Set the status of a project to 'X'
        </wsdl:documentation>
      <wsdl:input name="delete_project" message="tns:delete_project" />
      <wsdl:output name="delete_projectResponse" message="tns:delete_projectResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_networks" parameterOrder="get_networks">
      <wsdl:documentation>
            Get all networks in a project
            Returns an array of network objects.
        </wsdl:documentation>
      <wsdl:input name="get_networks" message="tns:get_networks" />
      <wsdl:output name="get_networksResponse" message="tns:get_networksResponse" />
    </wsdl:operation>
    <wsdl:operation name="update_project" parameterOrder="update_project">
      <wsdl:documentation>
            Update a project
            returns a project complexmodel
        </wsdl:documentation>
      <wsdl:input name="update_project" message="tns:update_project" />
      <wsdl:output name="update_projectResponse" message="tns:update_projectResponse" />
    </wsdl:operation>
    <wsdl:operation name="purge_project" parameterOrder="purge_project">
      <wsdl:documentation>
            Set the status of a project to 'X'
        </wsdl:documentation>
      <wsdl:input name="purge_project" message="tns:purge_project" />
      <wsdl:output name="purge_projectResponse" message="tns:purge_projectResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_project" parameterOrder="get_project">
      <wsdl:documentation>
            get a project complexmodel
        </wsdl:documentation>
      <wsdl:input name="get_project" message="tns:get_project" />
      <wsdl:output name="get_projectResponse" message="tns:get_projectResponse" />
    </wsdl:operation>
    <wsdl:operation name="add_resourcegroup" parameterOrder="add_resourcegroup">
      <wsdl:documentation>
            Add a new group to a network.
        </wsdl:documentation>
      <wsdl:input name="add_resourcegroup" message="tns:add_resourcegroup" />
      <wsdl:output name="add_resourcegroupResponse" message="tns:add_resourcegroupResponse" />
    </wsdl:operation>
    <wsdl:operation name="add_resourcegroupitem" parameterOrder="add_resourcegroupitem">
      <wsdl:input name="add_resourcegroupitem" message="tns:add_resourcegroupitem" />
      <wsdl:output name="add_resourcegroupitemResponse" message="tns:add_resourcegroupitemResponse" />
    </wsdl:operation>
    <wsdl:operation name="update_resourcegroup" parameterOrder="update_resourcegroup">
      <wsdl:documentation>
            Add a new group to a network.
        </wsdl:documentation>
      <wsdl:input name="update_resourcegroup" message="tns:update_resourcegroup" />
      <wsdl:output name="update_resourcegroupResponse" message="tns:update_resourcegroupResponse" />
    </wsdl:operation>
    <wsdl:operation name="delete_resourcegroupitem" parameterOrder="delete_resourcegroupitem">
      <wsdl:input name="delete_resourcegroupitem" message="tns:delete_resourcegroupitem" />
      <wsdl:output name="delete_resourcegroupitemResponse" message="tns:delete_resourcegroupitemResponse" />
    </wsdl:operation>
    <wsdl:operation name="delete_resourcegroup" parameterOrder="delete_resourcegroup">
      <wsdl:documentation>
            Add a new group to a scenario.
        </wsdl:documentation>
      <wsdl:input name="delete_resourcegroup" message="tns:delete_resourcegroup" />
      <wsdl:output name="delete_resourcegroupResponse" message="tns:delete_resourcegroupResponse" />
    </wsdl:operation>
    <wsdl:operation name="add_attribute" parameterOrder="add_attribute">
      <wsdl:documentation>
        Add a generic attribute, which can then be used in creating
        a resource attribute, and put into a type.

        .. code-block:: python

            (Attr){
                id = 1020
                name = "Test Attr"
                dimen = "very big"
            }

        </wsdl:documentation>
      <wsdl:input name="add_attribute" message="tns:add_attribute" />
      <wsdl:output name="add_attributeResponse" message="tns:add_attributeResponse" />
    </wsdl:operation>
    <wsdl:operation name="add_resource_attribute" parameterOrder="add_resource_attribute">
      <wsdl:documentation>
            Add a resource attribute attribute to a resource.

            attr_is_var indicates whether the attribute is a variable or not --
            this is used in simulation to indicate that this value is expected
            to be filled in by the simulator.
        </wsdl:documentation>
      <wsdl:input name="add_resource_attribute" message="tns:add_resource_attribute" />
      <wsdl:output name="add_resource_attributeResponse" message="tns:add_resource_attributeResponse" />
    </wsdl:operation>
    <wsdl:operation name="delete_attribute" parameterOrder="delete_attribute">
      <wsdl:documentation>
            Set the status of an attribute to 'X'
        </wsdl:documentation>
      <wsdl:input name="delete_attribute" message="tns:delete_attribute" />
      <wsdl:output name="delete_attributeResponse" message="tns:delete_attributeResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_attribute" parameterOrder="get_attribute">
      <wsdl:documentation>
            Get a specific attribute by its name.
        </wsdl:documentation>
      <wsdl:input name="get_attribute" message="tns:get_attribute" />
      <wsdl:output name="get_attributeResponse" message="tns:get_attributeResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_attribute_by_id" parameterOrder="get_attribute_by_id">
      <wsdl:documentation>
            Get a specific attribute by its ID.
        </wsdl:documentation>
      <wsdl:input name="get_attribute_by_id" message="tns:get_attribute_by_id" />
      <wsdl:output name="get_attribute_by_idResponse" message="tns:get_attribute_by_idResponse" />
    </wsdl:operation>
    <wsdl:operation name="add_attributes" parameterOrder="add_attributes">
      <wsdl:documentation>
        Add a generic attribute, which can then be used in creating
        a resource attribute, and put into a type.

        .. code-block:: python

            (Attr){
                id = 1020
                name = "Test Attr"
                dimen = "very big"
            }

        </wsdl:documentation>
      <wsdl:input name="add_attributes" message="tns:add_attributes" />
      <wsdl:output name="add_attributesResponse" message="tns:add_attributesResponse" />
    </wsdl:operation>
    <wsdl:operation name="add_node_attrs_from_type" parameterOrder="add_node_attrs_from_type">
      <wsdl:documentation>
            adds all the attributes defined by a type to a node.
        </wsdl:documentation>
      <wsdl:input name="add_node_attrs_from_type" message="tns:add_node_attrs_from_type" />
      <wsdl:output name="add_node_attrs_from_typeResponse" message="tns:add_node_attrs_from_typeResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_attributes" parameterOrder="get_attributes">
      <wsdl:documentation>
            Get all attributes
        </wsdl:documentation>
      <wsdl:input name="get_attributes" message="tns:get_attributes" />
      <wsdl:output name="get_attributesResponse" message="tns:get_attributesResponse" />
    </wsdl:operation>
    <wsdl:operation name="purge_scenario" parameterOrder="purge_scenario">
      <wsdl:documentation>
            Set the status of a scenario to 'X'.
        </wsdl:documentation>
      <wsdl:input name="purge_scenario" message="tns:purge_scenario" />
      <wsdl:output name="purge_scenarioResponse" message="tns:purge_scenarioResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_attribute_datasets" parameterOrder="get_attribute_datasets">
      <wsdl:documentation>
            Get all the datasets from resource attributes with the given attribute
            ID in the given scenario.

            Return a list of resource attributes with their associated
            resource scenarios (and values).
        </wsdl:documentation>
      <wsdl:input name="get_attribute_datasets" message="tns:get_attribute_datasets" />
      <wsdl:output name="get_attribute_datasetsResponse" message="tns:get_attribute_datasetsResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_node_data" parameterOrder="get_node_data">
      <wsdl:documentation>
            Get all the resource scenarios for a given node 
            in a given scenario. If type_id is specified, only
            return the resource scenarios for the attributes
            within the type.
        </wsdl:documentation>
      <wsdl:input name="get_node_data" message="tns:get_node_data" />
      <wsdl:output name="get_node_dataResponse" message="tns:get_node_dataResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_link_data" parameterOrder="get_link_data">
      <wsdl:documentation>
            Get all the resource scenarios for a given link 
            in a given scenario. If type_id is specified, only
            return the resource scenarios for the attributes
            within the type.
        </wsdl:documentation>
      <wsdl:input name="get_link_data" message="tns:get_link_data" />
      <wsdl:output name="get_link_dataResponse" message="tns:get_link_dataResponse" />
    </wsdl:operation>
    <wsdl:operation name="unlock_scenario" parameterOrder="unlock_scenario">
      <wsdl:input name="unlock_scenario" message="tns:unlock_scenario" />
      <wsdl:output name="unlock_scenarioResponse" message="tns:unlock_scenarioResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_node_attribute_data" parameterOrder="get_node_attribute_data">
      <wsdl:documentation>
            Get the data for multiple attributes on multiple nodes
            across multiple scenarios.
            @returns a list of AttributeData objects, which consist of a list
            of ResourceAttribute objects and a list of corresponding
            ResourceScenario objects.
        </wsdl:documentation>
      <wsdl:input name="get_node_attribute_data" message="tns:get_node_attribute_data" />
      <wsdl:output name="get_node_attribute_dataResponse" message="tns:get_node_attribute_dataResponse" />
    </wsdl:operation>
    <wsdl:operation name="activate_scenario" parameterOrder="activate_scenario">
      <wsdl:documentation>
            Set the status of a scenario to 'X'.
        </wsdl:documentation>
      <wsdl:input name="activate_scenario" message="tns:activate_scenario" />
      <wsdl:output name="activate_scenarioResponse" message="tns:activate_scenarioResponse" />
    </wsdl:operation>
    <wsdl:operation name="delete_resourcedata" parameterOrder="delete_resourcedata">
      <wsdl:documentation>
            Remove the data associated with a resource in a scenario.
        </wsdl:documentation>
      <wsdl:input name="delete_resourcedata" message="tns:delete_resourcedata" />
      <wsdl:output name="delete_resourcedataResponse" message="tns:delete_resourcedataResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_dataset_scenarios" parameterOrder="get_dataset_scenarios">
      <wsdl:documentation>
            Get all the scenarios attached to a dataset
            @returns a list of scenario_ids
        </wsdl:documentation>
      <wsdl:input name="get_dataset_scenarios" message="tns:get_dataset_scenarios" />
      <wsdl:output name="get_dataset_scenariosResponse" message="tns:get_dataset_scenariosResponse" />
    </wsdl:operation>
    <wsdl:operation name="add_data_to_attribute" parameterOrder="add_data_to_attribute">
      <wsdl:documentation>
                Add data to a resource scenario outside of a network update
        </wsdl:documentation>
      <wsdl:input name="add_data_to_attribute" message="tns:add_data_to_attribute" />
      <wsdl:output name="add_data_to_attributeResponse" message="tns:add_data_to_attributeResponse" />
    </wsdl:operation>
    <wsdl:operation name="update_resourcedata" parameterOrder="update_resourcedata">
      <wsdl:documentation>
            Update the data associated with a scenario.
            Data missing from the resource scenario will not be removed
            from the scenario. Use the remove_resourcedata for this task.
        </wsdl:documentation>
      <wsdl:input name="update_resourcedata" message="tns:update_resourcedata" />
      <wsdl:output name="update_resourcedataResponse" message="tns:update_resourcedataResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_resourcegroup_data" parameterOrder="get_resourcegroup_data">
      <wsdl:documentation>
            Get all the resource scenarios for a given resourcegroup 
            in a given scenario. If type_id is specified, only
            return the resource scenarios for the attributes
            within the type.
        </wsdl:documentation>
      <wsdl:input name="get_resourcegroup_data" message="tns:get_resourcegroup_data" />
      <wsdl:output name="get_resourcegroup_dataResponse" message="tns:get_resourcegroup_dataResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_scenario" parameterOrder="get_scenario">
      <wsdl:documentation>
            Get the specified scenario
        </wsdl:documentation>
      <wsdl:input name="get_scenario" message="tns:get_scenario" />
      <wsdl:output name="get_scenarioResponse" message="tns:get_scenarioResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_network_data" parameterOrder="get_network_data">
      <wsdl:documentation>
            Get all the resource scenarios for a given network 
            in a given scenario. If type_id is specified, only
            return the resource scenarios for the attributes
            within the type.
        </wsdl:documentation>
      <wsdl:input name="get_network_data" message="tns:get_network_data" />
      <wsdl:output name="get_network_dataResponse" message="tns:get_network_dataResponse" />
    </wsdl:operation>
    <wsdl:operation name="update_scenario" parameterOrder="update_scenario">
      <wsdl:documentation>
            Update a single scenario
            as all resources already exist, there is no need to worry
            about negative IDS
        </wsdl:documentation>
      <wsdl:input name="update_scenario" message="tns:update_scenario" />
      <wsdl:output name="update_scenarioResponse" message="tns:update_scenarioResponse" />
    </wsdl:operation>
    <wsdl:operation name="compare_scenarios" parameterOrder="compare_scenarios">
      <wsdl:input name="compare_scenarios" message="tns:compare_scenarios" />
      <wsdl:output name="compare_scenariosResponse" message="tns:compare_scenariosResponse" />
    </wsdl:operation>
    <wsdl:operation name="clone_scenario" parameterOrder="clone_scenario">
      <wsdl:input name="clone_scenario" message="tns:clone_scenario" />
      <wsdl:output name="clone_scenarioResponse" message="tns:clone_scenarioResponse" />
    </wsdl:operation>
    <wsdl:operation name="lock_scenario" parameterOrder="lock_scenario">
      <wsdl:input name="lock_scenario" message="tns:lock_scenario" />
      <wsdl:output name="lock_scenarioResponse" message="tns:lock_scenarioResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_scenario_data" parameterOrder="get_scenario_data">
      <wsdl:input name="get_scenario_data" message="tns:get_scenario_data" />
      <wsdl:output name="get_scenario_dataResponse" message="tns:get_scenario_dataResponse" />
    </wsdl:operation>
    <wsdl:operation name="add_scenario" parameterOrder="add_scenario">
      <wsdl:documentation>
            Add a scenario to a specified network.
        </wsdl:documentation>
      <wsdl:input name="add_scenario" message="tns:add_scenario" />
      <wsdl:output name="add_scenarioResponse" message="tns:add_scenarioResponse" />
    </wsdl:operation>
    <wsdl:operation name="delete_scenario" parameterOrder="delete_scenario">
      <wsdl:documentation>
            Set the status of a scenario to 'X'.
        </wsdl:documentation>
      <wsdl:input name="delete_scenario" message="tns:delete_scenario" />
      <wsdl:output name="delete_scenarioResponse" message="tns:delete_scenarioResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_dataset_group" parameterOrder="get_dataset_group">
      <wsdl:input name="get_dataset_group" message="tns:get_dataset_group" />
      <wsdl:output name="get_dataset_groupResponse" message="tns:get_dataset_groupResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_dataset_group_by_name" parameterOrder="get_dataset_group_by_name">
      <wsdl:input name="get_dataset_group_by_name" message="tns:get_dataset_group_by_name" />
      <wsdl:output name="get_dataset_group_by_nameResponse" message="tns:get_dataset_group_by_nameResponse" />
    </wsdl:operation>
    <wsdl:operation name="echo_array" parameterOrder="echo_array">
      <wsdl:input name="echo_array" message="tns:echo_array" />
      <wsdl:output name="echo_arrayResponse" message="tns:echo_arrayResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_groups_like_name" parameterOrder="get_groups_like_name">
      <wsdl:documentation>
            Get all the datasets from the group with the specified name
        </wsdl:documentation>
      <wsdl:input name="get_groups_like_name" message="tns:get_groups_like_name" />
      <wsdl:output name="get_groups_like_nameResponse" message="tns:get_groups_like_nameResponse" />
    </wsdl:operation>
    <wsdl:operation name="add_dataset_group" parameterOrder="add_dataset_group">
      <wsdl:input name="add_dataset_group" message="tns:add_dataset_group" />
      <wsdl:output name="add_dataset_groupResponse" message="tns:add_dataset_groupResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_group_datasets" parameterOrder="get_group_datasets">
      <wsdl:documentation>
            Get all the datasets from the group with the specified name
        </wsdl:documentation>
      <wsdl:input name="get_group_datasets" message="tns:get_group_datasets" />
      <wsdl:output name="get_group_datasetsResponse" message="tns:get_group_datasetsResponse" />
    </wsdl:operation>
    <wsdl:operation name="bulk_insert_data" parameterOrder="bulk_insert_data">
      <wsdl:documentation>
            Insert sereral pieces of data at once.
        </wsdl:documentation>
      <wsdl:input name="bulk_insert_data" message="tns:bulk_insert_data" />
      <wsdl:output name="bulk_insert_dataResponse" message="tns:bulk_insert_dataResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_vals_between_times" parameterOrder="get_vals_between_times">
      <wsdl:input name="get_vals_between_times" message="tns:get_vals_between_times" />
      <wsdl:output name="get_vals_between_timesResponse" message="tns:get_vals_between_timesResponse" />
    </wsdl:operation>
    <wsdl:operation name="update_dataset" parameterOrder="update_dataset">
      <wsdl:documentation>
            Update a piece of data directly, rather than through a resource
            scenario.
        </wsdl:documentation>
      <wsdl:input name="update_dataset" message="tns:update_dataset" />
      <wsdl:output name="update_datasetResponse" message="tns:update_datasetResponse" />
    </wsdl:operation>
    <wsdl:operation name="echo_eqtimeseries" parameterOrder="echo_eqtimeseries">
      <wsdl:input name="echo_eqtimeseries" message="tns:echo_eqtimeseries" />
      <wsdl:output name="echo_eqtimeseriesResponse" message="tns:echo_eqtimeseriesResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_val_at_time" parameterOrder="get_val_at_time">
      <wsdl:input name="get_val_at_time" message="tns:get_val_at_time" />
      <wsdl:output name="get_val_at_timeResponse" message="tns:get_val_at_timeResponse" />
    </wsdl:operation>
    <wsdl:operation name="echo_scalar" parameterOrder="echo_scalar">
      <wsdl:input name="echo_scalar" message="tns:echo_scalar" />
      <wsdl:output name="echo_scalarResponse" message="tns:echo_scalarResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_metadata" parameterOrder="get_metadata">
      <wsdl:documentation>
            Get the metadata for a dataset or list of datasets
        </wsdl:documentation>
      <wsdl:input name="get_metadata" message="tns:get_metadata" />
      <wsdl:output name="get_metadataResponse" message="tns:get_metadataResponse" />
    </wsdl:operation>
    <wsdl:operation name="echo_timeseries" parameterOrder="echo_timeseries">
      <wsdl:input name="echo_timeseries" message="tns:echo_timeseries" />
      <wsdl:output name="echo_timeseriesResponse" message="tns:echo_timeseriesResponse" />
    </wsdl:operation>
    <wsdl:operation name="delete_dataset" parameterOrder="delete_dataset">
      <wsdl:documentation>
            Removes a piece of data from the DB.
            CAUTION! Use with care, as this cannot be undone easily.
        </wsdl:documentation>
      <wsdl:input name="delete_dataset" message="tns:delete_dataset" />
      <wsdl:output name="delete_datasetResponse" message="tns:delete_datasetResponse" />
    </wsdl:operation>
    <wsdl:operation name="check_json" parameterOrder="check_json">
      <wsdl:input name="check_json" message="tns:check_json" />
      <wsdl:output name="check_jsonResponse" message="tns:check_jsonResponse" />
    </wsdl:operation>
    <wsdl:operation name="echo_descriptor" parameterOrder="echo_descriptor">
      <wsdl:input name="echo_descriptor" message="tns:echo_descriptor" />
      <wsdl:output name="echo_descriptorResponse" message="tns:echo_descriptorResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_dataset" parameterOrder="get_dataset">
      <wsdl:documentation>
            Get a single dataset, by ID
        </wsdl:documentation>
      <wsdl:input name="get_dataset" message="tns:get_dataset" />
      <wsdl:output name="get_datasetResponse" message="tns:get_datasetResponse" />
    </wsdl:operation>
    <wsdl:operation name="check_plugin_status" parameterOrder="check_plugin_status">
      <wsdl:input name="check_plugin_status" message="tns:check_plugin_status" />
      <wsdl:output name="check_plugin_statusResponse" message="tns:check_plugin_statusResponse" />
    </wsdl:operation>
    <wsdl:operation name="run_plugin" parameterOrder="run_plugin">
      <wsdl:documentation>
            Run a plugin
        </wsdl:documentation>
      <wsdl:input name="run_plugin" message="tns:run_plugin" />
      <wsdl:output name="run_pluginResponse" message="tns:run_pluginResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_plugins" parameterOrder="get_plugins">
      <wsdl:documentation>
            Get all available plugins
        </wsdl:documentation>
      <wsdl:input name="get_plugins" message="tns:get_plugins" />
      <wsdl:output name="get_pluginsResponse" message="tns:get_pluginsResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_network_as_xml_template" parameterOrder="get_network_as_xml_template">
      <wsdl:documentation>
            Turn an existing network into an xml template
            using its attributes.
            If an optional scenario ID is passed in, default
            values will be populated from that scenario.
        </wsdl:documentation>
      <wsdl:input name="get_network_as_xml_template" message="tns:get_network_as_xml_template" />
      <wsdl:output name="get_network_as_xml_templateResponse" message="tns:get_network_as_xml_templateResponse" />
    </wsdl:operation>
    <wsdl:operation name="update_template" parameterOrder="update_template">
      <wsdl:documentation>
            Update template and a type and typeattrs.
        </wsdl:documentation>
      <wsdl:input name="update_template" message="tns:update_template" />
      <wsdl:output name="update_templateResponse" message="tns:update_templateResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_templatetype" parameterOrder="get_templatetype">
      <wsdl:documentation>
            Get a specific resource type by ID.
        </wsdl:documentation>
      <wsdl:input name="get_templatetype" message="tns:get_templatetype" />
      <wsdl:output name="get_templatetypeResponse" message="tns:get_templatetypeResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_template_by_name" parameterOrder="get_template_by_name">
      <wsdl:documentation>
            Get a specific resource template, either by ID or name.
        </wsdl:documentation>
      <wsdl:input name="get_template_by_name" message="tns:get_template_by_name" />
      <wsdl:output name="get_template_by_nameResponse" message="tns:get_template_by_nameResponse" />
    </wsdl:operation>
    <wsdl:operation name="add_typeattr" parameterOrder="add_typeattr">
      <wsdl:documentation>
            Add an typeattr to an existing type.
        </wsdl:documentation>
      <wsdl:input name="add_typeattr" message="tns:add_typeattr" />
      <wsdl:output name="add_typeattrResponse" message="tns:add_typeattrResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_matching_resource_types" parameterOrder="get_matching_resource_types">
      <wsdl:documentation>
            Get the possible types of a resource by checking its attributes
            against all available types.

            @returns A list of TypeSummary objects.
        </wsdl:documentation>
      <wsdl:input name="get_matching_resource_types" message="tns:get_matching_resource_types" />
      <wsdl:output name="get_matching_resource_typesResponse" message="tns:get_matching_resource_typesResponse" />
    </wsdl:operation>
    <wsdl:operation name="assign_types_to_resources" parameterOrder="assign_types_to_resources">
      <wsdl:documentation>Assign new types to list of resources.
        This function checks if the necessary
        attributes are present and adds them if needed. Non existing attributes
        are also added when the type is already assigned. This means that this
        function can also be used to update resources, when a resource type has
        changed.
        </wsdl:documentation>
      <wsdl:input name="assign_types_to_resources" message="tns:assign_types_to_resources" />
      <wsdl:output name="assign_types_to_resourcesResponse" message="tns:assign_types_to_resourcesResponse" />
    </wsdl:operation>
    <wsdl:operation name="assign_type_to_resource" parameterOrder="assign_type_to_resource">
      <wsdl:documentation>Assign new type to a resource. This function checks if the necessary
        attributes are present and adds them if needed. Non existing attributes
        are also added when the type is already assigned. This means that this
        function can also be used to update resources, when a resource type has
        changed.
        </wsdl:documentation>
      <wsdl:input name="assign_type_to_resource" message="tns:assign_type_to_resource" />
      <wsdl:output name="assign_type_to_resourceResponse" message="tns:assign_type_to_resourceResponse" />
    </wsdl:operation>
    <wsdl:operation name="validate_attr" parameterOrder="validate_attr">
      <wsdl:input name="validate_attr" message="tns:validate_attr" />
      <wsdl:output name="validate_attrResponse" message="tns:validate_attrResponse" />
    </wsdl:operation>
    <wsdl:operation name="update_templatetype" parameterOrder="update_templatetype">
      <wsdl:documentation>
            Update a resource type and its typeattrs.
            New typeattrs will be added. typeattrs not sent will be ignored.
            To delete typeattrs, call delete_typeattr
        </wsdl:documentation>
      <wsdl:input name="update_templatetype" message="tns:update_templatetype" />
      <wsdl:output name="update_templatetypeResponse" message="tns:update_templatetypeResponse" />
    </wsdl:operation>
    <wsdl:operation name="delete_typeattr" parameterOrder="delete_typeattr">
      <wsdl:documentation>
            Remove an typeattr from an existing type
        </wsdl:documentation>
      <wsdl:input name="delete_typeattr" message="tns:delete_typeattr" />
      <wsdl:output name="delete_typeattrResponse" message="tns:delete_typeattrResponse" />
    </wsdl:operation>
    <wsdl:operation name="add_template" parameterOrder="add_template">
      <wsdl:documentation>
            Add template and a type and typeattrs.
        </wsdl:documentation>
      <wsdl:input name="add_template" message="tns:add_template" />
      <wsdl:output name="add_templateResponse" message="tns:add_templateResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_template" parameterOrder="get_template">
      <wsdl:documentation>
            Get a specific resource template template, either by ID or name.
        </wsdl:documentation>
      <wsdl:input name="get_template" message="tns:get_template" />
      <wsdl:output name="get_templateResponse" message="tns:get_templateResponse" />
    </wsdl:operation>
    <wsdl:operation name="delete_templatetype" parameterOrder="delete_templatetype">
      <wsdl:documentation>
            Update template and a type and typeattrs.
        </wsdl:documentation>
      <wsdl:input name="delete_templatetype" message="tns:delete_templatetype" />
      <wsdl:output name="delete_templatetypeResponse" message="tns:delete_templatetypeResponse" />
    </wsdl:operation>
    <wsdl:operation name="upload_template_xml" parameterOrder="upload_template_xml">
      <wsdl:documentation>
            Add the template, type and typeattrs described
            in an XML file.

            Delete type, typeattr entries in the DB that are not in the XML file
            The assumption is that they have been deleted and are no longer required.
        </wsdl:documentation>
      <wsdl:input name="upload_template_xml" message="tns:upload_template_xml" />
      <wsdl:output name="upload_template_xmlResponse" message="tns:upload_template_xmlResponse" />
    </wsdl:operation>
    <wsdl:operation name="remove_attr_from_type" parameterOrder="remove_attr_from_type">
      <wsdl:documentation>

            Remove an attribute from a type
        </wsdl:documentation>
      <wsdl:input name="remove_attr_from_type" message="tns:remove_attr_from_type" />
      <wsdl:output name="remove_attr_from_typeResponse" message="tns:remove_attr_from_typeResponse" />
    </wsdl:operation>
    <wsdl:operation name="add_templatetype" parameterOrder="add_templatetype">
      <wsdl:documentation>
            Add a template type with typeattrs.
        </wsdl:documentation>
      <wsdl:input name="add_templatetype" message="tns:add_templatetype" />
      <wsdl:output name="add_templatetypeResponse" message="tns:add_templatetypeResponse" />
    </wsdl:operation>
    <wsdl:operation name="delete_template" parameterOrder="delete_template">
      <wsdl:documentation>
            Update template and a type and typeattrs.
        </wsdl:documentation>
      <wsdl:input name="delete_template" message="tns:delete_template" />
      <wsdl:output name="delete_templateResponse" message="tns:delete_templateResponse" />
    </wsdl:operation>
    <wsdl:operation name="apply_template_to_network" parameterOrder="apply_template_to_network">
      <wsdl:documentation>
            Given a template and a network, try to match up and assign
            all the nodes &amp; links in the network to the types in the template
        </wsdl:documentation>
      <wsdl:input name="apply_template_to_network" message="tns:apply_template_to_network" />
      <wsdl:output name="apply_template_to_networkResponse" message="tns:apply_template_to_networkResponse" />
    </wsdl:operation>
    <wsdl:operation name="remove_template_from_network" parameterOrder="remove_template_from_network">
      <wsdl:documentation>
            Given a template and a network, try to match up and assign
            all the nodes &amp; links in the network to the types in the template
        </wsdl:documentation>
      <wsdl:input name="remove_template_from_network" message="tns:remove_template_from_network" />
      <wsdl:output name="remove_template_from_networkResponse" message="tns:remove_template_from_networkResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_templates" parameterOrder="get_templates">
      <wsdl:documentation>
            Get all resource template templates.
        </wsdl:documentation>
      <wsdl:input name="get_templates" message="tns:get_templates" />
      <wsdl:output name="get_templatesResponse" message="tns:get_templatesResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_templatetype_by_name" parameterOrder="get_templatetype_by_name">
      <wsdl:documentation>
            Get a specific resource type by name.
        </wsdl:documentation>
      <wsdl:input name="get_templatetype_by_name" message="tns:get_templatetype_by_name" />
      <wsdl:output name="get_templatetype_by_nameResponse" message="tns:get_templatetype_by_nameResponse" />
    </wsdl:operation>
    <wsdl:operation name="remove_type_from_resource" parameterOrder="remove_type_from_resource">
      <wsdl:documentation>

            Remove a resource type trom a resource
        </wsdl:documentation>
      <wsdl:input name="remove_type_from_resource" message="tns:remove_type_from_resource" />
      <wsdl:output name="remove_type_from_resourceResponse" message="tns:remove_type_from_resourceResponse" />
    </wsdl:operation>
    <wsdl:operation name="add_image" parameterOrder="add_image">
      <wsdl:input name="add_image" message="tns:add_image" />
      <wsdl:output name="add_imageResponse" message="tns:add_imageResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_image" parameterOrder="get_image">
      <wsdl:input name="get_image" message="tns:get_image" />
      <wsdl:output name="get_imageResponse" message="tns:get_imageResponse" />
    </wsdl:operation>
    <wsdl:operation name="remove_image" parameterOrder="remove_image">
      <wsdl:input name="remove_image" message="tns:remove_image" />
      <wsdl:output name="remove_imageResponse" message="tns:remove_imageResponse" />
    </wsdl:operation>
    <wsdl:operation name="remove_file" parameterOrder="remove_file">
      <wsdl:input name="remove_file" message="tns:remove_file" />
      <wsdl:output name="remove_fileResponse" message="tns:remove_fileResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_file" parameterOrder="get_file">
      <wsdl:input name="get_file" message="tns:get_file" />
      <wsdl:output name="get_fileResponse" message="tns:get_fileResponse" />
    </wsdl:operation>
    <wsdl:operation name="add_file" parameterOrder="add_file">
      <wsdl:input name="add_file" message="tns:add_file" />
      <wsdl:output name="add_fileResponse" message="tns:add_fileResponse" />
    </wsdl:operation>
    <wsdl:operation name="set_project_permission" parameterOrder="set_project_permission">
      <wsdl:documentation>
            Set permissions on a project to a list of users, identifed by 
            their usernames. 
            
            The read flag ('Y' or 'N') sets read access, the write
            flag sets write access. If the read flag is 'N', then there is
            automatically no write access or share access.
        </wsdl:documentation>
      <wsdl:input name="set_project_permission" message="tns:set_project_permission" />
      <wsdl:output name="set_project_permissionResponse" message="tns:set_project_permissionResponse" />
    </wsdl:operation>
    <wsdl:operation name="share_network" parameterOrder="share_network">
      <wsdl:documentation>
            Share a network with a list of users, identified by their usernames.
            
            The read_only flag ('Y' or 'N') must be set
            to 'Y' to allow write access or sharing.

            The share flat ('Y' or 'N') must be set to 'Y' to allow the 
            project to be shared with other users 
        </wsdl:documentation>
      <wsdl:input name="share_network" message="tns:share_network" />
      <wsdl:output name="share_networkResponse" message="tns:share_networkResponse" />
    </wsdl:operation>
    <wsdl:operation name="lock_dataset" parameterOrder="lock_dataset">
      <wsdl:documentation>
            Lock a particular piece of data so it can only be seen by its owner.
            Only an owner can lock (and unlock) data.
            Data with no owner cannot be locked.
            
            The exceptions paramater lists the usernames of those with permission to view the data
            read, write and share indicate whether these users can read, edit and share this data.
        </wsdl:documentation>
      <wsdl:input name="lock_dataset" message="tns:lock_dataset" />
      <wsdl:output name="lock_datasetResponse" message="tns:lock_datasetResponse" />
    </wsdl:operation>
    <wsdl:operation name="set_network_permission" parameterOrder="set_network_permission">
      <wsdl:documentation>
            Set permissions on a network to a list of users, identifed by 
            their usernames. The read flag ('Y' or 'N') sets read access, the write
            flag sets write access. If the read flag is 'N', then there is
            automatically no write access or share access.
        </wsdl:documentation>
      <wsdl:input name="set_network_permission" message="tns:set_network_permission" />
      <wsdl:output name="set_network_permissionResponse" message="tns:set_network_permissionResponse" />
    </wsdl:operation>
    <wsdl:operation name="share_project" parameterOrder="share_project">
      <wsdl:documentation>
            Share an entire project with a list of users, identifed by 
            their usernames. 
            
            The read_only flag ('Y' or 'N') must be set
            to 'Y' to allow write access or sharing.

            The share flat ('Y' or 'N') must be set to 'Y' to allow the 
            project to be shared with other users
        </wsdl:documentation>
      <wsdl:input name="share_project" message="tns:share_project" />
      <wsdl:output name="share_projectResponse" message="tns:share_projectResponse" />
    </wsdl:operation>
    <wsdl:operation name="convert_units" parameterOrder="convert_units">
      <wsdl:documentation>Convert a value from one unit to another one.

        Example::

            &gt;&gt;&gt; cli = PluginLib.connect()
            &gt;&gt;&gt; cli.service.convert_units(20.0, 'm', 'km')
            0.02
        </wsdl:documentation>
      <wsdl:input name="convert_units" message="tns:convert_units" />
      <wsdl:output name="convert_unitsResponse" message="tns:convert_unitsResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_dimensions" parameterOrder="get_dimensions">
      <wsdl:documentation>Get a list of all physical dimensions available on the server.
        </wsdl:documentation>
      <wsdl:input name="get_dimensions" message="tns:get_dimensions" />
      <wsdl:output name="get_dimensionsResponse" message="tns:get_dimensionsResponse" />
    </wsdl:operation>
    <wsdl:operation name="add_dimension" parameterOrder="add_dimension">
      <wsdl:documentation>Add a physical dimensions (such as ``Volume`` or ``Speed``) to the
        servers list of dimensions. If the dimension already exists, nothing is
        done.
        </wsdl:documentation>
      <wsdl:input name="add_dimension" message="tns:add_dimension" />
      <wsdl:output name="add_dimensionResponse" message="tns:add_dimensionResponse" />
    </wsdl:operation>
    <wsdl:operation name="add_unit" parameterOrder="add_unit">
      <wsdl:documentation>Add a physical unit to the servers list of units. The Hydra server
        provides a complex model ``Unit`` which should be used to add a unit.

        A minimal example:

        .. code-block:: python

            from HydraLib import PluginLib

            cli = PluginLib.connect()

            new_unit = cli.factory.create('hyd:Unit')
            new_unit.name = 'Teaspoons per second'
            new_unit.abbr = 'tsp s^-1'
            new_unit.cf = 0               # Constant conversion factor
            new_unit.lf = 1.47867648e-05  # Linear conversion factor
            new_unit.dimension = 'Volumetric flow rate'
            new_unit.info = 'A flow of one teaspoon per second.'

            cli.service.add_unit(new_unit)
        </wsdl:documentation>
      <wsdl:input name="add_unit" message="tns:add_unit" />
      <wsdl:output name="add_unitResponse" message="tns:add_unitResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_units" parameterOrder="get_units">
      <wsdl:documentation>Get a list of all units corresponding to a physical dimension.
        </wsdl:documentation>
      <wsdl:input name="get_units" message="tns:get_units" />
      <wsdl:output name="get_unitsResponse" message="tns:get_unitsResponse" />
    </wsdl:operation>
    <wsdl:operation name="delete_dimension" parameterOrder="delete_dimension">
      <wsdl:documentation>Delete a physical dimension from the list of dimensions. Please note
        that deleting works only for dimensions listed in the custom file.
        </wsdl:documentation>
      <wsdl:input name="delete_dimension" message="tns:delete_dimension" />
      <wsdl:output name="delete_dimensionResponse" message="tns:delete_dimensionResponse" />
    </wsdl:operation>
    <wsdl:operation name="convert_dataset" parameterOrder="convert_dataset">
      <wsdl:documentation>Convert a whole dataset (specified by 'dataset_id' to new unit
        ('to_unit').
        </wsdl:documentation>
      <wsdl:input name="convert_dataset" message="tns:convert_dataset" />
      <wsdl:output name="convert_datasetResponse" message="tns:convert_datasetResponse" />
    </wsdl:operation>
    <wsdl:operation name="get_dimension" parameterOrder="get_dimension">
      <wsdl:documentation>Get the corresponding physical dimension for a given unit.

        Example::

            &gt;&gt;&gt; cli = PluginLib.connect()
            &gt;&gt;&gt; cli.service.get_dimension('m')
            Length
        </wsdl:documentation>
      <wsdl:input name="get_dimension" message="tns:get_dimension" />
      <wsdl:output name="get_dimensionResponse" message="tns:get_dimensionResponse" />
    </wsdl:operation>
    <wsdl:operation name="check_consistency" parameterOrder="check_consistency">
      <wsdl:documentation>Check if a given units corresponds to a physical dimension.
        </wsdl:documentation>
      <wsdl:input name="check_consistency" message="tns:check_consistency" />
      <wsdl:output name="check_consistencyResponse" message="tns:check_consistencyResponse" />
    </wsdl:operation>
    <wsdl:operation name="delete_unit" parameterOrder="delete_unit">
      <wsdl:documentation>Delete a unit from the custom unit collection.
        </wsdl:documentation>
      <wsdl:input name="delete_unit" message="tns:delete_unit" />
      <wsdl:output name="delete_unitResponse" message="tns:delete_unitResponse" />
    </wsdl:operation>
    <wsdl:operation name="update_unit" parameterOrder="update_unit">
      <wsdl:documentation>Update an existing unit added to the custom unit collection. Please
        not that units built in to the library can not be updated.
        </wsdl:documentation>
      <wsdl:input name="update_unit" message="tns:update_unit" />
      <wsdl:output name="update_unitResponse" message="tns:update_unitResponse" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="HydraSoapApplication" type="tns:HydraSoapApplication">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="login">
      <soap:operation soapAction="login" style="document" />
      <wsdl:input name="login">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="loginResponse">
        <soap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="AuthenticationError">
        <soap:fault use="literal" name="AuthenticationError" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="get_all_users">
      <soap:operation soapAction="get_all_users" style="document" />
      <wsdl:input name="get_all_users">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_all_usersResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="delete_user">
      <soap:operation soapAction="delete_user" style="document" />
      <wsdl:input name="delete_user">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="delete_userResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="delete_perm">
      <soap:operation soapAction="delete_perm" style="document" />
      <wsdl:input name="delete_perm">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="delete_permResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_perm_by_code">
      <soap:operation soapAction="get_perm_by_code" style="document" />
      <wsdl:input name="get_perm_by_code">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_perm_by_codeResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="delete_role_perm">
      <soap:operation soapAction="delete_role_perm" style="document" />
      <wsdl:input name="delete_role_perm">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="delete_role_permResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_user_by_name">
      <soap:operation soapAction="get_user_by_name" style="document" />
      <wsdl:input name="get_user_by_name">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_user_by_nameResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_user_roles">
      <soap:operation soapAction="get_user_roles" style="document" />
      <wsdl:input name="get_user_roles">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_user_rolesResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="set_user_role">
      <soap:operation soapAction="set_user_role" style="document" />
      <wsdl:input name="set_user_role">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="set_user_roleResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="delete_role">
      <soap:operation soapAction="delete_role" style="document" />
      <wsdl:input name="delete_role">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="delete_roleResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_username">
      <soap:operation soapAction="get_username" style="document" />
      <wsdl:input name="get_username">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_usernameResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="delete_user_role">
      <soap:operation soapAction="delete_user_role" style="document" />
      <wsdl:input name="delete_user_role">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="delete_user_roleResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_perm">
      <soap:operation soapAction="get_perm" style="document" />
      <wsdl:input name="get_perm">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_permResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_role">
      <soap:operation soapAction="get_role" style="document" />
      <wsdl:input name="get_role">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_roleResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_user_permissions">
      <soap:operation soapAction="get_user_permissions" style="document" />
      <wsdl:input name="get_user_permissions">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_user_permissionsResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_all_perms">
      <soap:operation soapAction="get_all_perms" style="document" />
      <wsdl:input name="get_all_perms">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_all_permsResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="add_perm">
      <soap:operation soapAction="add_perm" style="document" />
      <wsdl:input name="add_perm">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="add_permResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_role_by_code">
      <soap:operation soapAction="get_role_by_code" style="document" />
      <wsdl:input name="get_role_by_code">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_role_by_codeResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="add_user">
      <soap:operation soapAction="add_user" style="document" />
      <wsdl:input name="add_user">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="add_userResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update_user_display_name">
      <soap:operation soapAction="update_user_display_name" style="document" />
      <wsdl:input name="update_user_display_name">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="update_user_display_nameResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="set_role_perm">
      <soap:operation soapAction="set_role_perm" style="document" />
      <wsdl:input name="set_role_perm">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="set_role_permResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_all_roles">
      <soap:operation soapAction="get_all_roles" style="document" />
      <wsdl:input name="get_all_roles">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_all_rolesResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update_user_password">
      <soap:operation soapAction="update_user_password" style="document" />
      <wsdl:input name="update_user_password">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="update_user_passwordResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="add_role">
      <soap:operation soapAction="add_role" style="document" />
      <wsdl:input name="add_role">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="add_roleResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update_role">
      <soap:operation soapAction="update_role" style="document" />
      <wsdl:input name="update_role">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="update_roleResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="logout">
      <soap:operation soapAction="logout" style="document" />
      <wsdl:input name="logout">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="logoutResponse">
        <soap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="AuthenticationError">
        <soap:fault use="literal" name="AuthenticationError" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="test_get_all_node_data">
      <soap:operation soapAction="test_get_all_node_data" style="document" />
      <wsdl:input name="test_get_all_node_data">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="test_get_all_node_dataResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update_network">
      <soap:operation soapAction="update_network" style="document" />
      <wsdl:input name="update_network">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="update_networkResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="add_node">
      <soap:operation soapAction="add_node" style="document" />
      <wsdl:input name="add_node">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="add_nodeResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="purge_node">
      <soap:operation soapAction="purge_node" style="document" />
      <wsdl:input name="purge_node">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="purge_nodeResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="add_link">
      <soap:operation soapAction="add_link" style="document" />
      <wsdl:input name="add_link">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="add_linkResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="add_network">
      <soap:operation soapAction="add_network" style="document" />
      <wsdl:input name="add_network">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="add_networkResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="purge_link">
      <soap:operation soapAction="purge_link" style="document" />
      <wsdl:input name="purge_link">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="purge_linkResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="activate_group">
      <soap:operation soapAction="activate_group" style="document" />
      <wsdl:input name="activate_group">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="activate_groupResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_resources_of_type">
      <soap:operation soapAction="get_resources_of_type" style="document" />
      <wsdl:input name="get_resources_of_type">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_resources_of_typeResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="delete_group">
      <soap:operation soapAction="delete_group" style="document" />
      <wsdl:input name="delete_group">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="delete_groupResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_all_node_data">
      <soap:operation soapAction="get_all_node_data" style="document" />
      <wsdl:input name="get_all_node_data">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_all_node_dataResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update_link">
      <soap:operation soapAction="update_link" style="document" />
      <wsdl:input name="update_link">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="update_linkResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="delete_network">
      <soap:operation soapAction="delete_network" style="document" />
      <wsdl:input name="delete_network">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="delete_networkResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update_node">
      <soap:operation soapAction="update_node" style="document" />
      <wsdl:input name="update_node">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="update_nodeResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="delete_resourceattr">
      <soap:operation soapAction="delete_resourceattr" style="document" />
      <wsdl:input name="delete_resourceattr">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="delete_resourceattrResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="delete_node">
      <soap:operation soapAction="delete_node" style="document" />
      <wsdl:input name="delete_node">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="delete_nodeResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="network_exists">
      <soap:operation soapAction="network_exists" style="document" />
      <wsdl:input name="network_exists">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="network_existsResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_network_extents">
      <soap:operation soapAction="get_network_extents" style="document" />
      <wsdl:input name="get_network_extents">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_network_extentsResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="activate_network">
      <soap:operation soapAction="activate_network" style="document" />
      <wsdl:input name="activate_network">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="activate_networkResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_all_link_data">
      <soap:operation soapAction="get_all_link_data" style="document" />
      <wsdl:input name="get_all_link_data">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_all_link_dataResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clean_up_network">
      <soap:operation soapAction="clean_up_network" style="document" />
      <wsdl:input name="clean_up_network">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="clean_up_networkResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_node">
      <soap:operation soapAction="get_node" style="document" />
      <wsdl:input name="get_node">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_nodeResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_link">
      <soap:operation soapAction="get_link" style="document" />
      <wsdl:input name="get_link">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_linkResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_network">
      <soap:operation soapAction="get_network" style="document" />
      <wsdl:input name="get_network">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_networkResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_all_group_data">
      <soap:operation soapAction="get_all_group_data" style="document" />
      <wsdl:input name="get_all_group_data">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_all_group_dataResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="activate_link">
      <soap:operation soapAction="activate_link" style="document" />
      <wsdl:input name="activate_link">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="activate_linkResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_network_by_name">
      <soap:operation soapAction="get_network_by_name" style="document" />
      <wsdl:input name="get_network_by_name">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_network_by_nameResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="delete_link">
      <soap:operation soapAction="delete_link" style="document" />
      <wsdl:input name="delete_link">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="delete_linkResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_resourcegroup">
      <soap:operation soapAction="get_resourcegroup" style="document" />
      <wsdl:input name="get_resourcegroup">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_resourcegroupResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="add_group">
      <soap:operation soapAction="add_group" style="document" />
      <wsdl:input name="add_group">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="add_groupResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="test_get_all_link_data">
      <soap:operation soapAction="test_get_all_link_data" style="document" />
      <wsdl:input name="test_get_all_link_data">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="test_get_all_link_dataResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="validate_network_topology">
      <soap:operation soapAction="validate_network_topology" style="document" />
      <wsdl:input name="validate_network_topology">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="validate_network_topologyResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="activate_node">
      <soap:operation soapAction="activate_node" style="document" />
      <wsdl:input name="activate_node">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="activate_nodeResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_scenarios">
      <soap:operation soapAction="get_scenarios" style="document" />
      <wsdl:input name="get_scenarios">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_scenariosResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="add_project">
      <soap:operation soapAction="add_project" style="document" />
      <wsdl:input name="add_project">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="add_projectResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_projects">
      <soap:operation soapAction="get_projects" style="document" />
      <wsdl:input name="get_projects">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_projectsResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="delete_project">
      <soap:operation soapAction="delete_project" style="document" />
      <wsdl:input name="delete_project">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="delete_projectResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_networks">
      <soap:operation soapAction="get_networks" style="document" />
      <wsdl:input name="get_networks">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_networksResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update_project">
      <soap:operation soapAction="update_project" style="document" />
      <wsdl:input name="update_project">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="update_projectResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="purge_project">
      <soap:operation soapAction="purge_project" style="document" />
      <wsdl:input name="purge_project">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="purge_projectResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_project">
      <soap:operation soapAction="get_project" style="document" />
      <wsdl:input name="get_project">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_projectResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="add_resourcegroup">
      <soap:operation soapAction="add_resourcegroup" style="document" />
      <wsdl:input name="add_resourcegroup">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="add_resourcegroupResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="add_resourcegroupitem">
      <soap:operation soapAction="add_resourcegroupitem" style="document" />
      <wsdl:input name="add_resourcegroupitem">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="add_resourcegroupitemResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update_resourcegroup">
      <soap:operation soapAction="update_resourcegroup" style="document" />
      <wsdl:input name="update_resourcegroup">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="update_resourcegroupResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="delete_resourcegroupitem">
      <soap:operation soapAction="delete_resourcegroupitem" style="document" />
      <wsdl:input name="delete_resourcegroupitem">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="delete_resourcegroupitemResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="delete_resourcegroup">
      <soap:operation soapAction="delete_resourcegroup" style="document" />
      <wsdl:input name="delete_resourcegroup">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="delete_resourcegroupResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="add_attribute">
      <soap:operation soapAction="add_attribute" style="document" />
      <wsdl:input name="add_attribute">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="add_attributeResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="add_resource_attribute">
      <soap:operation soapAction="add_resource_attribute" style="document" />
      <wsdl:input name="add_resource_attribute">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="add_resource_attributeResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="delete_attribute">
      <soap:operation soapAction="delete_attribute" style="document" />
      <wsdl:input name="delete_attribute">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="delete_attributeResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_attribute">
      <soap:operation soapAction="get_attribute" style="document" />
      <wsdl:input name="get_attribute">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_attributeResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_attribute_by_id">
      <soap:operation soapAction="get_attribute_by_id" style="document" />
      <wsdl:input name="get_attribute_by_id">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_attribute_by_idResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="add_attributes">
      <soap:operation soapAction="add_attributes" style="document" />
      <wsdl:input name="add_attributes">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="add_attributesResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="add_node_attrs_from_type">
      <soap:operation soapAction="add_node_attrs_from_type" style="document" />
      <wsdl:input name="add_node_attrs_from_type">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="add_node_attrs_from_typeResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_attributes">
      <soap:operation soapAction="get_attributes" style="document" />
      <wsdl:input name="get_attributes">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_attributesResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="purge_scenario">
      <soap:operation soapAction="purge_scenario" style="document" />
      <wsdl:input name="purge_scenario">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="purge_scenarioResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_attribute_datasets">
      <soap:operation soapAction="get_attribute_datasets" style="document" />
      <wsdl:input name="get_attribute_datasets">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_attribute_datasetsResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_node_data">
      <soap:operation soapAction="get_node_data" style="document" />
      <wsdl:input name="get_node_data">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_node_dataResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_link_data">
      <soap:operation soapAction="get_link_data" style="document" />
      <wsdl:input name="get_link_data">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_link_dataResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="unlock_scenario">
      <soap:operation soapAction="unlock_scenario" style="document" />
      <wsdl:input name="unlock_scenario">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="unlock_scenarioResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_node_attribute_data">
      <soap:operation soapAction="get_node_attribute_data" style="document" />
      <wsdl:input name="get_node_attribute_data">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_node_attribute_dataResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="activate_scenario">
      <soap:operation soapAction="activate_scenario" style="document" />
      <wsdl:input name="activate_scenario">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="activate_scenarioResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="delete_resourcedata">
      <soap:operation soapAction="delete_resourcedata" style="document" />
      <wsdl:input name="delete_resourcedata">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="delete_resourcedataResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_dataset_scenarios">
      <soap:operation soapAction="get_dataset_scenarios" style="document" />
      <wsdl:input name="get_dataset_scenarios">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_dataset_scenariosResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="add_data_to_attribute">
      <soap:operation soapAction="add_data_to_attribute" style="document" />
      <wsdl:input name="add_data_to_attribute">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="add_data_to_attributeResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update_resourcedata">
      <soap:operation soapAction="update_resourcedata" style="document" />
      <wsdl:input name="update_resourcedata">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="update_resourcedataResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_resourcegroup_data">
      <soap:operation soapAction="get_resourcegroup_data" style="document" />
      <wsdl:input name="get_resourcegroup_data">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_resourcegroup_dataResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_scenario">
      <soap:operation soapAction="get_scenario" style="document" />
      <wsdl:input name="get_scenario">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_scenarioResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_network_data">
      <soap:operation soapAction="get_network_data" style="document" />
      <wsdl:input name="get_network_data">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_network_dataResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update_scenario">
      <soap:operation soapAction="update_scenario" style="document" />
      <wsdl:input name="update_scenario">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="update_scenarioResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="compare_scenarios">
      <soap:operation soapAction="compare_scenarios" style="document" />
      <wsdl:input name="compare_scenarios">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="compare_scenariosResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clone_scenario">
      <soap:operation soapAction="clone_scenario" style="document" />
      <wsdl:input name="clone_scenario">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="clone_scenarioResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="lock_scenario">
      <soap:operation soapAction="lock_scenario" style="document" />
      <wsdl:input name="lock_scenario">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="lock_scenarioResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_scenario_data">
      <soap:operation soapAction="get_scenario_data" style="document" />
      <wsdl:input name="get_scenario_data">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_scenario_dataResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="add_scenario">
      <soap:operation soapAction="add_scenario" style="document" />
      <wsdl:input name="add_scenario">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="add_scenarioResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="delete_scenario">
      <soap:operation soapAction="delete_scenario" style="document" />
      <wsdl:input name="delete_scenario">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="delete_scenarioResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_dataset_group">
      <soap:operation soapAction="get_dataset_group" style="document" />
      <wsdl:input name="get_dataset_group">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_dataset_groupResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_dataset_group_by_name">
      <soap:operation soapAction="get_dataset_group_by_name" style="document" />
      <wsdl:input name="get_dataset_group_by_name">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_dataset_group_by_nameResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo_array">
      <soap:operation soapAction="echo_array" style="document" />
      <wsdl:input name="echo_array">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="echo_arrayResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_groups_like_name">
      <soap:operation soapAction="get_groups_like_name" style="document" />
      <wsdl:input name="get_groups_like_name">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_groups_like_nameResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="add_dataset_group">
      <soap:operation soapAction="add_dataset_group" style="document" />
      <wsdl:input name="add_dataset_group">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="add_dataset_groupResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_group_datasets">
      <soap:operation soapAction="get_group_datasets" style="document" />
      <wsdl:input name="get_group_datasets">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_group_datasetsResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="bulk_insert_data">
      <soap:operation soapAction="bulk_insert_data" style="document" />
      <wsdl:input name="bulk_insert_data">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="bulk_insert_dataResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_vals_between_times">
      <soap:operation soapAction="get_vals_between_times" style="document" />
      <wsdl:input name="get_vals_between_times">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_vals_between_timesResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update_dataset">
      <soap:operation soapAction="update_dataset" style="document" />
      <wsdl:input name="update_dataset">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="update_datasetResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo_eqtimeseries">
      <soap:operation soapAction="echo_eqtimeseries" style="document" />
      <wsdl:input name="echo_eqtimeseries">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="echo_eqtimeseriesResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_val_at_time">
      <soap:operation soapAction="get_val_at_time" style="document" />
      <wsdl:input name="get_val_at_time">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_val_at_timeResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo_scalar">
      <soap:operation soapAction="echo_scalar" style="document" />
      <wsdl:input name="echo_scalar">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="echo_scalarResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_metadata">
      <soap:operation soapAction="get_metadata" style="document" />
      <wsdl:input name="get_metadata">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_metadataResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo_timeseries">
      <soap:operation soapAction="echo_timeseries" style="document" />
      <wsdl:input name="echo_timeseries">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="echo_timeseriesResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="delete_dataset">
      <soap:operation soapAction="delete_dataset" style="document" />
      <wsdl:input name="delete_dataset">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="delete_datasetResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="check_json">
      <soap:operation soapAction="check_json" style="document" />
      <wsdl:input name="check_json">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="check_jsonResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo_descriptor">
      <soap:operation soapAction="echo_descriptor" style="document" />
      <wsdl:input name="echo_descriptor">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="echo_descriptorResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_dataset">
      <soap:operation soapAction="get_dataset" style="document" />
      <wsdl:input name="get_dataset">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_datasetResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="check_plugin_status">
      <soap:operation soapAction="check_plugin_status" style="document" />
      <wsdl:input name="check_plugin_status">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="check_plugin_statusResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="run_plugin">
      <soap:operation soapAction="run_plugin" style="document" />
      <wsdl:input name="run_plugin">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="run_pluginResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_plugins">
      <soap:operation soapAction="get_plugins" style="document" />
      <wsdl:input name="get_plugins">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_pluginsResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_network_as_xml_template">
      <soap:operation soapAction="get_network_as_xml_template" style="document" />
      <wsdl:input name="get_network_as_xml_template">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_network_as_xml_templateResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update_template">
      <soap:operation soapAction="update_template" style="document" />
      <wsdl:input name="update_template">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="update_templateResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_templatetype">
      <soap:operation soapAction="get_templatetype" style="document" />
      <wsdl:input name="get_templatetype">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_templatetypeResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_template_by_name">
      <soap:operation soapAction="get_template_by_name" style="document" />
      <wsdl:input name="get_template_by_name">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_template_by_nameResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="add_typeattr">
      <soap:operation soapAction="add_typeattr" style="document" />
      <wsdl:input name="add_typeattr">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="add_typeattrResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_matching_resource_types">
      <soap:operation soapAction="get_matching_resource_types" style="document" />
      <wsdl:input name="get_matching_resource_types">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_matching_resource_typesResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="assign_types_to_resources">
      <soap:operation soapAction="assign_types_to_resources" style="document" />
      <wsdl:input name="assign_types_to_resources">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="assign_types_to_resourcesResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="assign_type_to_resource">
      <soap:operation soapAction="assign_type_to_resource" style="document" />
      <wsdl:input name="assign_type_to_resource">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="assign_type_to_resourceResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="validate_attr">
      <soap:operation soapAction="validate_attr" style="document" />
      <wsdl:input name="validate_attr">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="validate_attrResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update_templatetype">
      <soap:operation soapAction="update_templatetype" style="document" />
      <wsdl:input name="update_templatetype">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="update_templatetypeResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="delete_typeattr">
      <soap:operation soapAction="delete_typeattr" style="document" />
      <wsdl:input name="delete_typeattr">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="delete_typeattrResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="add_template">
      <soap:operation soapAction="add_template" style="document" />
      <wsdl:input name="add_template">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="add_templateResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_template">
      <soap:operation soapAction="get_template" style="document" />
      <wsdl:input name="get_template">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_templateResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="delete_templatetype">
      <soap:operation soapAction="delete_templatetype" style="document" />
      <wsdl:input name="delete_templatetype">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="delete_templatetypeResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="upload_template_xml">
      <soap:operation soapAction="upload_template_xml" style="document" />
      <wsdl:input name="upload_template_xml">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="upload_template_xmlResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="remove_attr_from_type">
      <soap:operation soapAction="remove_attr_from_type" style="document" />
      <wsdl:input name="remove_attr_from_type">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="remove_attr_from_typeResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="add_templatetype">
      <soap:operation soapAction="add_templatetype" style="document" />
      <wsdl:input name="add_templatetype">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="add_templatetypeResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="delete_template">
      <soap:operation soapAction="delete_template" style="document" />
      <wsdl:input name="delete_template">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="delete_templateResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="apply_template_to_network">
      <soap:operation soapAction="apply_template_to_network" style="document" />
      <wsdl:input name="apply_template_to_network">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="apply_template_to_networkResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="remove_template_from_network">
      <soap:operation soapAction="remove_template_from_network" style="document" />
      <wsdl:input name="remove_template_from_network">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="remove_template_from_networkResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_templates">
      <soap:operation soapAction="get_templates" style="document" />
      <wsdl:input name="get_templates">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_templatesResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_templatetype_by_name">
      <soap:operation soapAction="get_templatetype_by_name" style="document" />
      <wsdl:input name="get_templatetype_by_name">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_templatetype_by_nameResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="remove_type_from_resource">
      <soap:operation soapAction="remove_type_from_resource" style="document" />
      <wsdl:input name="remove_type_from_resource">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="remove_type_from_resourceResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="add_image">
      <soap:operation soapAction="add_image" style="document" />
      <wsdl:input name="add_image">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="add_imageResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_image">
      <soap:operation soapAction="get_image" style="document" />
      <wsdl:input name="get_image">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_imageResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="remove_image">
      <soap:operation soapAction="remove_image" style="document" />
      <wsdl:input name="remove_image">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="remove_imageResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="remove_file">
      <soap:operation soapAction="remove_file" style="document" />
      <wsdl:input name="remove_file">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="remove_fileResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_file">
      <soap:operation soapAction="get_file" style="document" />
      <wsdl:input name="get_file">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_fileResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="add_file">
      <soap:operation soapAction="add_file" style="document" />
      <wsdl:input name="add_file">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="add_fileResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="set_project_permission">
      <soap:operation soapAction="set_project_permission" style="document" />
      <wsdl:input name="set_project_permission">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="set_project_permissionResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="share_network">
      <soap:operation soapAction="share_network" style="document" />
      <wsdl:input name="share_network">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="share_networkResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="lock_dataset">
      <soap:operation soapAction="lock_dataset" style="document" />
      <wsdl:input name="lock_dataset">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="lock_datasetResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="set_network_permission">
      <soap:operation soapAction="set_network_permission" style="document" />
      <wsdl:input name="set_network_permission">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="set_network_permissionResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="share_project">
      <soap:operation soapAction="share_project" style="document" />
      <wsdl:input name="share_project">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="share_projectResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="convert_units">
      <soap:operation soapAction="convert_units" style="document" />
      <wsdl:input name="convert_units">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="convert_unitsResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_dimensions">
      <soap:operation soapAction="get_dimensions" style="document" />
      <wsdl:input name="get_dimensions">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_dimensionsResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="add_dimension">
      <soap:operation soapAction="add_dimension" style="document" />
      <wsdl:input name="add_dimension">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="add_dimensionResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="add_unit">
      <soap:operation soapAction="add_unit" style="document" />
      <wsdl:input name="add_unit">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="add_unitResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_units">
      <soap:operation soapAction="get_units" style="document" />
      <wsdl:input name="get_units">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_unitsResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="delete_dimension">
      <soap:operation soapAction="delete_dimension" style="document" />
      <wsdl:input name="delete_dimension">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="delete_dimensionResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="convert_dataset">
      <soap:operation soapAction="convert_dataset" style="document" />
      <wsdl:input name="convert_dataset">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="convert_datasetResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get_dimension">
      <soap:operation soapAction="get_dimension" style="document" />
      <wsdl:input name="get_dimension">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="get_dimensionResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="check_consistency">
      <soap:operation soapAction="check_consistency" style="document" />
      <wsdl:input name="check_consistency">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="check_consistencyResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="delete_unit">
      <soap:operation soapAction="delete_unit" style="document" />
      <wsdl:input name="delete_unit">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="delete_unitResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update_unit">
      <soap:operation soapAction="update_unit" style="document" />
      <wsdl:input name="update_unit">
        <soap:body use="literal" />
        <soap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="update_unitResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="AuthenticationService">
    <wsdl:port name="HydraSoapApplication" binding="tns:HydraSoapApplication">
      <soap:address location="http://127.0.0.1:8080/soap" />
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="UserService">
    <wsdl:port name="HydraSoapApplication" binding="tns:HydraSoapApplication">
      <soap:address location="http://127.0.0.1:8080/soap" />
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="LogoutService">
    <wsdl:port name="HydraSoapApplication" binding="tns:HydraSoapApplication">
      <soap:address location="http://127.0.0.1:8080/soap" />
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="NetworkService">
    <wsdl:port name="HydraSoapApplication" binding="tns:HydraSoapApplication">
      <soap:address location="http://127.0.0.1:8080/soap" />
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="ProjectService">
    <wsdl:port name="HydraSoapApplication" binding="tns:HydraSoapApplication">
      <soap:address location="http://127.0.0.1:8080/soap" />
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="ResourceGroupService">
    <wsdl:port name="HydraSoapApplication" binding="tns:HydraSoapApplication">
      <soap:address location="http://127.0.0.1:8080/soap" />
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="AttributeService">
    <wsdl:port name="HydraSoapApplication" binding="tns:HydraSoapApplication">
      <soap:address location="http://127.0.0.1:8080/soap" />
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="ScenarioService">
    <wsdl:port name="HydraSoapApplication" binding="tns:HydraSoapApplication">
      <soap:address location="http://127.0.0.1:8080/soap" />
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="DataService">
    <wsdl:port name="HydraSoapApplication" binding="tns:HydraSoapApplication">
      <soap:address location="http://127.0.0.1:8080/soap" />
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="PluginService">
    <wsdl:port name="HydraSoapApplication" binding="tns:HydraSoapApplication">
      <soap:address location="http://127.0.0.1:8080/soap" />
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="TemplateService">
    <wsdl:port name="HydraSoapApplication" binding="tns:HydraSoapApplication">
      <soap:address location="http://127.0.0.1:8080/soap" />
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="ImageService">
    <wsdl:port name="HydraSoapApplication" binding="tns:HydraSoapApplication">
      <soap:address location="http://127.0.0.1:8080/soap" />
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="FileService">
    <wsdl:port name="HydraSoapApplication" binding="tns:HydraSoapApplication">
      <soap:address location="http://127.0.0.1:8080/soap" />
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="SharingService">
    <wsdl:port name="HydraSoapApplication" binding="tns:HydraSoapApplication">
      <soap:address location="http://127.0.0.1:8080/soap" />
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="UnitService">
    <wsdl:port name="HydraSoapApplication" binding="tns:HydraSoapApplication">
      <soap:address location="http://127.0.0.1:8080/soap" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>